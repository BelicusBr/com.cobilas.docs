### YamlMime:ManagedReference
items:
- uid: Cobilas.Threading.Tasks.TaskPool
  commentId: T:Cobilas.Threading.Tasks.TaskPool
  id: TaskPool
  parent: Cobilas.Threading.Tasks
  children:
  - Cobilas.Threading.Tasks.TaskPool.Count
  - Cobilas.Threading.Tasks.TaskPool.InitTask(System.Action)
  - Cobilas.Threading.Tasks.TaskPool.InitTask(System.Action,System.Threading.Tasks.Task@)
  - Cobilas.Threading.Tasks.TaskPool.InitTask``1(System.Func{``0})
  - Cobilas.Threading.Tasks.TaskPool.InitTask``1(System.Func{``0},System.Threading.Tasks.Task{``0}@)
  - Cobilas.Threading.Tasks.TaskPool.NonVacantTaskCount
  - Cobilas.Threading.Tasks.TaskPool.VacantTaskCount
  langs:
  - csharp
  - vb
  name: TaskPool
  nameWithType: TaskPool
  fullName: Cobilas.Threading.Tasks.TaskPool
  type: Class
  source:
    remote:
      path: Cobilas/Threading/Tasks/TaskPool.cs
      branch: main
      repo: https://github.com/BelicusBr/com.cobilas.cs.lib.core.net4x.git
    id: TaskPool
    path: ../../CSharp Dev/Lib's/com.cobilas.cs.lib.core.net4x/Cobilas/Threading/Tasks/TaskPool.cs
    startLine: 6
  assemblies:
  - Cobilas.Core
  namespace: Cobilas.Threading.Tasks
  summary: Allows the use of a task pool.
  example: []
  syntax:
    content: public static class TaskPool
    content.vb: Public Module TaskPool
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Cobilas.Threading.Tasks.TaskPool.Count
  commentId: P:Cobilas.Threading.Tasks.TaskPool.Count
  id: Count
  parent: Cobilas.Threading.Tasks.TaskPool
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: TaskPool.Count
  fullName: Cobilas.Threading.Tasks.TaskPool.Count
  type: Property
  source:
    remote:
      path: Cobilas/Threading/Tasks/TaskPool.cs
      branch: main
      repo: https://github.com/BelicusBr/com.cobilas.cs.lib.core.net4x.git
    id: Count
    path: ../../CSharp Dev/Lib's/com.cobilas.cs.lib.core.net4x/Cobilas/Threading/Tasks/TaskPool.cs
    startLine: 10
  assemblies:
  - Cobilas.Core
  namespace: Cobilas.Threading.Tasks
  summary: Returns the number of allocated tasks.
  example: []
  syntax:
    content: public static int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly Property Count As Integer
  overload: Cobilas.Threading.Tasks.TaskPool.Count*
- uid: Cobilas.Threading.Tasks.TaskPool.VacantTaskCount
  commentId: P:Cobilas.Threading.Tasks.TaskPool.VacantTaskCount
  id: VacantTaskCount
  parent: Cobilas.Threading.Tasks.TaskPool
  langs:
  - csharp
  - vb
  name: VacantTaskCount
  nameWithType: TaskPool.VacantTaskCount
  fullName: Cobilas.Threading.Tasks.TaskPool.VacantTaskCount
  type: Property
  source:
    remote:
      path: Cobilas/Threading/Tasks/TaskPool.cs
      branch: main
      repo: https://github.com/BelicusBr/com.cobilas.cs.lib.core.net4x.git
    id: VacantTaskCount
    path: ../../CSharp Dev/Lib's/com.cobilas.cs.lib.core.net4x/Cobilas/Threading/Tasks/TaskPool.cs
    startLine: 12
  assemblies:
  - Cobilas.Core
  namespace: Cobilas.Threading.Tasks
  summary: The number of tasks that are already vacant.
  example: []
  syntax:
    content: public static int VacantTaskCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly Property VacantTaskCount As Integer
  overload: Cobilas.Threading.Tasks.TaskPool.VacantTaskCount*
- uid: Cobilas.Threading.Tasks.TaskPool.NonVacantTaskCount
  commentId: P:Cobilas.Threading.Tasks.TaskPool.NonVacantTaskCount
  id: NonVacantTaskCount
  parent: Cobilas.Threading.Tasks.TaskPool
  langs:
  - csharp
  - vb
  name: NonVacantTaskCount
  nameWithType: TaskPool.NonVacantTaskCount
  fullName: Cobilas.Threading.Tasks.TaskPool.NonVacantTaskCount
  type: Property
  source:
    remote:
      path: Cobilas/Threading/Tasks/TaskPool.cs
      branch: main
      repo: https://github.com/BelicusBr/com.cobilas.cs.lib.core.net4x.git
    id: NonVacantTaskCount
    path: ../../CSharp Dev/Lib's/com.cobilas.cs.lib.core.net4x/Cobilas/Threading/Tasks/TaskPool.cs
    startLine: 22
  assemblies:
  - Cobilas.Core
  namespace: Cobilas.Threading.Tasks
  summary: The number of tasks that are not vacant.
  example: []
  syntax:
    content: public static int NonVacantTaskCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly Property NonVacantTaskCount As Integer
  overload: Cobilas.Threading.Tasks.TaskPool.NonVacantTaskCount*
- uid: Cobilas.Threading.Tasks.TaskPool.InitTask(System.Action,System.Threading.Tasks.Task@)
  commentId: M:Cobilas.Threading.Tasks.TaskPool.InitTask(System.Action,System.Threading.Tasks.Task@)
  id: InitTask(System.Action,System.Threading.Tasks.Task@)
  parent: Cobilas.Threading.Tasks.TaskPool
  langs:
  - csharp
  - vb
  name: InitTask(Action, out Task)
  nameWithType: TaskPool.InitTask(Action, out Task)
  fullName: Cobilas.Threading.Tasks.TaskPool.InitTask(System.Action, out System.Threading.Tasks.Task)
  type: Method
  source:
    remote:
      path: Cobilas/Threading/Tasks/TaskPool.cs
      branch: main
      repo: https://github.com/BelicusBr/com.cobilas.cs.lib.core.net4x.git
    id: InitTask
    path: ../../CSharp Dev/Lib's/com.cobilas.cs.lib.core.net4x/Cobilas/Threading/Tasks/TaskPool.cs
    startLine: 25
  assemblies:
  - Cobilas.Core
  namespace: Cobilas.Threading.Tasks
  summary: The number of tasks that are not vacant.
  example: []
  syntax:
    content: public static void InitTask(Action action, out Task task)
    parameters:
    - id: action
      type: System.Action
    - id: task
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Sub InitTask(action As Action, task As Task)
  overload: Cobilas.Threading.Tasks.TaskPool.InitTask*
  nameWithType.vb: TaskPool.InitTask(Action, Task)
  fullName.vb: Cobilas.Threading.Tasks.TaskPool.InitTask(System.Action, System.Threading.Tasks.Task)
  name.vb: InitTask(Action, Task)
- uid: Cobilas.Threading.Tasks.TaskPool.InitTask(System.Action)
  commentId: M:Cobilas.Threading.Tasks.TaskPool.InitTask(System.Action)
  id: InitTask(System.Action)
  parent: Cobilas.Threading.Tasks.TaskPool
  langs:
  - csharp
  - vb
  name: InitTask(Action)
  nameWithType: TaskPool.InitTask(Action)
  fullName: Cobilas.Threading.Tasks.TaskPool.InitTask(System.Action)
  type: Method
  source:
    remote:
      path: Cobilas/Threading/Tasks/TaskPool.cs
      branch: main
      repo: https://github.com/BelicusBr/com.cobilas.cs.lib.core.net4x.git
    id: InitTask
    path: ../../CSharp Dev/Lib's/com.cobilas.cs.lib.core.net4x/Cobilas/Threading/Tasks/TaskPool.cs
    startLine: 34
  assemblies:
  - Cobilas.Core
  namespace: Cobilas.Threading.Tasks
  summary: The number of tasks that are not vacant.
  example: []
  syntax:
    content: public static void InitTask(Action action)
    parameters:
    - id: action
      type: System.Action
    content.vb: Public Shared Sub InitTask(action As Action)
  overload: Cobilas.Threading.Tasks.TaskPool.InitTask*
- uid: Cobilas.Threading.Tasks.TaskPool.InitTask``1(System.Func{``0},System.Threading.Tasks.Task{``0}@)
  commentId: M:Cobilas.Threading.Tasks.TaskPool.InitTask``1(System.Func{``0},System.Threading.Tasks.Task{``0}@)
  id: InitTask``1(System.Func{``0},System.Threading.Tasks.Task{``0}@)
  parent: Cobilas.Threading.Tasks.TaskPool
  langs:
  - csharp
  - vb
  name: InitTask<TRes>(Func<TRes>, out Task<TRes>)
  nameWithType: TaskPool.InitTask<TRes>(Func<TRes>, out Task<TRes>)
  fullName: Cobilas.Threading.Tasks.TaskPool.InitTask<TRes>(System.Func<TRes>, out System.Threading.Tasks.Task<TRes>)
  type: Method
  source:
    remote:
      path: Cobilas/Threading/Tasks/TaskPool.cs
      branch: main
      repo: https://github.com/BelicusBr/com.cobilas.cs.lib.core.net4x.git
    id: InitTask
    path: ../../CSharp Dev/Lib's/com.cobilas.cs.lib.core.net4x/Cobilas/Threading/Tasks/TaskPool.cs
    startLine: 38
  assemblies:
  - Cobilas.Core
  namespace: Cobilas.Threading.Tasks
  summary: The number of tasks that are not vacant.
  example: []
  syntax:
    content: public static void InitTask<TRes>(Func<TRes> func, out Task<TRes> res)
    parameters:
    - id: func
      type: System.Func{{TRes}}
    - id: res
      type: System.Threading.Tasks.Task{{TRes}}
    typeParameters:
    - id: TRes
    content.vb: Public Shared Sub InitTask(Of TRes)(func As Func(Of TRes), res As Task(Of TRes))
  overload: Cobilas.Threading.Tasks.TaskPool.InitTask*
  nameWithType.vb: TaskPool.InitTask(Of TRes)(Func(Of TRes), Task(Of TRes))
  fullName.vb: Cobilas.Threading.Tasks.TaskPool.InitTask(Of TRes)(System.Func(Of TRes), System.Threading.Tasks.Task(Of TRes))
  name.vb: InitTask(Of TRes)(Func(Of TRes), Task(Of TRes))
- uid: Cobilas.Threading.Tasks.TaskPool.InitTask``1(System.Func{``0})
  commentId: M:Cobilas.Threading.Tasks.TaskPool.InitTask``1(System.Func{``0})
  id: InitTask``1(System.Func{``0})
  parent: Cobilas.Threading.Tasks.TaskPool
  langs:
  - csharp
  - vb
  name: InitTask<TRes>(Func<TRes>)
  nameWithType: TaskPool.InitTask<TRes>(Func<TRes>)
  fullName: Cobilas.Threading.Tasks.TaskPool.InitTask<TRes>(System.Func<TRes>)
  type: Method
  source:
    remote:
      path: Cobilas/Threading/Tasks/TaskPool.cs
      branch: main
      repo: https://github.com/BelicusBr/com.cobilas.cs.lib.core.net4x.git
    id: InitTask
    path: ../../CSharp Dev/Lib's/com.cobilas.cs.lib.core.net4x/Cobilas/Threading/Tasks/TaskPool.cs
    startLine: 51
  assemblies:
  - Cobilas.Core
  namespace: Cobilas.Threading.Tasks
  summary: The number of tasks that are not vacant.
  example: []
  syntax:
    content: public static void InitTask<TRes>(Func<TRes> func)
    parameters:
    - id: func
      type: System.Func{{TRes}}
    typeParameters:
    - id: TRes
    content.vb: Public Shared Sub InitTask(Of TRes)(func As Func(Of TRes))
  overload: Cobilas.Threading.Tasks.TaskPool.InitTask*
  nameWithType.vb: TaskPool.InitTask(Of TRes)(Func(Of TRes))
  fullName.vb: Cobilas.Threading.Tasks.TaskPool.InitTask(Of TRes)(System.Func(Of TRes))
  name.vb: InitTask(Of TRes)(Func(Of TRes))
references:
- uid: Cobilas.Threading.Tasks
  commentId: N:Cobilas.Threading.Tasks
  href: Cobilas.html
  name: Cobilas.Threading.Tasks
  nameWithType: Cobilas.Threading.Tasks
  fullName: Cobilas.Threading.Tasks
  spec.csharp:
  - uid: Cobilas
    name: Cobilas
    href: Cobilas.html
  - name: .
  - uid: Cobilas.Threading
    name: Threading
    href: Cobilas.Threading.html
  - name: .
  - uid: Cobilas.Threading.Tasks
    name: Tasks
    href: Cobilas.Threading.Tasks.html
  spec.vb:
  - uid: Cobilas
    name: Cobilas
    href: Cobilas.html
  - name: .
  - uid: Cobilas.Threading
    name: Threading
    href: Cobilas.Threading.html
  - name: .
  - uid: Cobilas.Threading.Tasks
    name: Tasks
    href: Cobilas.Threading.Tasks.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Cobilas.Threading.Tasks.TaskPool.Count*
  commentId: Overload:Cobilas.Threading.Tasks.TaskPool.Count
  href: Cobilas.Threading.Tasks.TaskPool.html#Cobilas_Threading_Tasks_TaskPool_Count
  name: Count
  nameWithType: TaskPool.Count
  fullName: Cobilas.Threading.Tasks.TaskPool.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Cobilas.Threading.Tasks.TaskPool.VacantTaskCount*
  commentId: Overload:Cobilas.Threading.Tasks.TaskPool.VacantTaskCount
  href: Cobilas.Threading.Tasks.TaskPool.html#Cobilas_Threading_Tasks_TaskPool_VacantTaskCount
  name: VacantTaskCount
  nameWithType: TaskPool.VacantTaskCount
  fullName: Cobilas.Threading.Tasks.TaskPool.VacantTaskCount
- uid: Cobilas.Threading.Tasks.TaskPool.NonVacantTaskCount*
  commentId: Overload:Cobilas.Threading.Tasks.TaskPool.NonVacantTaskCount
  href: Cobilas.Threading.Tasks.TaskPool.html#Cobilas_Threading_Tasks_TaskPool_NonVacantTaskCount
  name: NonVacantTaskCount
  nameWithType: TaskPool.NonVacantTaskCount
  fullName: Cobilas.Threading.Tasks.TaskPool.NonVacantTaskCount
- uid: Cobilas.Threading.Tasks.TaskPool.InitTask*
  commentId: Overload:Cobilas.Threading.Tasks.TaskPool.InitTask
  href: Cobilas.Threading.Tasks.TaskPool.html#Cobilas_Threading_Tasks_TaskPool_InitTask_System_Action_System_Threading_Tasks_Task__
  name: InitTask
  nameWithType: TaskPool.InitTask
  fullName: Cobilas.Threading.Tasks.TaskPool.InitTask
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: System.Func{{TRes}}
  commentId: T:System.Func{``0}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TRes>
  nameWithType: Func<TRes>
  fullName: System.Func<TRes>
  nameWithType.vb: Func(Of TRes)
  fullName.vb: System.Func(Of TRes)
  name.vb: Func(Of TRes)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TRes
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TRes
  - name: )
- uid: System.Threading.Tasks.Task{{TRes}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TRes>
  nameWithType: Task<TRes>
  fullName: System.Threading.Tasks.Task<TRes>
  nameWithType.vb: Task(Of TRes)
  fullName.vb: System.Threading.Tasks.Task(Of TRes)
  name.vb: Task(Of TRes)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TRes
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TRes
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
