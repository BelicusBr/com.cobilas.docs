### YamlMime:ManagedReference
items:
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D
  commentId: T:Cobilas.GodotEngine.Utility.Physics.Physics2D
  id: Physics2D
  parent: Cobilas.GodotEngine.Utility.Physics
  children:
  - Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCast(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Cobilas.GodotEngine.Utility.Physics.RayHit2D@)
  - Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCast(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Godot.CollisionObject2D[],Cobilas.GodotEngine.Utility.Physics.RayHit2D@)
  - Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCast(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Godot.CollisionObject2D[],System.UInt32,Cobilas.GodotEngine.Utility.Physics.RayHit2D@)
  - Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCast(Godot.Camera2D,Godot.Vector2,Godot.Vector2,System.UInt32,Cobilas.GodotEngine.Utility.Physics.RayHit2D@)
  - Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Godot.CollisionObject2D[],System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  - Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Godot.CollisionObject2D[],System.UInt32,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  - Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  - Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,System.UInt32,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  - Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllCircle(Godot.Camera2D,Godot.Vector2,System.Single,Godot.CollisionObject2D[],System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  - Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllCircle(Godot.Camera2D,Godot.Vector2,System.Single,Godot.CollisionObject2D[],System.UInt32,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  - Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllCircle(Godot.Camera2D,Godot.Vector2,System.Single,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  - Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllCircle(Godot.Camera2D,Godot.Vector2,System.Single,System.UInt32,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  - Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  - Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Godot.CollisionObject2D[],Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  - Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Godot.CollisionObject2D[],System.UInt32,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  - Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,System.UInt32,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  - Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastCircle(Godot.Camera2D,Godot.Vector2,System.Single,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  - Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastCircle(Godot.Camera2D,Godot.Vector2,System.Single,Godot.CollisionObject2D[],Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  - Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastCircle(Godot.Camera2D,Godot.Vector2,System.Single,Godot.CollisionObject2D[],System.UInt32,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  - Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastCircle(Godot.Camera2D,Godot.Vector2,System.Single,System.UInt32,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  - Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHit(Godot.Camera2D,Godot.Vector2,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  - Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHit(Godot.Camera2D,Godot.Vector2,Godot.CollisionObject2D[],Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  - Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHit(Godot.Camera2D,Godot.Vector2,Godot.CollisionObject2D[],System.UInt32,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  - Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHit(Godot.Camera2D,Godot.Vector2,System.UInt32,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  - Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHitAll(Godot.Camera2D,Godot.Vector2,Godot.CollisionObject2D[],System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  - Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHitAll(Godot.Camera2D,Godot.Vector2,Godot.CollisionObject2D[],System.UInt32,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  - Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHitAll(Godot.Camera2D,Godot.Vector2,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  - Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHitAll(Godot.Camera2D,Godot.Vector2,System.UInt32,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  langs:
  - csharp
  - vb
  name: Physics2D
  nameWithType: Physics2D
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D
  type: Class
  source:
    remote:
      path: GodotEngine.Utility/Physics/Physics2D.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: Physics2D
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Physics2D.cs
    startLine: 6
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: This class provides methods for detecting 2D physics bodies.
  example: []
  syntax:
    content: public static class Physics2D
    content.vb: Public Module Physics2D
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastCircle(Godot.Camera2D,Godot.Vector2,System.Single,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastCircle(Godot.Camera2D,Godot.Vector2,System.Single,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  id: RayCastCircle(Godot.Camera2D,Godot.Vector2,System.Single,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  parent: Cobilas.GodotEngine.Utility.Physics.Physics2D
  langs:
  - csharp
  - vb
  name: RayCastCircle(Camera2D?, Vector2, float, out Hit2D)
  nameWithType: Physics2D.RayCastCircle(Camera2D?, Vector2, float, out Hit2D)
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastCircle(Godot.Camera2D?, Godot.Vector2, float, out Cobilas.GodotEngine.Utility.Physics.Hit2D)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Physics/Physics2D.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RayCastCircle
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Physics2D.cs
    startLine: 8
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Creates a 2D circle that allows you to detect an object in 2D space.
  example: []
  syntax:
    content: public static bool RayCastCircle(Camera2D? camera, Vector2 mousePosition, float radius, out Hit2D hit)
    parameters:
    - id: camera
      type: Godot.Camera2D
      description: Camera that will be used to convert a point on the screen to a point in the 2d world.
    - id: mousePosition
      type: Godot.Vector2
      description: The point from which the ray will be thrown.
    - id: radius
      type: System.Single
      description: Defines the radius of the 2d collision circle.
    - id: hit
      type: Cobilas.GodotEngine.Utility.Physics.Hit2D
      description: The output parameter for the object's collision information.
    return:
      type: System.Boolean
      description: Returns <code>true</code> when any 2d object is detected.
    content.vb: Public Shared Function RayCastCircle(camera As Camera2D, mousePosition As Vector2, radius As Single, hit As Hit2D) As Boolean
  overload: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastCircle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="Godot.Camera2D" data-throw-if-not-resolved="false"></xref> object is null.
  nameWithType.vb: Physics2D.RayCastCircle(Camera2D, Vector2, Single, Hit2D)
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastCircle(Godot.Camera2D, Godot.Vector2, Single, Cobilas.GodotEngine.Utility.Physics.Hit2D)
  name.vb: RayCastCircle(Camera2D, Vector2, Single, Hit2D)
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastCircle(Godot.Camera2D,Godot.Vector2,System.Single,System.UInt32,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastCircle(Godot.Camera2D,Godot.Vector2,System.Single,System.UInt32,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  id: RayCastCircle(Godot.Camera2D,Godot.Vector2,System.Single,System.UInt32,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  parent: Cobilas.GodotEngine.Utility.Physics.Physics2D
  langs:
  - csharp
  - vb
  name: RayCastCircle(Camera2D?, Vector2, float, uint, out Hit2D)
  nameWithType: Physics2D.RayCastCircle(Camera2D?, Vector2, float, uint, out Hit2D)
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastCircle(Godot.Camera2D?, Godot.Vector2, float, uint, out Cobilas.GodotEngine.Utility.Physics.Hit2D)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Physics/Physics2D.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RayCastCircle
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Physics2D.cs
    startLine: 11
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Creates a 2D circle that allows you to detect an object in 2D space.
  example: []
  syntax:
    content: public static bool RayCastCircle(Camera2D? camera, Vector2 mousePosition, float radius, uint collisionLayer, out Hit2D hit)
    parameters:
    - id: camera
      type: Godot.Camera2D
      description: Camera that will be used to convert a point on the screen to a point in the 2d world.
    - id: mousePosition
      type: Godot.Vector2
      description: The point from which the ray will be thrown.
    - id: radius
      type: System.Single
      description: Defines the radius of the 2d collision circle.
    - id: collisionLayer
      type: System.UInt32
      description: The collision layers that will be checked by the 2D physical body detection methods.
    - id: hit
      type: Cobilas.GodotEngine.Utility.Physics.Hit2D
      description: The output parameter for the object's collision information.
    return:
      type: System.Boolean
      description: Returns <code>true</code> when any 2d object is detected.
    content.vb: Public Shared Function RayCastCircle(camera As Camera2D, mousePosition As Vector2, radius As Single, collisionLayer As UInteger, hit As Hit2D) As Boolean
  overload: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastCircle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="Godot.Camera2D" data-throw-if-not-resolved="false"></xref> object is null.
  nameWithType.vb: Physics2D.RayCastCircle(Camera2D, Vector2, Single, UInteger, Hit2D)
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastCircle(Godot.Camera2D, Godot.Vector2, Single, UInteger, Cobilas.GodotEngine.Utility.Physics.Hit2D)
  name.vb: RayCastCircle(Camera2D, Vector2, Single, UInteger, Hit2D)
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastCircle(Godot.Camera2D,Godot.Vector2,System.Single,Godot.CollisionObject2D[],Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastCircle(Godot.Camera2D,Godot.Vector2,System.Single,Godot.CollisionObject2D[],Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  id: RayCastCircle(Godot.Camera2D,Godot.Vector2,System.Single,Godot.CollisionObject2D[],Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  parent: Cobilas.GodotEngine.Utility.Physics.Physics2D
  langs:
  - csharp
  - vb
  name: RayCastCircle(Camera2D?, Vector2, float, CollisionObject2D[]?, out Hit2D)
  nameWithType: Physics2D.RayCastCircle(Camera2D?, Vector2, float, CollisionObject2D[]?, out Hit2D)
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastCircle(Godot.Camera2D?, Godot.Vector2, float, Godot.CollisionObject2D[]?, out Cobilas.GodotEngine.Utility.Physics.Hit2D)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Physics/Physics2D.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RayCastCircle
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Physics2D.cs
    startLine: 14
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Creates a 2D circle that allows you to detect an object in 2D space.
  example: []
  syntax:
    content: public static bool RayCastCircle(Camera2D? camera, Vector2 mousePosition, float radius, CollisionObject2D[]? exclude, out Hit2D hit)
    parameters:
    - id: camera
      type: Godot.Camera2D
      description: Camera that will be used to convert a point on the screen to a point in the 2d world.
    - id: mousePosition
      type: Godot.Vector2
      description: The point from which the ray will be thrown.
    - id: radius
      type: System.Single
      description: Defines the radius of the 2d collision circle.
    - id: exclude
      type: Godot.CollisionObject2D[]
      description: The objects that will be excluded from the search.
    - id: hit
      type: Cobilas.GodotEngine.Utility.Physics.Hit2D
      description: The output parameter for the object's collision information.
    return:
      type: System.Boolean
      description: Returns <code>true</code> when any 2d object is detected.
    content.vb: Public Shared Function RayCastCircle(camera As Camera2D, mousePosition As Vector2, radius As Single, exclude As CollisionObject2D(), hit As Hit2D) As Boolean
  overload: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastCircle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="Godot.Camera2D" data-throw-if-not-resolved="false"></xref> object is null.
  nameWithType.vb: Physics2D.RayCastCircle(Camera2D, Vector2, Single, CollisionObject2D(), Hit2D)
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastCircle(Godot.Camera2D, Godot.Vector2, Single, Godot.CollisionObject2D(), Cobilas.GodotEngine.Utility.Physics.Hit2D)
  name.vb: RayCastCircle(Camera2D, Vector2, Single, CollisionObject2D(), Hit2D)
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastCircle(Godot.Camera2D,Godot.Vector2,System.Single,Godot.CollisionObject2D[],System.UInt32,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastCircle(Godot.Camera2D,Godot.Vector2,System.Single,Godot.CollisionObject2D[],System.UInt32,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  id: RayCastCircle(Godot.Camera2D,Godot.Vector2,System.Single,Godot.CollisionObject2D[],System.UInt32,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  parent: Cobilas.GodotEngine.Utility.Physics.Physics2D
  langs:
  - csharp
  - vb
  name: RayCastCircle(Camera2D?, Vector2, float, CollisionObject2D[]?, uint, out Hit2D)
  nameWithType: Physics2D.RayCastCircle(Camera2D?, Vector2, float, CollisionObject2D[]?, uint, out Hit2D)
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastCircle(Godot.Camera2D?, Godot.Vector2, float, Godot.CollisionObject2D[]?, uint, out Cobilas.GodotEngine.Utility.Physics.Hit2D)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Physics/Physics2D.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RayCastCircle
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Physics2D.cs
    startLine: 25
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Creates a 2D circle that allows you to detect an object in 2D space.
  example: []
  syntax:
    content: public static bool RayCastCircle(Camera2D? camera, Vector2 mousePosition, float radius, CollisionObject2D[]? exclude, uint collisionLayer, out Hit2D hit)
    parameters:
    - id: camera
      type: Godot.Camera2D
      description: Camera that will be used to convert a point on the screen to a point in the 2d world.
    - id: mousePosition
      type: Godot.Vector2
      description: The point from which the ray will be thrown.
    - id: radius
      type: System.Single
      description: Defines the radius of the 2d collision circle.
    - id: exclude
      type: Godot.CollisionObject2D[]
      description: The objects that will be excluded from the search.
    - id: collisionLayer
      type: System.UInt32
      description: The collision layers that will be checked by the 2D physical body detection methods.
    - id: hit
      type: Cobilas.GodotEngine.Utility.Physics.Hit2D
      description: The output parameter for the object's collision information.
    return:
      type: System.Boolean
      description: Returns <code>true</code> when any 2d object is detected.
    content.vb: Public Shared Function RayCastCircle(camera As Camera2D, mousePosition As Vector2, radius As Single, exclude As CollisionObject2D(), collisionLayer As UInteger, hit As Hit2D) As Boolean
  overload: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastCircle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="Godot.Camera2D" data-throw-if-not-resolved="false"></xref> object is null.
  nameWithType.vb: Physics2D.RayCastCircle(Camera2D, Vector2, Single, CollisionObject2D(), UInteger, Hit2D)
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastCircle(Godot.Camera2D, Godot.Vector2, Single, Godot.CollisionObject2D(), UInteger, Cobilas.GodotEngine.Utility.Physics.Hit2D)
  name.vb: RayCastCircle(Camera2D, Vector2, Single, CollisionObject2D(), UInteger, Hit2D)
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllCircle(Godot.Camera2D,Godot.Vector2,System.Single,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllCircle(Godot.Camera2D,Godot.Vector2,System.Single,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  id: RayCastAllCircle(Godot.Camera2D,Godot.Vector2,System.Single,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  parent: Cobilas.GodotEngine.Utility.Physics.Physics2D
  langs:
  - csharp
  - vb
  name: RayCastAllCircle(Camera2D?, Vector2, float, List<Hit2D>?)
  nameWithType: Physics2D.RayCastAllCircle(Camera2D?, Vector2, float, List<Hit2D>?)
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllCircle(Godot.Camera2D?, Godot.Vector2, float, System.Collections.Generic.List<Cobilas.GodotEngine.Utility.Physics.Hit2D>?)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Physics/Physics2D.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RayCastAllCircle
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Physics2D.cs
    startLine: 28
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Creates a 2D circle that allows you to detect multiple objects in 2D space simultaneously.
  example: []
  syntax:
    content: public static bool RayCastAllCircle(Camera2D? camera, Vector2 mousePosition, float radius, List<Hit2D>? list)
    parameters:
    - id: camera
      type: Godot.Camera2D
      description: Camera that will be used to convert a point on the screen to a point in the 2d world.
    - id: mousePosition
      type: Godot.Vector2
      description: The point from which the ray will be thrown.
    - id: radius
      type: System.Single
      description: Defines the radius of the 2d collision circle.
    - id: list
      type: System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D}
      description: Here the objects that were detected by the 2d collision ray will be added.
    return:
      type: System.Boolean
      description: Returns <code>true</code> when multiple 2D objects are detected.
    content.vb: Public Shared Function RayCastAllCircle(camera As Camera2D, mousePosition As Vector2, radius As Single, list As List(Of Hit2D)) As Boolean
  overload: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllCircle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="Godot.Camera2D" data-throw-if-not-resolved="false"></xref> object is null.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="System.Collections.Generic.List%601" data-throw-if-not-resolved="false"></xref> object is null.
  nameWithType.vb: Physics2D.RayCastAllCircle(Camera2D, Vector2, Single, List(Of Hit2D))
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllCircle(Godot.Camera2D, Godot.Vector2, Single, System.Collections.Generic.List(Of Cobilas.GodotEngine.Utility.Physics.Hit2D))
  name.vb: RayCastAllCircle(Camera2D, Vector2, Single, List(Of Hit2D))
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllCircle(Godot.Camera2D,Godot.Vector2,System.Single,System.UInt32,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllCircle(Godot.Camera2D,Godot.Vector2,System.Single,System.UInt32,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  id: RayCastAllCircle(Godot.Camera2D,Godot.Vector2,System.Single,System.UInt32,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  parent: Cobilas.GodotEngine.Utility.Physics.Physics2D
  langs:
  - csharp
  - vb
  name: RayCastAllCircle(Camera2D?, Vector2, float, uint, List<Hit2D>?)
  nameWithType: Physics2D.RayCastAllCircle(Camera2D?, Vector2, float, uint, List<Hit2D>?)
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllCircle(Godot.Camera2D?, Godot.Vector2, float, uint, System.Collections.Generic.List<Cobilas.GodotEngine.Utility.Physics.Hit2D>?)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Physics/Physics2D.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RayCastAllCircle
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Physics2D.cs
    startLine: 31
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Creates a 2D circle that allows you to detect multiple objects in 2D space simultaneously.
  example: []
  syntax:
    content: public static bool RayCastAllCircle(Camera2D? camera, Vector2 mousePosition, float radius, uint collisionLayer, List<Hit2D>? list)
    parameters:
    - id: camera
      type: Godot.Camera2D
      description: Camera that will be used to convert a point on the screen to a point in the 2d world.
    - id: mousePosition
      type: Godot.Vector2
      description: The point from which the ray will be thrown.
    - id: radius
      type: System.Single
      description: Defines the radius of the 2d collision circle.
    - id: collisionLayer
      type: System.UInt32
      description: The collision layers that will be checked by the 2D physical body detection methods.
    - id: list
      type: System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D}
      description: Here the objects that were detected by the 2d collision ray will be added.
    return:
      type: System.Boolean
      description: Returns <code>true</code> when multiple 2D objects are detected.
    content.vb: Public Shared Function RayCastAllCircle(camera As Camera2D, mousePosition As Vector2, radius As Single, collisionLayer As UInteger, list As List(Of Hit2D)) As Boolean
  overload: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllCircle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="Godot.Camera2D" data-throw-if-not-resolved="false"></xref> object is null.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="System.Collections.Generic.List%601" data-throw-if-not-resolved="false"></xref> object is null.
  nameWithType.vb: Physics2D.RayCastAllCircle(Camera2D, Vector2, Single, UInteger, List(Of Hit2D))
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllCircle(Godot.Camera2D, Godot.Vector2, Single, UInteger, System.Collections.Generic.List(Of Cobilas.GodotEngine.Utility.Physics.Hit2D))
  name.vb: RayCastAllCircle(Camera2D, Vector2, Single, UInteger, List(Of Hit2D))
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllCircle(Godot.Camera2D,Godot.Vector2,System.Single,Godot.CollisionObject2D[],System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllCircle(Godot.Camera2D,Godot.Vector2,System.Single,Godot.CollisionObject2D[],System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  id: RayCastAllCircle(Godot.Camera2D,Godot.Vector2,System.Single,Godot.CollisionObject2D[],System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  parent: Cobilas.GodotEngine.Utility.Physics.Physics2D
  langs:
  - csharp
  - vb
  name: RayCastAllCircle(Camera2D?, Vector2, float, CollisionObject2D[]?, List<Hit2D>?)
  nameWithType: Physics2D.RayCastAllCircle(Camera2D?, Vector2, float, CollisionObject2D[]?, List<Hit2D>?)
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllCircle(Godot.Camera2D?, Godot.Vector2, float, Godot.CollisionObject2D[]?, System.Collections.Generic.List<Cobilas.GodotEngine.Utility.Physics.Hit2D>?)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Physics/Physics2D.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RayCastAllCircle
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Physics2D.cs
    startLine: 34
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Creates a 2D circle that allows you to detect multiple objects in 2D space simultaneously.
  example: []
  syntax:
    content: public static bool RayCastAllCircle(Camera2D? camera, Vector2 mousePosition, float radius, CollisionObject2D[]? exclude, List<Hit2D>? list)
    parameters:
    - id: camera
      type: Godot.Camera2D
      description: Camera that will be used to convert a point on the screen to a point in the 2d world.
    - id: mousePosition
      type: Godot.Vector2
      description: The point from which the ray will be thrown.
    - id: radius
      type: System.Single
      description: Defines the radius of the 2d collision circle.
    - id: exclude
      type: Godot.CollisionObject2D[]
      description: The objects that will be excluded from the search.
    - id: list
      type: System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D}
      description: Here the objects that were detected by the 2d collision ray will be added.
    return:
      type: System.Boolean
      description: Returns <code>true</code> when multiple 2D objects are detected.
    content.vb: Public Shared Function RayCastAllCircle(camera As Camera2D, mousePosition As Vector2, radius As Single, exclude As CollisionObject2D(), list As List(Of Hit2D)) As Boolean
  overload: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllCircle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="Godot.Camera2D" data-throw-if-not-resolved="false"></xref> object is null.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="System.Collections.Generic.List%601" data-throw-if-not-resolved="false"></xref> object is null.
  nameWithType.vb: Physics2D.RayCastAllCircle(Camera2D, Vector2, Single, CollisionObject2D(), List(Of Hit2D))
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllCircle(Godot.Camera2D, Godot.Vector2, Single, Godot.CollisionObject2D(), System.Collections.Generic.List(Of Cobilas.GodotEngine.Utility.Physics.Hit2D))
  name.vb: RayCastAllCircle(Camera2D, Vector2, Single, CollisionObject2D(), List(Of Hit2D))
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllCircle(Godot.Camera2D,Godot.Vector2,System.Single,Godot.CollisionObject2D[],System.UInt32,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllCircle(Godot.Camera2D,Godot.Vector2,System.Single,Godot.CollisionObject2D[],System.UInt32,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  id: RayCastAllCircle(Godot.Camera2D,Godot.Vector2,System.Single,Godot.CollisionObject2D[],System.UInt32,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  parent: Cobilas.GodotEngine.Utility.Physics.Physics2D
  langs:
  - csharp
  - vb
  name: RayCastAllCircle(Camera2D?, Vector2, float, CollisionObject2D[]?, uint, List<Hit2D>?)
  nameWithType: Physics2D.RayCastAllCircle(Camera2D?, Vector2, float, CollisionObject2D[]?, uint, List<Hit2D>?)
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllCircle(Godot.Camera2D?, Godot.Vector2, float, Godot.CollisionObject2D[]?, uint, System.Collections.Generic.List<Cobilas.GodotEngine.Utility.Physics.Hit2D>?)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Physics/Physics2D.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RayCastAllCircle
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Physics2D.cs
    startLine: 46
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Creates a 2D circle that allows you to detect multiple objects in 2D space simultaneously.
  example: []
  syntax:
    content: public static bool RayCastAllCircle(Camera2D? camera, Vector2 mousePosition, float radius, CollisionObject2D[]? exclude, uint collisionLayer, List<Hit2D>? list)
    parameters:
    - id: camera
      type: Godot.Camera2D
      description: Camera that will be used to convert a point on the screen to a point in the 2d world.
    - id: mousePosition
      type: Godot.Vector2
      description: The point from which the ray will be thrown.
    - id: radius
      type: System.Single
      description: Defines the radius of the 2d collision circle.
    - id: exclude
      type: Godot.CollisionObject2D[]
      description: The objects that will be excluded from the search.
    - id: collisionLayer
      type: System.UInt32
      description: The collision layers that will be checked by the 2D physical body detection methods.
    - id: list
      type: System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D}
      description: Here the objects that were detected by the 2d collision ray will be added.
    return:
      type: System.Boolean
      description: Returns <code>true</code> when multiple 2D objects are detected.
    content.vb: Public Shared Function RayCastAllCircle(camera As Camera2D, mousePosition As Vector2, radius As Single, exclude As CollisionObject2D(), collisionLayer As UInteger, list As List(Of Hit2D)) As Boolean
  overload: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllCircle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="Godot.Camera2D" data-throw-if-not-resolved="false"></xref> object is null.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="System.Collections.Generic.List%601" data-throw-if-not-resolved="false"></xref> object is null.
  nameWithType.vb: Physics2D.RayCastAllCircle(Camera2D, Vector2, Single, CollisionObject2D(), UInteger, List(Of Hit2D))
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllCircle(Godot.Camera2D, Godot.Vector2, Single, Godot.CollisionObject2D(), UInteger, System.Collections.Generic.List(Of Cobilas.GodotEngine.Utility.Physics.Hit2D))
  name.vb: RayCastAllCircle(Camera2D, Vector2, Single, CollisionObject2D(), UInteger, List(Of Hit2D))
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  id: RayCastBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  parent: Cobilas.GodotEngine.Utility.Physics.Physics2D
  langs:
  - csharp
  - vb
  name: RayCastBox(Camera2D?, Vector2, Vector2, out Hit2D)
  nameWithType: Physics2D.RayCastBox(Camera2D?, Vector2, Vector2, out Hit2D)
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastBox(Godot.Camera2D?, Godot.Vector2, Godot.Vector2, out Cobilas.GodotEngine.Utility.Physics.Hit2D)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Physics/Physics2D.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RayCastBox
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Physics2D.cs
    startLine: 49
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Creates a 2D box that allows you to detect an object in 2D space.
  example: []
  syntax:
    content: public static bool RayCastBox(Camera2D? camera, Vector2 mousePosition, Vector2 size, out Hit2D hit)
    parameters:
    - id: camera
      type: Godot.Camera2D
      description: Camera that will be used to convert a point on the screen to a point in the 2d world.
    - id: mousePosition
      type: Godot.Vector2
      description: The point from which the ray will be thrown.
    - id: size
      type: Godot.Vector2
      description: The size of the 2d collision box.
    - id: hit
      type: Cobilas.GodotEngine.Utility.Physics.Hit2D
      description: The output parameter for the object's collision information.
    return:
      type: System.Boolean
      description: Returns <code>true</code> when any 2d object is detected.
    content.vb: Public Shared Function RayCastBox(camera As Camera2D, mousePosition As Vector2, size As Vector2, hit As Hit2D) As Boolean
  overload: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastBox*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="Godot.Camera2D" data-throw-if-not-resolved="false"></xref> object is null.
  nameWithType.vb: Physics2D.RayCastBox(Camera2D, Vector2, Vector2, Hit2D)
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastBox(Godot.Camera2D, Godot.Vector2, Godot.Vector2, Cobilas.GodotEngine.Utility.Physics.Hit2D)
  name.vb: RayCastBox(Camera2D, Vector2, Vector2, Hit2D)
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,System.UInt32,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,System.UInt32,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  id: RayCastBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,System.UInt32,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  parent: Cobilas.GodotEngine.Utility.Physics.Physics2D
  langs:
  - csharp
  - vb
  name: RayCastBox(Camera2D?, Vector2, Vector2, uint, out Hit2D)
  nameWithType: Physics2D.RayCastBox(Camera2D?, Vector2, Vector2, uint, out Hit2D)
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastBox(Godot.Camera2D?, Godot.Vector2, Godot.Vector2, uint, out Cobilas.GodotEngine.Utility.Physics.Hit2D)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Physics/Physics2D.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RayCastBox
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Physics2D.cs
    startLine: 52
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Creates a 2D box that allows you to detect an object in 2D space.
  example: []
  syntax:
    content: public static bool RayCastBox(Camera2D? camera, Vector2 mousePosition, Vector2 size, uint collisionLayer, out Hit2D hit)
    parameters:
    - id: camera
      type: Godot.Camera2D
      description: Camera that will be used to convert a point on the screen to a point in the 2d world.
    - id: mousePosition
      type: Godot.Vector2
      description: The point from which the ray will be thrown.
    - id: size
      type: Godot.Vector2
      description: The size of the 2d collision box.
    - id: collisionLayer
      type: System.UInt32
      description: The collision layers that will be checked by the 2D physical body detection methods.
    - id: hit
      type: Cobilas.GodotEngine.Utility.Physics.Hit2D
      description: The output parameter for the object's collision information.
    return:
      type: System.Boolean
      description: Returns <code>true</code> when any 2d object is detected.
    content.vb: Public Shared Function RayCastBox(camera As Camera2D, mousePosition As Vector2, size As Vector2, collisionLayer As UInteger, hit As Hit2D) As Boolean
  overload: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastBox*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="Godot.Camera2D" data-throw-if-not-resolved="false"></xref> object is null.
  nameWithType.vb: Physics2D.RayCastBox(Camera2D, Vector2, Vector2, UInteger, Hit2D)
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastBox(Godot.Camera2D, Godot.Vector2, Godot.Vector2, UInteger, Cobilas.GodotEngine.Utility.Physics.Hit2D)
  name.vb: RayCastBox(Camera2D, Vector2, Vector2, UInteger, Hit2D)
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Godot.CollisionObject2D[],Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Godot.CollisionObject2D[],Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  id: RayCastBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Godot.CollisionObject2D[],Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  parent: Cobilas.GodotEngine.Utility.Physics.Physics2D
  langs:
  - csharp
  - vb
  name: RayCastBox(Camera2D?, Vector2, Vector2, CollisionObject2D[]?, out Hit2D)
  nameWithType: Physics2D.RayCastBox(Camera2D?, Vector2, Vector2, CollisionObject2D[]?, out Hit2D)
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastBox(Godot.Camera2D?, Godot.Vector2, Godot.Vector2, Godot.CollisionObject2D[]?, out Cobilas.GodotEngine.Utility.Physics.Hit2D)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Physics/Physics2D.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RayCastBox
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Physics2D.cs
    startLine: 55
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Creates a 2D box that allows you to detect an object in 2D space.
  example: []
  syntax:
    content: public static bool RayCastBox(Camera2D? camera, Vector2 mousePosition, Vector2 size, CollisionObject2D[]? exclude, out Hit2D hit)
    parameters:
    - id: camera
      type: Godot.Camera2D
      description: Camera that will be used to convert a point on the screen to a point in the 2d world.
    - id: mousePosition
      type: Godot.Vector2
      description: The point from which the ray will be thrown.
    - id: size
      type: Godot.Vector2
      description: The size of the 2d collision box.
    - id: exclude
      type: Godot.CollisionObject2D[]
      description: The objects that will be excluded from the search.
    - id: hit
      type: Cobilas.GodotEngine.Utility.Physics.Hit2D
      description: The output parameter for the object's collision information.
    return:
      type: System.Boolean
      description: Returns <code>true</code> when any 2d object is detected.
    content.vb: Public Shared Function RayCastBox(camera As Camera2D, mousePosition As Vector2, size As Vector2, exclude As CollisionObject2D(), hit As Hit2D) As Boolean
  overload: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastBox*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="Godot.Camera2D" data-throw-if-not-resolved="false"></xref> object is null.
  nameWithType.vb: Physics2D.RayCastBox(Camera2D, Vector2, Vector2, CollisionObject2D(), Hit2D)
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastBox(Godot.Camera2D, Godot.Vector2, Godot.Vector2, Godot.CollisionObject2D(), Cobilas.GodotEngine.Utility.Physics.Hit2D)
  name.vb: RayCastBox(Camera2D, Vector2, Vector2, CollisionObject2D(), Hit2D)
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Godot.CollisionObject2D[],System.UInt32,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Godot.CollisionObject2D[],System.UInt32,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  id: RayCastBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Godot.CollisionObject2D[],System.UInt32,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  parent: Cobilas.GodotEngine.Utility.Physics.Physics2D
  langs:
  - csharp
  - vb
  name: RayCastBox(Camera2D?, Vector2, Vector2, CollisionObject2D[]?, uint, out Hit2D)
  nameWithType: Physics2D.RayCastBox(Camera2D?, Vector2, Vector2, CollisionObject2D[]?, uint, out Hit2D)
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastBox(Godot.Camera2D?, Godot.Vector2, Godot.Vector2, Godot.CollisionObject2D[]?, uint, out Cobilas.GodotEngine.Utility.Physics.Hit2D)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Physics/Physics2D.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RayCastBox
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Physics2D.cs
    startLine: 66
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Creates a 2D box that allows you to detect an object in 2D space.
  example: []
  syntax:
    content: public static bool RayCastBox(Camera2D? camera, Vector2 mousePosition, Vector2 size, CollisionObject2D[]? exclude, uint collisionLayer, out Hit2D hit)
    parameters:
    - id: camera
      type: Godot.Camera2D
      description: Camera that will be used to convert a point on the screen to a point in the 2d world.
    - id: mousePosition
      type: Godot.Vector2
      description: The point from which the ray will be thrown.
    - id: size
      type: Godot.Vector2
      description: The size of the 2d collision box.
    - id: exclude
      type: Godot.CollisionObject2D[]
      description: The objects that will be excluded from the search.
    - id: collisionLayer
      type: System.UInt32
      description: The collision layers that will be checked by the 2D physical body detection methods.
    - id: hit
      type: Cobilas.GodotEngine.Utility.Physics.Hit2D
      description: The output parameter for the object's collision information.
    return:
      type: System.Boolean
      description: Returns <code>true</code> when any 2d object is detected.
    content.vb: Public Shared Function RayCastBox(camera As Camera2D, mousePosition As Vector2, size As Vector2, exclude As CollisionObject2D(), collisionLayer As UInteger, hit As Hit2D) As Boolean
  overload: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastBox*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="Godot.Camera2D" data-throw-if-not-resolved="false"></xref> object is null.
  nameWithType.vb: Physics2D.RayCastBox(Camera2D, Vector2, Vector2, CollisionObject2D(), UInteger, Hit2D)
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastBox(Godot.Camera2D, Godot.Vector2, Godot.Vector2, Godot.CollisionObject2D(), UInteger, Cobilas.GodotEngine.Utility.Physics.Hit2D)
  name.vb: RayCastBox(Camera2D, Vector2, Vector2, CollisionObject2D(), UInteger, Hit2D)
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  id: RayCastAllBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  parent: Cobilas.GodotEngine.Utility.Physics.Physics2D
  langs:
  - csharp
  - vb
  name: RayCastAllBox(Camera2D?, Vector2, Vector2, List<Hit2D>?)
  nameWithType: Physics2D.RayCastAllBox(Camera2D?, Vector2, Vector2, List<Hit2D>?)
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllBox(Godot.Camera2D?, Godot.Vector2, Godot.Vector2, System.Collections.Generic.List<Cobilas.GodotEngine.Utility.Physics.Hit2D>?)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Physics/Physics2D.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RayCastAllBox
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Physics2D.cs
    startLine: 69
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Creates a 2D box that allows you to detect multiple objects in 2D space simultaneously.
  example: []
  syntax:
    content: public static bool RayCastAllBox(Camera2D? camera, Vector2 mousePosition, Vector2 size, List<Hit2D>? list)
    parameters:
    - id: camera
      type: Godot.Camera2D
      description: Camera that will be used to convert a point on the screen to a point in the 2d world.
    - id: mousePosition
      type: Godot.Vector2
      description: The point from which the ray will be thrown.
    - id: size
      type: Godot.Vector2
      description: The size of the 2d collision box.
    - id: list
      type: System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D}
      description: Here the objects that were detected by the 2d collision ray will be added.
    return:
      type: System.Boolean
      description: Returns <code>true</code> when multiple 2D objects are detected.
    content.vb: Public Shared Function RayCastAllBox(camera As Camera2D, mousePosition As Vector2, size As Vector2, list As List(Of Hit2D)) As Boolean
  overload: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllBox*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="Godot.Camera2D" data-throw-if-not-resolved="false"></xref> object is null.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="System.Collections.Generic.List%601" data-throw-if-not-resolved="false"></xref> object is null.
  nameWithType.vb: Physics2D.RayCastAllBox(Camera2D, Vector2, Vector2, List(Of Hit2D))
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllBox(Godot.Camera2D, Godot.Vector2, Godot.Vector2, System.Collections.Generic.List(Of Cobilas.GodotEngine.Utility.Physics.Hit2D))
  name.vb: RayCastAllBox(Camera2D, Vector2, Vector2, List(Of Hit2D))
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,System.UInt32,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,System.UInt32,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  id: RayCastAllBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,System.UInt32,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  parent: Cobilas.GodotEngine.Utility.Physics.Physics2D
  langs:
  - csharp
  - vb
  name: RayCastAllBox(Camera2D?, Vector2, Vector2, uint, List<Hit2D>?)
  nameWithType: Physics2D.RayCastAllBox(Camera2D?, Vector2, Vector2, uint, List<Hit2D>?)
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllBox(Godot.Camera2D?, Godot.Vector2, Godot.Vector2, uint, System.Collections.Generic.List<Cobilas.GodotEngine.Utility.Physics.Hit2D>?)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Physics/Physics2D.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RayCastAllBox
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Physics2D.cs
    startLine: 72
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Creates a 2D box that allows you to detect multiple objects in 2D space simultaneously.
  example: []
  syntax:
    content: public static bool RayCastAllBox(Camera2D? camera, Vector2 mousePosition, Vector2 size, uint collisionLayer, List<Hit2D>? list)
    parameters:
    - id: camera
      type: Godot.Camera2D
      description: Camera that will be used to convert a point on the screen to a point in the 2d world.
    - id: mousePosition
      type: Godot.Vector2
      description: The point from which the ray will be thrown.
    - id: size
      type: Godot.Vector2
      description: The size of the 2d collision box.
    - id: collisionLayer
      type: System.UInt32
      description: The collision layers that will be checked by the 2D physical body detection methods.
    - id: list
      type: System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D}
      description: Here the objects that were detected by the 2d collision ray will be added.
    return:
      type: System.Boolean
      description: Returns <code>true</code> when multiple 2D objects are detected.
    content.vb: Public Shared Function RayCastAllBox(camera As Camera2D, mousePosition As Vector2, size As Vector2, collisionLayer As UInteger, list As List(Of Hit2D)) As Boolean
  overload: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllBox*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="Godot.Camera2D" data-throw-if-not-resolved="false"></xref> object is null.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="System.Collections.Generic.List%601" data-throw-if-not-resolved="false"></xref> object is null.
  nameWithType.vb: Physics2D.RayCastAllBox(Camera2D, Vector2, Vector2, UInteger, List(Of Hit2D))
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllBox(Godot.Camera2D, Godot.Vector2, Godot.Vector2, UInteger, System.Collections.Generic.List(Of Cobilas.GodotEngine.Utility.Physics.Hit2D))
  name.vb: RayCastAllBox(Camera2D, Vector2, Vector2, UInteger, List(Of Hit2D))
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Godot.CollisionObject2D[],System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Godot.CollisionObject2D[],System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  id: RayCastAllBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Godot.CollisionObject2D[],System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  parent: Cobilas.GodotEngine.Utility.Physics.Physics2D
  langs:
  - csharp
  - vb
  name: RayCastAllBox(Camera2D?, Vector2, Vector2, CollisionObject2D[]?, List<Hit2D>?)
  nameWithType: Physics2D.RayCastAllBox(Camera2D?, Vector2, Vector2, CollisionObject2D[]?, List<Hit2D>?)
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllBox(Godot.Camera2D?, Godot.Vector2, Godot.Vector2, Godot.CollisionObject2D[]?, System.Collections.Generic.List<Cobilas.GodotEngine.Utility.Physics.Hit2D>?)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Physics/Physics2D.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RayCastAllBox
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Physics2D.cs
    startLine: 75
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Creates a 2D box that allows you to detect multiple objects in 2D space simultaneously.
  example: []
  syntax:
    content: public static bool RayCastAllBox(Camera2D? camera, Vector2 mousePosition, Vector2 size, CollisionObject2D[]? exclude, List<Hit2D>? list)
    parameters:
    - id: camera
      type: Godot.Camera2D
      description: Camera that will be used to convert a point on the screen to a point in the 2d world.
    - id: mousePosition
      type: Godot.Vector2
      description: The point from which the ray will be thrown.
    - id: size
      type: Godot.Vector2
      description: The size of the 2d collision box.
    - id: exclude
      type: Godot.CollisionObject2D[]
      description: The objects that will be excluded from the search.
    - id: list
      type: System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D}
      description: Here the objects that were detected by the 2d collision ray will be added.
    return:
      type: System.Boolean
      description: Returns <code>true</code> when multiple 2D objects are detected.
    content.vb: Public Shared Function RayCastAllBox(camera As Camera2D, mousePosition As Vector2, size As Vector2, exclude As CollisionObject2D(), list As List(Of Hit2D)) As Boolean
  overload: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllBox*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="Godot.Camera2D" data-throw-if-not-resolved="false"></xref> object is null.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="System.Collections.Generic.List%601" data-throw-if-not-resolved="false"></xref> object is null.
  nameWithType.vb: Physics2D.RayCastAllBox(Camera2D, Vector2, Vector2, CollisionObject2D(), List(Of Hit2D))
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllBox(Godot.Camera2D, Godot.Vector2, Godot.Vector2, Godot.CollisionObject2D(), System.Collections.Generic.List(Of Cobilas.GodotEngine.Utility.Physics.Hit2D))
  name.vb: RayCastAllBox(Camera2D, Vector2, Vector2, CollisionObject2D(), List(Of Hit2D))
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Godot.CollisionObject2D[],System.UInt32,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Godot.CollisionObject2D[],System.UInt32,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  id: RayCastAllBox(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Godot.CollisionObject2D[],System.UInt32,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  parent: Cobilas.GodotEngine.Utility.Physics.Physics2D
  langs:
  - csharp
  - vb
  name: RayCastAllBox(Camera2D?, Vector2, Vector2, CollisionObject2D[]?, uint, List<Hit2D>?)
  nameWithType: Physics2D.RayCastAllBox(Camera2D?, Vector2, Vector2, CollisionObject2D[]?, uint, List<Hit2D>?)
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllBox(Godot.Camera2D?, Godot.Vector2, Godot.Vector2, Godot.CollisionObject2D[]?, uint, System.Collections.Generic.List<Cobilas.GodotEngine.Utility.Physics.Hit2D>?)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Physics/Physics2D.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RayCastAllBox
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Physics2D.cs
    startLine: 87
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Creates a 2D box that allows you to detect multiple objects in 2D space simultaneously.
  example: []
  syntax:
    content: public static bool RayCastAllBox(Camera2D? camera, Vector2 mousePosition, Vector2 size, CollisionObject2D[]? exclude, uint collisionLayer, List<Hit2D>? list)
    parameters:
    - id: camera
      type: Godot.Camera2D
      description: Camera that will be used to convert a point on the screen to a point in the 2d world.
    - id: mousePosition
      type: Godot.Vector2
      description: The point from which the ray will be thrown.
    - id: size
      type: Godot.Vector2
      description: The size of the 2d collision box.
    - id: exclude
      type: Godot.CollisionObject2D[]
      description: The objects that will be excluded from the search.
    - id: collisionLayer
      type: System.UInt32
      description: The collision layers that will be checked by the 2D physical body detection methods.
    - id: list
      type: System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D}
      description: Here the objects that were detected by the 2d collision ray will be added.
    return:
      type: System.Boolean
      description: Returns <code>true</code> when multiple 2D objects are detected.
    content.vb: Public Shared Function RayCastAllBox(camera As Camera2D, mousePosition As Vector2, size As Vector2, exclude As CollisionObject2D(), collisionLayer As UInteger, list As List(Of Hit2D)) As Boolean
  overload: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllBox*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="Godot.Camera2D" data-throw-if-not-resolved="false"></xref> object is null.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="System.Collections.Generic.List%601" data-throw-if-not-resolved="false"></xref> object is null.
  nameWithType.vb: Physics2D.RayCastAllBox(Camera2D, Vector2, Vector2, CollisionObject2D(), UInteger, List(Of Hit2D))
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllBox(Godot.Camera2D, Godot.Vector2, Godot.Vector2, Godot.CollisionObject2D(), UInteger, System.Collections.Generic.List(Of Cobilas.GodotEngine.Utility.Physics.Hit2D))
  name.vb: RayCastAllBox(Camera2D, Vector2, Vector2, CollisionObject2D(), UInteger, List(Of Hit2D))
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHit(Godot.Camera2D,Godot.Vector2,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHit(Godot.Camera2D,Godot.Vector2,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  id: RayCastHit(Godot.Camera2D,Godot.Vector2,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  parent: Cobilas.GodotEngine.Utility.Physics.Physics2D
  langs:
  - csharp
  - vb
  name: RayCastHit(Camera2D?, Vector2, out Hit2D)
  nameWithType: Physics2D.RayCastHit(Camera2D?, Vector2, out Hit2D)
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHit(Godot.Camera2D?, Godot.Vector2, out Cobilas.GodotEngine.Utility.Physics.Hit2D)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Physics/Physics2D.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RayCastHit
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Physics2D.cs
    startLine: 90
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Creates a 2D ray that allows you to detect an object in 2D space.
  example: []
  syntax:
    content: public static bool RayCastHit(Camera2D? camera, Vector2 mousePosition, out Hit2D hit)
    parameters:
    - id: camera
      type: Godot.Camera2D
      description: Camera that will be used to convert a point on the screen to a point in the 2d world.
    - id: mousePosition
      type: Godot.Vector2
      description: The point from which the ray will be thrown.
    - id: hit
      type: Cobilas.GodotEngine.Utility.Physics.Hit2D
      description: The output parameter for the object's collision information.
    return:
      type: System.Boolean
      description: Returns <code>true</code> when any 2d object is detected.
    content.vb: Public Shared Function RayCastHit(camera As Camera2D, mousePosition As Vector2, hit As Hit2D) As Boolean
  overload: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHit*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="Godot.Camera2D" data-throw-if-not-resolved="false"></xref> object is null.
  nameWithType.vb: Physics2D.RayCastHit(Camera2D, Vector2, Hit2D)
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHit(Godot.Camera2D, Godot.Vector2, Cobilas.GodotEngine.Utility.Physics.Hit2D)
  name.vb: RayCastHit(Camera2D, Vector2, Hit2D)
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHit(Godot.Camera2D,Godot.Vector2,System.UInt32,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHit(Godot.Camera2D,Godot.Vector2,System.UInt32,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  id: RayCastHit(Godot.Camera2D,Godot.Vector2,System.UInt32,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  parent: Cobilas.GodotEngine.Utility.Physics.Physics2D
  langs:
  - csharp
  - vb
  name: RayCastHit(Camera2D?, Vector2, uint, out Hit2D)
  nameWithType: Physics2D.RayCastHit(Camera2D?, Vector2, uint, out Hit2D)
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHit(Godot.Camera2D?, Godot.Vector2, uint, out Cobilas.GodotEngine.Utility.Physics.Hit2D)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Physics/Physics2D.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RayCastHit
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Physics2D.cs
    startLine: 93
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Creates a 2D ray that allows you to detect an object in 2D space.
  example: []
  syntax:
    content: public static bool RayCastHit(Camera2D? camera, Vector2 mousePosition, uint collisionLayer, out Hit2D hit)
    parameters:
    - id: camera
      type: Godot.Camera2D
      description: Camera that will be used to convert a point on the screen to a point in the 2d world.
    - id: mousePosition
      type: Godot.Vector2
      description: The point from which the ray will be thrown.
    - id: collisionLayer
      type: System.UInt32
      description: The collision layers that will be checked by the 2D physical body detection methods.
    - id: hit
      type: Cobilas.GodotEngine.Utility.Physics.Hit2D
      description: The output parameter for the object's collision information.
    return:
      type: System.Boolean
      description: Returns <code>true</code> when any 2d object is detected.
    content.vb: Public Shared Function RayCastHit(camera As Camera2D, mousePosition As Vector2, collisionLayer As UInteger, hit As Hit2D) As Boolean
  overload: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHit*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="Godot.Camera2D" data-throw-if-not-resolved="false"></xref> object is null.
  nameWithType.vb: Physics2D.RayCastHit(Camera2D, Vector2, UInteger, Hit2D)
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHit(Godot.Camera2D, Godot.Vector2, UInteger, Cobilas.GodotEngine.Utility.Physics.Hit2D)
  name.vb: RayCastHit(Camera2D, Vector2, UInteger, Hit2D)
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHit(Godot.Camera2D,Godot.Vector2,Godot.CollisionObject2D[],Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHit(Godot.Camera2D,Godot.Vector2,Godot.CollisionObject2D[],Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  id: RayCastHit(Godot.Camera2D,Godot.Vector2,Godot.CollisionObject2D[],Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  parent: Cobilas.GodotEngine.Utility.Physics.Physics2D
  langs:
  - csharp
  - vb
  name: RayCastHit(Camera2D?, Vector2, CollisionObject2D[]?, out Hit2D)
  nameWithType: Physics2D.RayCastHit(Camera2D?, Vector2, CollisionObject2D[]?, out Hit2D)
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHit(Godot.Camera2D?, Godot.Vector2, Godot.CollisionObject2D[]?, out Cobilas.GodotEngine.Utility.Physics.Hit2D)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Physics/Physics2D.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RayCastHit
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Physics2D.cs
    startLine: 96
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Creates a 2D ray that allows you to detect an object in 2D space.
  example: []
  syntax:
    content: public static bool RayCastHit(Camera2D? camera, Vector2 mousePosition, CollisionObject2D[]? exclude, out Hit2D hit)
    parameters:
    - id: camera
      type: Godot.Camera2D
      description: Camera that will be used to convert a point on the screen to a point in the 2d world.
    - id: mousePosition
      type: Godot.Vector2
      description: The point from which the ray will be thrown.
    - id: exclude
      type: Godot.CollisionObject2D[]
      description: The objects that will be excluded from the search.
    - id: hit
      type: Cobilas.GodotEngine.Utility.Physics.Hit2D
      description: The output parameter for the object's collision information.
    return:
      type: System.Boolean
      description: Returns <code>true</code> when any 2d object is detected.
    content.vb: Public Shared Function RayCastHit(camera As Camera2D, mousePosition As Vector2, exclude As CollisionObject2D(), hit As Hit2D) As Boolean
  overload: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHit*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="Godot.Camera2D" data-throw-if-not-resolved="false"></xref> object is null.
  nameWithType.vb: Physics2D.RayCastHit(Camera2D, Vector2, CollisionObject2D(), Hit2D)
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHit(Godot.Camera2D, Godot.Vector2, Godot.CollisionObject2D(), Cobilas.GodotEngine.Utility.Physics.Hit2D)
  name.vb: RayCastHit(Camera2D, Vector2, CollisionObject2D(), Hit2D)
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHit(Godot.Camera2D,Godot.Vector2,Godot.CollisionObject2D[],System.UInt32,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHit(Godot.Camera2D,Godot.Vector2,Godot.CollisionObject2D[],System.UInt32,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  id: RayCastHit(Godot.Camera2D,Godot.Vector2,Godot.CollisionObject2D[],System.UInt32,Cobilas.GodotEngine.Utility.Physics.Hit2D@)
  parent: Cobilas.GodotEngine.Utility.Physics.Physics2D
  langs:
  - csharp
  - vb
  name: RayCastHit(Camera2D?, Vector2, CollisionObject2D[]?, uint, out Hit2D)
  nameWithType: Physics2D.RayCastHit(Camera2D?, Vector2, CollisionObject2D[]?, uint, out Hit2D)
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHit(Godot.Camera2D?, Godot.Vector2, Godot.CollisionObject2D[]?, uint, out Cobilas.GodotEngine.Utility.Physics.Hit2D)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Physics/Physics2D.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RayCastHit
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Physics2D.cs
    startLine: 106
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Creates a 2D ray that allows you to detect an object in 2D space.
  example: []
  syntax:
    content: public static bool RayCastHit(Camera2D? camera, Vector2 mousePosition, CollisionObject2D[]? exclude, uint collisionLayer, out Hit2D hit)
    parameters:
    - id: camera
      type: Godot.Camera2D
      description: Camera that will be used to convert a point on the screen to a point in the 2d world.
    - id: mousePosition
      type: Godot.Vector2
      description: The point from which the ray will be thrown.
    - id: exclude
      type: Godot.CollisionObject2D[]
      description: The objects that will be excluded from the search.
    - id: collisionLayer
      type: System.UInt32
      description: The collision layers that will be checked by the 2D physical body detection methods.
    - id: hit
      type: Cobilas.GodotEngine.Utility.Physics.Hit2D
      description: The output parameter for the object's collision information.
    return:
      type: System.Boolean
      description: Returns <code>true</code> when any 2d object is detected.
    content.vb: Public Shared Function RayCastHit(camera As Camera2D, mousePosition As Vector2, exclude As CollisionObject2D(), collisionLayer As UInteger, hit As Hit2D) As Boolean
  overload: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHit*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="Godot.Camera2D" data-throw-if-not-resolved="false"></xref> object is null.
  nameWithType.vb: Physics2D.RayCastHit(Camera2D, Vector2, CollisionObject2D(), UInteger, Hit2D)
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHit(Godot.Camera2D, Godot.Vector2, Godot.CollisionObject2D(), UInteger, Cobilas.GodotEngine.Utility.Physics.Hit2D)
  name.vb: RayCastHit(Camera2D, Vector2, CollisionObject2D(), UInteger, Hit2D)
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHitAll(Godot.Camera2D,Godot.Vector2,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHitAll(Godot.Camera2D,Godot.Vector2,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  id: RayCastHitAll(Godot.Camera2D,Godot.Vector2,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  parent: Cobilas.GodotEngine.Utility.Physics.Physics2D
  langs:
  - csharp
  - vb
  name: RayCastHitAll(Camera2D?, Vector2, List<Hit2D>?)
  nameWithType: Physics2D.RayCastHitAll(Camera2D?, Vector2, List<Hit2D>?)
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHitAll(Godot.Camera2D?, Godot.Vector2, System.Collections.Generic.List<Cobilas.GodotEngine.Utility.Physics.Hit2D>?)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Physics/Physics2D.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RayCastHitAll
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Physics2D.cs
    startLine: 109
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Creates a 2D ray that allows detecting multiple objects in 2D space simultaneously.
  example: []
  syntax:
    content: public static bool RayCastHitAll(Camera2D? camera, Vector2 mousePosition, List<Hit2D>? list)
    parameters:
    - id: camera
      type: Godot.Camera2D
      description: Camera that will be used to convert a point on the screen to a point in the 2d world.
    - id: mousePosition
      type: Godot.Vector2
      description: The point from which the ray will be thrown.
    - id: list
      type: System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D}
      description: Here the objects that were detected by the 2d collision ray will be added.
    return:
      type: System.Boolean
      description: Returns <code>true</code> when multiple 2D objects are detected.
    content.vb: Public Shared Function RayCastHitAll(camera As Camera2D, mousePosition As Vector2, list As List(Of Hit2D)) As Boolean
  overload: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHitAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="Godot.Camera2D" data-throw-if-not-resolved="false"></xref> object is null.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="System.Collections.Generic.List%601" data-throw-if-not-resolved="false"></xref> object is null.
  nameWithType.vb: Physics2D.RayCastHitAll(Camera2D, Vector2, List(Of Hit2D))
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHitAll(Godot.Camera2D, Godot.Vector2, System.Collections.Generic.List(Of Cobilas.GodotEngine.Utility.Physics.Hit2D))
  name.vb: RayCastHitAll(Camera2D, Vector2, List(Of Hit2D))
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHitAll(Godot.Camera2D,Godot.Vector2,System.UInt32,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHitAll(Godot.Camera2D,Godot.Vector2,System.UInt32,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  id: RayCastHitAll(Godot.Camera2D,Godot.Vector2,System.UInt32,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  parent: Cobilas.GodotEngine.Utility.Physics.Physics2D
  langs:
  - csharp
  - vb
  name: RayCastHitAll(Camera2D?, Vector2, uint, List<Hit2D>?)
  nameWithType: Physics2D.RayCastHitAll(Camera2D?, Vector2, uint, List<Hit2D>?)
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHitAll(Godot.Camera2D?, Godot.Vector2, uint, System.Collections.Generic.List<Cobilas.GodotEngine.Utility.Physics.Hit2D>?)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Physics/Physics2D.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RayCastHitAll
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Physics2D.cs
    startLine: 112
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Creates a 2D ray that allows detecting multiple objects in 2D space simultaneously.
  example: []
  syntax:
    content: public static bool RayCastHitAll(Camera2D? camera, Vector2 mousePosition, uint collisionLayer, List<Hit2D>? list)
    parameters:
    - id: camera
      type: Godot.Camera2D
      description: Camera that will be used to convert a point on the screen to a point in the 2d world.
    - id: mousePosition
      type: Godot.Vector2
      description: The point from which the ray will be thrown.
    - id: collisionLayer
      type: System.UInt32
      description: The collision layers that will be checked by the 2D physical body detection methods.
    - id: list
      type: System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D}
      description: Here the objects that were detected by the 2d collision ray will be added.
    return:
      type: System.Boolean
      description: Returns <code>true</code> when multiple 2D objects are detected.
    content.vb: Public Shared Function RayCastHitAll(camera As Camera2D, mousePosition As Vector2, collisionLayer As UInteger, list As List(Of Hit2D)) As Boolean
  overload: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHitAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="Godot.Camera2D" data-throw-if-not-resolved="false"></xref> object is null.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="System.Collections.Generic.List%601" data-throw-if-not-resolved="false"></xref> object is null.
  nameWithType.vb: Physics2D.RayCastHitAll(Camera2D, Vector2, UInteger, List(Of Hit2D))
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHitAll(Godot.Camera2D, Godot.Vector2, UInteger, System.Collections.Generic.List(Of Cobilas.GodotEngine.Utility.Physics.Hit2D))
  name.vb: RayCastHitAll(Camera2D, Vector2, UInteger, List(Of Hit2D))
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHitAll(Godot.Camera2D,Godot.Vector2,Godot.CollisionObject2D[],System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHitAll(Godot.Camera2D,Godot.Vector2,Godot.CollisionObject2D[],System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  id: RayCastHitAll(Godot.Camera2D,Godot.Vector2,Godot.CollisionObject2D[],System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  parent: Cobilas.GodotEngine.Utility.Physics.Physics2D
  langs:
  - csharp
  - vb
  name: RayCastHitAll(Camera2D?, Vector2, CollisionObject2D[]?, List<Hit2D>?)
  nameWithType: Physics2D.RayCastHitAll(Camera2D?, Vector2, CollisionObject2D[]?, List<Hit2D>?)
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHitAll(Godot.Camera2D?, Godot.Vector2, Godot.CollisionObject2D[]?, System.Collections.Generic.List<Cobilas.GodotEngine.Utility.Physics.Hit2D>?)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Physics/Physics2D.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RayCastHitAll
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Physics2D.cs
    startLine: 115
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Creates a 2D ray that allows detecting multiple objects in 2D space simultaneously.
  example: []
  syntax:
    content: public static bool RayCastHitAll(Camera2D? camera, Vector2 mousePosition, CollisionObject2D[]? exclude, List<Hit2D>? list)
    parameters:
    - id: camera
      type: Godot.Camera2D
      description: Camera that will be used to convert a point on the screen to a point in the 2d world.
    - id: mousePosition
      type: Godot.Vector2
      description: The point from which the ray will be thrown.
    - id: exclude
      type: Godot.CollisionObject2D[]
      description: The objects that will be excluded from the search.
    - id: list
      type: System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D}
      description: Here the objects that were detected by the 2d collision ray will be added.
    return:
      type: System.Boolean
      description: Returns <code>true</code> when multiple 2D objects are detected.
    content.vb: Public Shared Function RayCastHitAll(camera As Camera2D, mousePosition As Vector2, exclude As CollisionObject2D(), list As List(Of Hit2D)) As Boolean
  overload: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHitAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="Godot.Camera2D" data-throw-if-not-resolved="false"></xref> object is null.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="System.Collections.Generic.List%601" data-throw-if-not-resolved="false"></xref> object is null.
  nameWithType.vb: Physics2D.RayCastHitAll(Camera2D, Vector2, CollisionObject2D(), List(Of Hit2D))
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHitAll(Godot.Camera2D, Godot.Vector2, Godot.CollisionObject2D(), System.Collections.Generic.List(Of Cobilas.GodotEngine.Utility.Physics.Hit2D))
  name.vb: RayCastHitAll(Camera2D, Vector2, CollisionObject2D(), List(Of Hit2D))
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHitAll(Godot.Camera2D,Godot.Vector2,Godot.CollisionObject2D[],System.UInt32,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHitAll(Godot.Camera2D,Godot.Vector2,Godot.CollisionObject2D[],System.UInt32,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  id: RayCastHitAll(Godot.Camera2D,Godot.Vector2,Godot.CollisionObject2D[],System.UInt32,System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D})
  parent: Cobilas.GodotEngine.Utility.Physics.Physics2D
  langs:
  - csharp
  - vb
  name: RayCastHitAll(Camera2D?, Vector2, CollisionObject2D[]?, uint, List<Hit2D>?)
  nameWithType: Physics2D.RayCastHitAll(Camera2D?, Vector2, CollisionObject2D[]?, uint, List<Hit2D>?)
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHitAll(Godot.Camera2D?, Godot.Vector2, Godot.CollisionObject2D[]?, uint, System.Collections.Generic.List<Cobilas.GodotEngine.Utility.Physics.Hit2D>?)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Physics/Physics2D.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RayCastHitAll
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Physics2D.cs
    startLine: 126
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Creates a 2D ray that allows detecting multiple objects in 2D space simultaneously.
  example: []
  syntax:
    content: public static bool RayCastHitAll(Camera2D? camera, Vector2 mousePosition, CollisionObject2D[]? exclude, uint collisionLayer, List<Hit2D>? list)
    parameters:
    - id: camera
      type: Godot.Camera2D
      description: Camera that will be used to convert a point on the screen to a point in the 2d world.
    - id: mousePosition
      type: Godot.Vector2
      description: The point from which the ray will be thrown.
    - id: exclude
      type: Godot.CollisionObject2D[]
      description: The objects that will be excluded from the search.
    - id: collisionLayer
      type: System.UInt32
      description: The collision layers that will be checked by the 2D physical body detection methods.
    - id: list
      type: System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D}
      description: Here the objects that were detected by the 2d collision ray will be added.
    return:
      type: System.Boolean
      description: Returns <code>true</code> when multiple 2D objects are detected.
    content.vb: Public Shared Function RayCastHitAll(camera As Camera2D, mousePosition As Vector2, exclude As CollisionObject2D(), collisionLayer As UInteger, list As List(Of Hit2D)) As Boolean
  overload: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHitAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="Godot.Camera2D" data-throw-if-not-resolved="false"></xref> object is null.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="System.Collections.Generic.List%601" data-throw-if-not-resolved="false"></xref> object is null.
  nameWithType.vb: Physics2D.RayCastHitAll(Camera2D, Vector2, CollisionObject2D(), UInteger, List(Of Hit2D))
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHitAll(Godot.Camera2D, Godot.Vector2, Godot.CollisionObject2D(), UInteger, System.Collections.Generic.List(Of Cobilas.GodotEngine.Utility.Physics.Hit2D))
  name.vb: RayCastHitAll(Camera2D, Vector2, CollisionObject2D(), UInteger, List(Of Hit2D))
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCast(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Cobilas.GodotEngine.Utility.Physics.RayHit2D@)
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCast(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Cobilas.GodotEngine.Utility.Physics.RayHit2D@)
  id: RayCast(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Cobilas.GodotEngine.Utility.Physics.RayHit2D@)
  parent: Cobilas.GodotEngine.Utility.Physics.Physics2D
  langs:
  - csharp
  - vb
  name: RayCast(Camera2D?, Vector2, Vector2, out RayHit2D)
  nameWithType: Physics2D.RayCast(Camera2D?, Vector2, Vector2, out RayHit2D)
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCast(Godot.Camera2D?, Godot.Vector2, Godot.Vector2, out Cobilas.GodotEngine.Utility.Physics.RayHit2D)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Physics/Physics2D.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RayCast
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Physics2D.cs
    startLine: 129
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Projects a ray that intersects the collider of a 2d object.
  example: []
  syntax:
    content: public static bool RayCast(Camera2D? camera, Vector2 from, Vector2 to, out RayHit2D hit)
    parameters:
    - id: camera
      type: Godot.Camera2D
      description: Camera that will be used to convert a point on the screen to a point in the 2d world.
    - id: from
      type: Godot.Vector2
      description: The starting point of the collision ray.
    - id: to
      type: Godot.Vector2
      description: The endpoint of the collision ray.
    - id: hit
      type: Cobilas.GodotEngine.Utility.Physics.RayHit2D
      description: The output parameter for the object's collision information.
    return:
      type: System.Boolean
      description: Returns <code>true</code> when any 2d object is detected.
    content.vb: Public Shared Function RayCast(camera As Camera2D, from As Vector2, [to] As Vector2, hit As RayHit2D) As Boolean
  overload: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCast*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="Godot.Camera2D" data-throw-if-not-resolved="false"></xref> object is null.
  nameWithType.vb: Physics2D.RayCast(Camera2D, Vector2, Vector2, RayHit2D)
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCast(Godot.Camera2D, Godot.Vector2, Godot.Vector2, Cobilas.GodotEngine.Utility.Physics.RayHit2D)
  name.vb: RayCast(Camera2D, Vector2, Vector2, RayHit2D)
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCast(Godot.Camera2D,Godot.Vector2,Godot.Vector2,System.UInt32,Cobilas.GodotEngine.Utility.Physics.RayHit2D@)
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCast(Godot.Camera2D,Godot.Vector2,Godot.Vector2,System.UInt32,Cobilas.GodotEngine.Utility.Physics.RayHit2D@)
  id: RayCast(Godot.Camera2D,Godot.Vector2,Godot.Vector2,System.UInt32,Cobilas.GodotEngine.Utility.Physics.RayHit2D@)
  parent: Cobilas.GodotEngine.Utility.Physics.Physics2D
  langs:
  - csharp
  - vb
  name: RayCast(Camera2D?, Vector2, Vector2, uint, out RayHit2D)
  nameWithType: Physics2D.RayCast(Camera2D?, Vector2, Vector2, uint, out RayHit2D)
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCast(Godot.Camera2D?, Godot.Vector2, Godot.Vector2, uint, out Cobilas.GodotEngine.Utility.Physics.RayHit2D)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Physics/Physics2D.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RayCast
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Physics2D.cs
    startLine: 132
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Projects a ray that intersects the collider of a 2d object.
  example: []
  syntax:
    content: public static bool RayCast(Camera2D? camera, Vector2 from, Vector2 to, uint collisionLayer, out RayHit2D hit)
    parameters:
    - id: camera
      type: Godot.Camera2D
      description: Camera that will be used to convert a point on the screen to a point in the 2d world.
    - id: from
      type: Godot.Vector2
      description: The starting point of the collision ray.
    - id: to
      type: Godot.Vector2
      description: The endpoint of the collision ray.
    - id: collisionLayer
      type: System.UInt32
      description: The collision layers that will be checked by the 2D physical body detection methods.
    - id: hit
      type: Cobilas.GodotEngine.Utility.Physics.RayHit2D
      description: The output parameter for the object's collision information.
    return:
      type: System.Boolean
      description: Returns <code>true</code> when any 2d object is detected.
    content.vb: Public Shared Function RayCast(camera As Camera2D, from As Vector2, [to] As Vector2, collisionLayer As UInteger, hit As RayHit2D) As Boolean
  overload: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCast*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="Godot.Camera2D" data-throw-if-not-resolved="false"></xref> object is null.
  nameWithType.vb: Physics2D.RayCast(Camera2D, Vector2, Vector2, UInteger, RayHit2D)
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCast(Godot.Camera2D, Godot.Vector2, Godot.Vector2, UInteger, Cobilas.GodotEngine.Utility.Physics.RayHit2D)
  name.vb: RayCast(Camera2D, Vector2, Vector2, UInteger, RayHit2D)
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCast(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Godot.CollisionObject2D[],Cobilas.GodotEngine.Utility.Physics.RayHit2D@)
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCast(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Godot.CollisionObject2D[],Cobilas.GodotEngine.Utility.Physics.RayHit2D@)
  id: RayCast(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Godot.CollisionObject2D[],Cobilas.GodotEngine.Utility.Physics.RayHit2D@)
  parent: Cobilas.GodotEngine.Utility.Physics.Physics2D
  langs:
  - csharp
  - vb
  name: RayCast(Camera2D?, Vector2, Vector2, CollisionObject2D[]?, out RayHit2D)
  nameWithType: Physics2D.RayCast(Camera2D?, Vector2, Vector2, CollisionObject2D[]?, out RayHit2D)
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCast(Godot.Camera2D?, Godot.Vector2, Godot.Vector2, Godot.CollisionObject2D[]?, out Cobilas.GodotEngine.Utility.Physics.RayHit2D)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Physics/Physics2D.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RayCast
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Physics2D.cs
    startLine: 135
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Projects a ray that intersects the collider of a 2d object.
  example: []
  syntax:
    content: public static bool RayCast(Camera2D? camera, Vector2 from, Vector2 to, CollisionObject2D[]? exclude, out RayHit2D hit)
    parameters:
    - id: camera
      type: Godot.Camera2D
      description: Camera that will be used to convert a point on the screen to a point in the 2d world.
    - id: from
      type: Godot.Vector2
      description: The starting point of the collision ray.
    - id: to
      type: Godot.Vector2
      description: The endpoint of the collision ray.
    - id: exclude
      type: Godot.CollisionObject2D[]
      description: The objects that will be excluded from the search.
    - id: hit
      type: Cobilas.GodotEngine.Utility.Physics.RayHit2D
      description: The output parameter for the object's collision information.
    return:
      type: System.Boolean
      description: Returns <code>true</code> when any 2d object is detected.
    content.vb: Public Shared Function RayCast(camera As Camera2D, from As Vector2, [to] As Vector2, exclude As CollisionObject2D(), hit As RayHit2D) As Boolean
  overload: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCast*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="Godot.Camera2D" data-throw-if-not-resolved="false"></xref> object is null.
  nameWithType.vb: Physics2D.RayCast(Camera2D, Vector2, Vector2, CollisionObject2D(), RayHit2D)
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCast(Godot.Camera2D, Godot.Vector2, Godot.Vector2, Godot.CollisionObject2D(), Cobilas.GodotEngine.Utility.Physics.RayHit2D)
  name.vb: RayCast(Camera2D, Vector2, Vector2, CollisionObject2D(), RayHit2D)
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCast(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Godot.CollisionObject2D[],System.UInt32,Cobilas.GodotEngine.Utility.Physics.RayHit2D@)
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCast(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Godot.CollisionObject2D[],System.UInt32,Cobilas.GodotEngine.Utility.Physics.RayHit2D@)
  id: RayCast(Godot.Camera2D,Godot.Vector2,Godot.Vector2,Godot.CollisionObject2D[],System.UInt32,Cobilas.GodotEngine.Utility.Physics.RayHit2D@)
  parent: Cobilas.GodotEngine.Utility.Physics.Physics2D
  langs:
  - csharp
  - vb
  name: RayCast(Camera2D?, Vector2, Vector2, CollisionObject2D[]?, uint, out RayHit2D)
  nameWithType: Physics2D.RayCast(Camera2D?, Vector2, Vector2, CollisionObject2D[]?, uint, out RayHit2D)
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCast(Godot.Camera2D?, Godot.Vector2, Godot.Vector2, Godot.CollisionObject2D[]?, uint, out Cobilas.GodotEngine.Utility.Physics.RayHit2D)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Physics/Physics2D.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RayCast
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Physics2D.cs
    startLine: 146
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Projects a ray that intersects the collider of a 2d object.
  example: []
  syntax:
    content: public static bool RayCast(Camera2D? camera, Vector2 from, Vector2 to, CollisionObject2D[]? exclude, uint collisionLayer, out RayHit2D hit)
    parameters:
    - id: camera
      type: Godot.Camera2D
      description: Camera that will be used to convert a point on the screen to a point in the 2d world.
    - id: from
      type: Godot.Vector2
      description: The starting point of the collision ray.
    - id: to
      type: Godot.Vector2
      description: The endpoint of the collision ray.
    - id: exclude
      type: Godot.CollisionObject2D[]
      description: The objects that will be excluded from the search.
    - id: collisionLayer
      type: System.UInt32
      description: The collision layers that will be checked by the 2D physical body detection methods.
    - id: hit
      type: Cobilas.GodotEngine.Utility.Physics.RayHit2D
      description: The output parameter for the object's collision information.
    return:
      type: System.Boolean
      description: Returns <code>true</code> when any 2d object is detected.
    content.vb: Public Shared Function RayCast(camera As Camera2D, from As Vector2, [to] As Vector2, exclude As CollisionObject2D(), collisionLayer As UInteger, hit As RayHit2D) As Boolean
  overload: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCast*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="Godot.Camera2D" data-throw-if-not-resolved="false"></xref> object is null.
  nameWithType.vb: Physics2D.RayCast(Camera2D, Vector2, Vector2, CollisionObject2D(), UInteger, RayHit2D)
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCast(Godot.Camera2D, Godot.Vector2, Godot.Vector2, Godot.CollisionObject2D(), UInteger, Cobilas.GodotEngine.Utility.Physics.RayHit2D)
  name.vb: RayCast(Camera2D, Vector2, Vector2, CollisionObject2D(), UInteger, RayHit2D)
references:
- uid: Cobilas.GodotEngine.Utility.Physics
  commentId: N:Cobilas.GodotEngine.Utility.Physics
  href: Cobilas.html
  name: Cobilas.GodotEngine.Utility.Physics
  nameWithType: Cobilas.GodotEngine.Utility.Physics
  fullName: Cobilas.GodotEngine.Utility.Physics
  spec.csharp:
  - uid: Cobilas
    name: Cobilas
    href: Cobilas.html
  - name: .
  - uid: Cobilas.GodotEngine
    name: GodotEngine
    href: Cobilas.GodotEngine.html
  - name: .
  - uid: Cobilas.GodotEngine.Utility
    name: Utility
    href: Cobilas.GodotEngine.Utility.html
  - name: .
  - uid: Cobilas.GodotEngine.Utility.Physics
    name: Physics
    href: Cobilas.GodotEngine.Utility.Physics.html
  spec.vb:
  - uid: Cobilas
    name: Cobilas
    href: Cobilas.html
  - name: .
  - uid: Cobilas.GodotEngine
    name: GodotEngine
    href: Cobilas.GodotEngine.html
  - name: .
  - uid: Cobilas.GodotEngine.Utility
    name: Utility
    href: Cobilas.GodotEngine.Utility.html
  - name: .
  - uid: Cobilas.GodotEngine.Utility.Physics
    name: Physics
    href: Cobilas.GodotEngine.Utility.Physics.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Godot.Camera2D
  commentId: T:Godot.Camera2D
  parent: Godot
  isExternal: true
  name: Camera2D
  nameWithType: Camera2D
  fullName: Godot.Camera2D
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastCircle*
  commentId: Overload:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastCircle
  href: Cobilas.GodotEngine.Utility.Physics.Physics2D.html#Cobilas_GodotEngine_Utility_Physics_Physics2D_RayCastCircle_Godot_Camera2D_Godot_Vector2_System_Single_Cobilas_GodotEngine_Utility_Physics_Hit2D__
  name: RayCastCircle
  nameWithType: Physics2D.RayCastCircle
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastCircle
- uid: Godot.Vector2
  commentId: T:Godot.Vector2
  parent: Godot
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Godot.Vector2
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Cobilas.GodotEngine.Utility.Physics.Hit2D
  commentId: T:Cobilas.GodotEngine.Utility.Physics.Hit2D
  parent: Cobilas.GodotEngine.Utility.Physics
  href: Cobilas.GodotEngine.Utility.Physics.Hit2D.html
  name: Hit2D
  nameWithType: Hit2D
  fullName: Cobilas.GodotEngine.Utility.Physics.Hit2D
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Godot
  commentId: N:Godot
  href: Godot.html
  name: Godot
  nameWithType: Godot
  fullName: Godot
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: Godot.CollisionObject2D[]
  isExternal: true
  name: CollisionObject2D[]
  nameWithType: CollisionObject2D[]
  fullName: Godot.CollisionObject2D[]
  nameWithType.vb: CollisionObject2D()
  fullName.vb: Godot.CollisionObject2D()
  name.vb: CollisionObject2D()
  spec.csharp:
  - uid: Godot.CollisionObject2D
    name: CollisionObject2D
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Godot.CollisionObject2D
    name: CollisionObject2D
    isExternal: true
  - name: (
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllCircle*
  commentId: Overload:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllCircle
  href: Cobilas.GodotEngine.Utility.Physics.Physics2D.html#Cobilas_GodotEngine_Utility_Physics_Physics2D_RayCastAllCircle_Godot_Camera2D_Godot_Vector2_System_Single_System_Collections_Generic_List_Cobilas_GodotEngine_Utility_Physics_Hit2D__
  name: RayCastAllCircle
  nameWithType: Physics2D.RayCastAllCircle
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllCircle
- uid: System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D}
  commentId: T:System.Collections.Generic.List{Cobilas.GodotEngine.Utility.Physics.Hit2D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Hit2D>
  nameWithType: List<Hit2D>
  fullName: System.Collections.Generic.List<Cobilas.GodotEngine.Utility.Physics.Hit2D>
  nameWithType.vb: List(Of Hit2D)
  fullName.vb: System.Collections.Generic.List(Of Cobilas.GodotEngine.Utility.Physics.Hit2D)
  name.vb: List(Of Hit2D)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Cobilas.GodotEngine.Utility.Physics.Hit2D
    name: Hit2D
    href: Cobilas.GodotEngine.Utility.Physics.Hit2D.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Cobilas.GodotEngine.Utility.Physics.Hit2D
    name: Hit2D
    href: Cobilas.GodotEngine.Utility.Physics.Hit2D.html
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastBox*
  commentId: Overload:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastBox
  href: Cobilas.GodotEngine.Utility.Physics.Physics2D.html#Cobilas_GodotEngine_Utility_Physics_Physics2D_RayCastBox_Godot_Camera2D_Godot_Vector2_Godot_Vector2_Cobilas_GodotEngine_Utility_Physics_Hit2D__
  name: RayCastBox
  nameWithType: Physics2D.RayCastBox
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastBox
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllBox*
  commentId: Overload:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllBox
  href: Cobilas.GodotEngine.Utility.Physics.Physics2D.html#Cobilas_GodotEngine_Utility_Physics_Physics2D_RayCastAllBox_Godot_Camera2D_Godot_Vector2_Godot_Vector2_System_Collections_Generic_List_Cobilas_GodotEngine_Utility_Physics_Hit2D__
  name: RayCastAllBox
  nameWithType: Physics2D.RayCastAllBox
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastAllBox
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHit*
  commentId: Overload:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHit
  href: Cobilas.GodotEngine.Utility.Physics.Physics2D.html#Cobilas_GodotEngine_Utility_Physics_Physics2D_RayCastHit_Godot_Camera2D_Godot_Vector2_Cobilas_GodotEngine_Utility_Physics_Hit2D__
  name: RayCastHit
  nameWithType: Physics2D.RayCastHit
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHit
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHitAll*
  commentId: Overload:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHitAll
  href: Cobilas.GodotEngine.Utility.Physics.Physics2D.html#Cobilas_GodotEngine_Utility_Physics_Physics2D_RayCastHitAll_Godot_Camera2D_Godot_Vector2_System_Collections_Generic_List_Cobilas_GodotEngine_Utility_Physics_Hit2D__
  name: RayCastHitAll
  nameWithType: Physics2D.RayCastHitAll
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCastHitAll
- uid: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCast*
  commentId: Overload:Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCast
  href: Cobilas.GodotEngine.Utility.Physics.Physics2D.html#Cobilas_GodotEngine_Utility_Physics_Physics2D_RayCast_Godot_Camera2D_Godot_Vector2_Godot_Vector2_Cobilas_GodotEngine_Utility_Physics_RayHit2D__
  name: RayCast
  nameWithType: Physics2D.RayCast
  fullName: Cobilas.GodotEngine.Utility.Physics.Physics2D.RayCast
- uid: Cobilas.GodotEngine.Utility.Physics.RayHit2D
  commentId: T:Cobilas.GodotEngine.Utility.Physics.RayHit2D
  parent: Cobilas.GodotEngine.Utility.Physics
  href: Cobilas.GodotEngine.Utility.Physics.RayHit2D.html
  name: RayHit2D
  nameWithType: RayHit2D
  fullName: Cobilas.GodotEngine.Utility.Physics.RayHit2D
