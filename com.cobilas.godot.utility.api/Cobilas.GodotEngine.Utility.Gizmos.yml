### YamlMime:ManagedReference
items:
- uid: Cobilas.GodotEngine.Utility.Gizmos
  commentId: T:Cobilas.GodotEngine.Utility.Gizmos
  id: Gizmos
  parent: Cobilas.GodotEngine.Utility
  children:
  - Cobilas.GodotEngine.Utility.Gizmos.Color
  - Cobilas.GodotEngine.Utility.Gizmos.DrawArc(Godot.Vector2,System.Single,System.Single,System.Single,System.Int32)
  - Cobilas.GodotEngine.Utility.Gizmos.DrawArc(Godot.Vector2,System.Single,System.Single,System.Single,System.Int32,System.Single)
  - Cobilas.GodotEngine.Utility.Gizmos.DrawCircle(Godot.Vector2,System.Single)
  - Cobilas.GodotEngine.Utility.Gizmos.DrawLine(Godot.Vector2,Godot.Vector2)
  - Cobilas.GodotEngine.Utility.Gizmos.DrawLine(Godot.Vector2,Godot.Vector2,System.Single)
  - Cobilas.GodotEngine.Utility.Gizmos.DrawMesh(Godot.Mesh,Godot.Texture,Godot.Texture,System.Nullable{Godot.Transform2D})
  - Cobilas.GodotEngine.Utility.Gizmos.DrawMultiline(Godot.Vector2[])
  - Cobilas.GodotEngine.Utility.Gizmos.DrawMultiline(Godot.Vector2[],System.Single)
  - Cobilas.GodotEngine.Utility.Gizmos.DrawMultiline(System.Collections.Generic.List{Godot.Vector2})
  - Cobilas.GodotEngine.Utility.Gizmos.DrawMultiline(System.Collections.Generic.List{Godot.Vector2},System.Single)
  - Cobilas.GodotEngine.Utility.Gizmos.DrawRect(Godot.Rect2)
  - Cobilas.GodotEngine.Utility.Gizmos.DrawTexture(Godot.Texture,Godot.Vector2,Godot.Texture)
  - Cobilas.GodotEngine.Utility.Gizmos.DrawTextureRect(Godot.Texture,Godot.Rect2,System.Boolean,System.Boolean,Godot.Texture)
  - Cobilas.GodotEngine.Utility.Gizmos.DrawWireRect(Godot.Rect2)
  - Cobilas.GodotEngine.Utility.Gizmos.DrawWireRect(Godot.Rect2,System.Single)
  langs:
  - csharp
  - vb
  name: Gizmos
  nameWithType: Gizmos
  fullName: Cobilas.GodotEngine.Utility.Gizmos
  type: Class
  source:
    remote:
      path: GodotEngine.Utility/Gizmos.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: Gizmos
    path: ../../Godot Dev/Package/com.cobilas.godot.utility/GodotEngine.Utility/Gizmos.cs
    startLine: 5
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility
  summary: Gizmos are used to give visual debugging or setup aids in the Scene view.
  example: []
  syntax:
    content: public static class Gizmos
    content.vb: Public Module Gizmos
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Cobilas.GodotEngine.Utility.Gizmos.Color
  commentId: P:Cobilas.GodotEngine.Utility.Gizmos.Color
  id: Color
  parent: Cobilas.GodotEngine.Utility.Gizmos
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: Gizmos.Color
  fullName: Cobilas.GodotEngine.Utility.Gizmos.Color
  type: Property
  source:
    remote:
      path: GodotEngine.Utility/Gizmos.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: Color
    path: ../../Godot Dev/Package/com.cobilas.godot.utility/GodotEngine.Utility/Gizmos.cs
    startLine: 8
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility
  summary: Sets the Color of the gizmos that are drawn next.
  example: []
  syntax:
    content: public static Color Color { get; set; }
    parameters: []
    return:
      type: Godot.Color
      description: Returns or sets the color of the next gizmo.
    content.vb: Public Shared Property Color As Color
  overload: Cobilas.GodotEngine.Utility.Gizmos.Color*
- uid: Cobilas.GodotEngine.Utility.Gizmos.DrawLine(Godot.Vector2,Godot.Vector2,System.Single)
  commentId: M:Cobilas.GodotEngine.Utility.Gizmos.DrawLine(Godot.Vector2,Godot.Vector2,System.Single)
  id: DrawLine(Godot.Vector2,Godot.Vector2,System.Single)
  parent: Cobilas.GodotEngine.Utility.Gizmos
  langs:
  - csharp
  - vb
  name: DrawLine(Vector2, Vector2, float)
  nameWithType: Gizmos.DrawLine(Vector2, Vector2, float)
  fullName: Cobilas.GodotEngine.Utility.Gizmos.DrawLine(Godot.Vector2, Godot.Vector2, float)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Gizmos.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: DrawLine
    path: ../../Godot Dev/Package/com.cobilas.godot.utility/GodotEngine.Utility/Gizmos.cs
    startLine: 22
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility
  summary: >-
    Draws a line from a 2D point to another, with a given color and width. It can

    be optionally antialiased. See also <xref href="Godot.CanvasItem.DrawMultiline(Godot.Vector2%5b%5d%2cGodot.Color%2cSystem.Single%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>

    and <xref href="Godot.CanvasItem.DrawPolyline(Godot.Vector2%5b%5d%2cGodot.Color%2cSystem.Single%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.

    <p>Note: Line drawing is not accelerated by batching if <code>antialiased</code> is <code>true</code>.</p>

    <p>Note: Due to how it works, built-in antialiasing will not look correct for translucent lines and may not work on certain platforms. As a workaround, install the <a href="https://github.com/godot-extended-libraries/godot-antialiased-line2d">Antialiased Line2D</a> add-on then create an AntialiasedLine2D node. That node relies on a texture with custom mipmaps to perform antialiasing. 2D batching is also still supported with those antialiased lines.</p>
  example: []
  syntax:
    content: public static void DrawLine(Vector2 start, Vector2 end, float width)
    parameters:
    - id: start
      type: Godot.Vector2
      description: The beginning of the line.
    - id: end
      type: Godot.Vector2
      description: The end of the line.
    - id: width
      type: System.Single
      description: The thickness of the line.
    content.vb: Public Shared Sub DrawLine(start As Vector2, [end] As Vector2, width As Single)
  overload: Cobilas.GodotEngine.Utility.Gizmos.DrawLine*
  nameWithType.vb: Gizmos.DrawLine(Vector2, Vector2, Single)
  fullName.vb: Cobilas.GodotEngine.Utility.Gizmos.DrawLine(Godot.Vector2, Godot.Vector2, Single)
  name.vb: DrawLine(Vector2, Vector2, Single)
- uid: Cobilas.GodotEngine.Utility.Gizmos.DrawLine(Godot.Vector2,Godot.Vector2)
  commentId: M:Cobilas.GodotEngine.Utility.Gizmos.DrawLine(Godot.Vector2,Godot.Vector2)
  id: DrawLine(Godot.Vector2,Godot.Vector2)
  parent: Cobilas.GodotEngine.Utility.Gizmos
  langs:
  - csharp
  - vb
  name: DrawLine(Vector2, Vector2)
  nameWithType: Gizmos.DrawLine(Vector2, Vector2)
  fullName: Cobilas.GodotEngine.Utility.Gizmos.DrawLine(Godot.Vector2, Godot.Vector2)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Gizmos.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: DrawLine
    path: ../../Godot Dev/Package/com.cobilas.godot.utility/GodotEngine.Utility/Gizmos.cs
    startLine: 33
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility
  summary: >-
    Draws a line from a 2D point to another, with a given color and width. It can

    be optionally antialiased. See also <xref href="Godot.CanvasItem.DrawMultiline(Godot.Vector2%5b%5d%2cGodot.Color%2cSystem.Single%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>

    and <xref href="Godot.CanvasItem.DrawPolyline(Godot.Vector2%5b%5d%2cGodot.Color%2cSystem.Single%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.

    <p>Note: Line drawing is not accelerated by batching if <code>antialiased</code> is <code>true</code>.</p>

    <p>Note: Due to how it works, built-in antialiasing will not look correct for translucent lines and may not work on certain platforms. As a workaround, install the <a href="https://github.com/godot-extended-libraries/godot-antialiased-line2d">Antialiased Line2D</a> add-on then create an AntialiasedLine2D node. That node relies on a texture with custom mipmaps to perform antialiasing. 2D batching is also still supported with those antialiased lines.</p>
  example: []
  syntax:
    content: public static void DrawLine(Vector2 start, Vector2 end)
    parameters:
    - id: start
      type: Godot.Vector2
      description: The beginning of the line.
    - id: end
      type: Godot.Vector2
      description: The end of the line.
    content.vb: Public Shared Sub DrawLine(start As Vector2, [end] As Vector2)
  overload: Cobilas.GodotEngine.Utility.Gizmos.DrawLine*
- uid: Cobilas.GodotEngine.Utility.Gizmos.DrawRect(Godot.Rect2)
  commentId: M:Cobilas.GodotEngine.Utility.Gizmos.DrawRect(Godot.Rect2)
  id: DrawRect(Godot.Rect2)
  parent: Cobilas.GodotEngine.Utility.Gizmos
  langs:
  - csharp
  - vb
  name: DrawRect(Rect2)
  nameWithType: Gizmos.DrawRect(Rect2)
  fullName: Cobilas.GodotEngine.Utility.Gizmos.DrawRect(Godot.Rect2)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Gizmos.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: DrawRect
    path: ../../Godot Dev/Package/com.cobilas.godot.utility/GodotEngine.Utility/Gizmos.cs
    startLine: 40
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility
  summary: >-
    <p>Draws a solid body rectangle.</p>

    <p>Note: Due to how it works, built-in antialiasing will not look correct for translucent polygons and may not work on certain platforms. As a workaround, install the <a href="https://github.com/godot-extended-libraries/godot-antialiased-line2d">Antialiased Line2D</a> add-on then create an AntialiasedPolygon2D node. That node relies on a texture with custom mipmaps to perform antialiasing.</p>
  example: []
  syntax:
    content: public static void DrawRect(Rect2 rect)
    parameters:
    - id: rect
      type: Godot.Rect2
      description: The dimensions of the rectangle.
    content.vb: Public Shared Sub DrawRect(rect As Rect2)
  overload: Cobilas.GodotEngine.Utility.Gizmos.DrawRect*
- uid: Cobilas.GodotEngine.Utility.Gizmos.DrawWireRect(Godot.Rect2,System.Single)
  commentId: M:Cobilas.GodotEngine.Utility.Gizmos.DrawWireRect(Godot.Rect2,System.Single)
  id: DrawWireRect(Godot.Rect2,System.Single)
  parent: Cobilas.GodotEngine.Utility.Gizmos
  langs:
  - csharp
  - vb
  name: DrawWireRect(Rect2, float)
  nameWithType: Gizmos.DrawWireRect(Rect2, float)
  fullName: Cobilas.GodotEngine.Utility.Gizmos.DrawWireRect(Godot.Rect2, float)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Gizmos.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: DrawWireRect
    path: ../../Godot Dev/Package/com.cobilas.godot.utility/GodotEngine.Utility/Gizmos.cs
    startLine: 48
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility
  summary: >-
    Draw a rectangle of a skeletonized body.

    <p>Note: Due to how it works, built-in antialiasing will not look correct for translucent polygons and may not work on certain platforms. As a workaround, install the <a href="https://github.com/godot-extended-libraries/godot-antialiased-line2d">Antialiased Line2D</a> add-on then create an AntialiasedPolygon2D node. That node relies on a texture with custom mipmaps to perform antialiasing.</p>
  example: []
  syntax:
    content: public static void DrawWireRect(Rect2 rect, float width)
    parameters:
    - id: rect
      type: Godot.Rect2
      description: The dimensions of the rectangle.
    - id: width
      type: System.Single
      description: The thickness of the line.
    content.vb: Public Shared Sub DrawWireRect(rect As Rect2, width As Single)
  overload: Cobilas.GodotEngine.Utility.Gizmos.DrawWireRect*
  nameWithType.vb: Gizmos.DrawWireRect(Rect2, Single)
  fullName.vb: Cobilas.GodotEngine.Utility.Gizmos.DrawWireRect(Godot.Rect2, Single)
  name.vb: DrawWireRect(Rect2, Single)
- uid: Cobilas.GodotEngine.Utility.Gizmos.DrawWireRect(Godot.Rect2)
  commentId: M:Cobilas.GodotEngine.Utility.Gizmos.DrawWireRect(Godot.Rect2)
  id: DrawWireRect(Godot.Rect2)
  parent: Cobilas.GodotEngine.Utility.Gizmos
  langs:
  - csharp
  - vb
  name: DrawWireRect(Rect2)
  nameWithType: Gizmos.DrawWireRect(Rect2)
  fullName: Cobilas.GodotEngine.Utility.Gizmos.DrawWireRect(Godot.Rect2)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Gizmos.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: DrawWireRect
    path: ../../Godot Dev/Package/com.cobilas.godot.utility/GodotEngine.Utility/Gizmos.cs
    startLine: 55
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility
  summary: >-
    Draw a rectangle of a skeletonized body.

    <p>Note: Due to how it works, built-in antialiasing will not look correct for translucent polygons and may not work on certain platforms. As a workaround, install the <a href="https://github.com/godot-extended-libraries/godot-antialiased-line2d">Antialiased Line2D</a> add-on then create an AntialiasedPolygon2D node. That node relies on a texture with custom mipmaps to perform antialiasing.</p>
  example: []
  syntax:
    content: public static void DrawWireRect(Rect2 rect)
    parameters:
    - id: rect
      type: Godot.Rect2
      description: The dimensions of the rectangle.
    content.vb: Public Shared Sub DrawWireRect(rect As Rect2)
  overload: Cobilas.GodotEngine.Utility.Gizmos.DrawWireRect*
- uid: Cobilas.GodotEngine.Utility.Gizmos.DrawCircle(Godot.Vector2,System.Single)
  commentId: M:Cobilas.GodotEngine.Utility.Gizmos.DrawCircle(Godot.Vector2,System.Single)
  id: DrawCircle(Godot.Vector2,System.Single)
  parent: Cobilas.GodotEngine.Utility.Gizmos
  langs:
  - csharp
  - vb
  name: DrawCircle(Vector2, float)
  nameWithType: Gizmos.DrawCircle(Vector2, float)
  fullName: Cobilas.GodotEngine.Utility.Gizmos.DrawCircle(Godot.Vector2, float)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Gizmos.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: DrawCircle
    path: ../../Godot Dev/Package/com.cobilas.godot.utility/GodotEngine.Utility/Gizmos.cs
    startLine: 62
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility
  summary: >-
    <p>Draws a colored, filled circle. See also <xref href="Godot.CanvasItem.DrawArc(Godot.Vector2%2cSystem.Single%2cSystem.Single%2cSystem.Single%2cSystem.Int32%2cGodot.Color%2cSystem.Single%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>, <xref href="Godot.CanvasItem.DrawPolyline(Godot.Vector2%5b%5d%2cGodot.Color%2cSystem.Single%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> and <xref href="Godot.CanvasItem.DrawPolygon(Godot.Vector2%5b%5d%2cGodot.Color%5b%5d%2cGodot.Vector2%5b%5d%2cGodot.Texture%2cGodot.Texture%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.</p>

    <p>Note: Built-in antialiasing is not provided for <xref href="Godot.CanvasItem.DrawCircle(Godot.Vector2%2cSystem.Single%2cGodot.Color)" data-throw-if-not-resolved="false"></xref>. As a workaround, install the <a href="https://github.com/godot-extended-libraries/godot-antialiased-line2d">Antialiased Line2D</a> add-on then create an AntialiasedRegularPolygon2D node. That node relies on a texture with custom mipmaps to perform antialiasing.</p>
  example: []
  syntax:
    content: public static void DrawCircle(Vector2 position, float radius)
    parameters:
    - id: position
      type: Godot.Vector2
      description: The central position of the circle.
    - id: radius
      type: System.Single
      description: The radius of the circle.
    content.vb: Public Shared Sub DrawCircle(position As Vector2, radius As Single)
  overload: Cobilas.GodotEngine.Utility.Gizmos.DrawCircle*
  nameWithType.vb: Gizmos.DrawCircle(Vector2, Single)
  fullName.vb: Cobilas.GodotEngine.Utility.Gizmos.DrawCircle(Godot.Vector2, Single)
  name.vb: DrawCircle(Vector2, Single)
- uid: Cobilas.GodotEngine.Utility.Gizmos.DrawMultiline(Godot.Vector2[],System.Single)
  commentId: M:Cobilas.GodotEngine.Utility.Gizmos.DrawMultiline(Godot.Vector2[],System.Single)
  id: DrawMultiline(Godot.Vector2[],System.Single)
  parent: Cobilas.GodotEngine.Utility.Gizmos
  langs:
  - csharp
  - vb
  name: DrawMultiline(Vector2[], float)
  nameWithType: Gizmos.DrawMultiline(Vector2[], float)
  fullName: Cobilas.GodotEngine.Utility.Gizmos.DrawMultiline(Godot.Vector2[], float)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Gizmos.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: DrawMultiline
    path: ../../Godot Dev/Package/com.cobilas.godot.utility/GodotEngine.Utility/Gizmos.cs
    startLine: 70
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility
  summary: >-
    <p>Draws multiple disconnected lines with a uniform <code>color</code>. When drawing large amounts of lines, this is faster than using individual <xref href="Godot.CanvasItem.DrawLine(Godot.Vector2%2cGodot.Vector2%2cGodot.Color%2cSystem.Single%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> calls. To draw interconnected lines, use <xref href="Godot.CanvasItem.DrawPolyline(Godot.Vector2%5b%5d%2cGodot.Color%2cSystem.Single%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> instead.</p>

    <p>Note: <code>width</code> and <code>antialiased</code> are currently not implemented and have no effect. As a workaround, install the <a href="https://github.com/godot-extended-libraries/godot-antialiased-line2d">Antialiased Line2D</a> add-on then create an AntialiasedLine2D node. That node relies on a texture with custom mipmaps to perform antialiasing. 2D batching is also still supported with those antialiased lines.</p>
  example: []
  syntax:
    content: public static void DrawMultiline(Vector2[] points, float width)
    parameters:
    - id: points
      type: Godot.Vector2[]
      description: The points that form the line.
    - id: width
      type: System.Single
      description: The thickness of the line.
    content.vb: Public Shared Sub DrawMultiline(points As Vector2(), width As Single)
  overload: Cobilas.GodotEngine.Utility.Gizmos.DrawMultiline*
  nameWithType.vb: Gizmos.DrawMultiline(Vector2(), Single)
  fullName.vb: Cobilas.GodotEngine.Utility.Gizmos.DrawMultiline(Godot.Vector2(), Single)
  name.vb: DrawMultiline(Vector2(), Single)
- uid: Cobilas.GodotEngine.Utility.Gizmos.DrawMultiline(Godot.Vector2[])
  commentId: M:Cobilas.GodotEngine.Utility.Gizmos.DrawMultiline(Godot.Vector2[])
  id: DrawMultiline(Godot.Vector2[])
  parent: Cobilas.GodotEngine.Utility.Gizmos
  langs:
  - csharp
  - vb
  name: DrawMultiline(Vector2[])
  nameWithType: Gizmos.DrawMultiline(Vector2[])
  fullName: Cobilas.GodotEngine.Utility.Gizmos.DrawMultiline(Godot.Vector2[])
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Gizmos.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: DrawMultiline
    path: ../../Godot Dev/Package/com.cobilas.godot.utility/GodotEngine.Utility/Gizmos.cs
    startLine: 77
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility
  summary: >-
    <p>Draws multiple disconnected lines with a uniform <code>color</code>. When drawing large amounts of lines, this is faster than using individual <xref href="Godot.CanvasItem.DrawLine(Godot.Vector2%2cGodot.Vector2%2cGodot.Color%2cSystem.Single%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> calls. To draw interconnected lines, use <xref href="Godot.CanvasItem.DrawPolyline(Godot.Vector2%5b%5d%2cGodot.Color%2cSystem.Single%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> instead.</p>

    <p>Note: <code>width</code> and <code>antialiased</code> are currently not implemented and have no effect. As a workaround, install the <a href="https://github.com/godot-extended-libraries/godot-antialiased-line2d">Antialiased Line2D</a> add-on then create an AntialiasedLine2D node. That node relies on a texture with custom mipmaps to perform antialiasing. 2D batching is also still supported with those antialiased lines.</p>
  example: []
  syntax:
    content: public static void DrawMultiline(Vector2[] points)
    parameters:
    - id: points
      type: Godot.Vector2[]
      description: The points that form the line.
    content.vb: Public Shared Sub DrawMultiline(points As Vector2())
  overload: Cobilas.GodotEngine.Utility.Gizmos.DrawMultiline*
  nameWithType.vb: Gizmos.DrawMultiline(Vector2())
  fullName.vb: Cobilas.GodotEngine.Utility.Gizmos.DrawMultiline(Godot.Vector2())
  name.vb: DrawMultiline(Vector2())
- uid: Cobilas.GodotEngine.Utility.Gizmos.DrawMultiline(System.Collections.Generic.List{Godot.Vector2},System.Single)
  commentId: M:Cobilas.GodotEngine.Utility.Gizmos.DrawMultiline(System.Collections.Generic.List{Godot.Vector2},System.Single)
  id: DrawMultiline(System.Collections.Generic.List{Godot.Vector2},System.Single)
  parent: Cobilas.GodotEngine.Utility.Gizmos
  langs:
  - csharp
  - vb
  name: DrawMultiline(List<Vector2>, float)
  nameWithType: Gizmos.DrawMultiline(List<Vector2>, float)
  fullName: Cobilas.GodotEngine.Utility.Gizmos.DrawMultiline(System.Collections.Generic.List<Godot.Vector2>, float)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Gizmos.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: DrawMultiline
    path: ../../Godot Dev/Package/com.cobilas.godot.utility/GodotEngine.Utility/Gizmos.cs
    startLine: 84
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility
  summary: >-
    <p>Draws multiple disconnected lines with a uniform <code>color</code>. When drawing large amounts of lines, this is faster than using individual <xref href="Godot.CanvasItem.DrawLine(Godot.Vector2%2cGodot.Vector2%2cGodot.Color%2cSystem.Single%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> calls. To draw interconnected lines, use <xref href="Godot.CanvasItem.DrawPolyline(Godot.Vector2%5b%5d%2cGodot.Color%2cSystem.Single%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> instead.</p>

    <p>Note: <code>width</code> and <code>antialiased</code> are currently not implemented and have no effect. As a workaround, install the <a href="https://github.com/godot-extended-libraries/godot-antialiased-line2d">Antialiased Line2D</a> add-on then create an AntialiasedLine2D node. That node relies on a texture with custom mipmaps to perform antialiasing. 2D batching is also still supported with those antialiased lines.</p>
  example: []
  syntax:
    content: public static void DrawMultiline(List<Vector2> points, float width)
    parameters:
    - id: points
      type: System.Collections.Generic.List{Godot.Vector2}
      description: The points that form the line.
    - id: width
      type: System.Single
      description: The thickness of the line.
    content.vb: Public Shared Sub DrawMultiline(points As List(Of Vector2), width As Single)
  overload: Cobilas.GodotEngine.Utility.Gizmos.DrawMultiline*
  nameWithType.vb: Gizmos.DrawMultiline(List(Of Vector2), Single)
  fullName.vb: Cobilas.GodotEngine.Utility.Gizmos.DrawMultiline(System.Collections.Generic.List(Of Godot.Vector2), Single)
  name.vb: DrawMultiline(List(Of Vector2), Single)
- uid: Cobilas.GodotEngine.Utility.Gizmos.DrawMultiline(System.Collections.Generic.List{Godot.Vector2})
  commentId: M:Cobilas.GodotEngine.Utility.Gizmos.DrawMultiline(System.Collections.Generic.List{Godot.Vector2})
  id: DrawMultiline(System.Collections.Generic.List{Godot.Vector2})
  parent: Cobilas.GodotEngine.Utility.Gizmos
  langs:
  - csharp
  - vb
  name: DrawMultiline(List<Vector2>)
  nameWithType: Gizmos.DrawMultiline(List<Vector2>)
  fullName: Cobilas.GodotEngine.Utility.Gizmos.DrawMultiline(System.Collections.Generic.List<Godot.Vector2>)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Gizmos.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: DrawMultiline
    path: ../../Godot Dev/Package/com.cobilas.godot.utility/GodotEngine.Utility/Gizmos.cs
    startLine: 90
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility
  summary: >-
    <p>Draws multiple disconnected lines with a uniform <code>color</code>. When drawing large amounts of lines, this is faster than using individual <xref href="Godot.CanvasItem.DrawLine(Godot.Vector2%2cGodot.Vector2%2cGodot.Color%2cSystem.Single%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> calls. To draw interconnected lines, use <xref href="Godot.CanvasItem.DrawPolyline(Godot.Vector2%5b%5d%2cGodot.Color%2cSystem.Single%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> instead.</p>

    <p>Note: <code>width</code> and <code>antialiased</code> are currently not implemented and have no effect. As a workaround, install the <a href="https://github.com/godot-extended-libraries/godot-antialiased-line2d">Antialiased Line2D</a> add-on then create an AntialiasedLine2D node. That node relies on a texture with custom mipmaps to perform antialiasing. 2D batching is also still supported with those antialiased lines.</p>
  example: []
  syntax:
    content: public static void DrawMultiline(List<Vector2> points)
    parameters:
    - id: points
      type: System.Collections.Generic.List{Godot.Vector2}
      description: The points that form the line.
    content.vb: Public Shared Sub DrawMultiline(points As List(Of Vector2))
  overload: Cobilas.GodotEngine.Utility.Gizmos.DrawMultiline*
  nameWithType.vb: Gizmos.DrawMultiline(List(Of Vector2))
  fullName.vb: Cobilas.GodotEngine.Utility.Gizmos.DrawMultiline(System.Collections.Generic.List(Of Godot.Vector2))
  name.vb: DrawMultiline(List(Of Vector2))
- uid: Cobilas.GodotEngine.Utility.Gizmos.DrawArc(Godot.Vector2,System.Single,System.Single,System.Single,System.Int32,System.Single)
  commentId: M:Cobilas.GodotEngine.Utility.Gizmos.DrawArc(Godot.Vector2,System.Single,System.Single,System.Single,System.Int32,System.Single)
  id: DrawArc(Godot.Vector2,System.Single,System.Single,System.Single,System.Int32,System.Single)
  parent: Cobilas.GodotEngine.Utility.Gizmos
  langs:
  - csharp
  - vb
  name: DrawArc(Vector2, float, float, float, int, float)
  nameWithType: Gizmos.DrawArc(Vector2, float, float, float, int, float)
  fullName: Cobilas.GodotEngine.Utility.Gizmos.DrawArc(Godot.Vector2, float, float, float, int, float)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Gizmos.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: DrawArc
    path: ../../Godot Dev/Package/com.cobilas.godot.utility/GodotEngine.Utility/Gizmos.cs
    startLine: 104
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility
  summary: >-
    <p>Draws a unfilled arc between the given angles. The larger the value of <code>point_count</code>, the smoother the curve. See also <xref href="Godot.CanvasItem.DrawCircle(Godot.Vector2%2cSystem.Single%2cGodot.Color)" data-throw-if-not-resolved="false"></xref>.</p>

    <p>Note: Line drawing is not accelerated by batching if <code>antialiased</code> is <code>true</code>.</p>

    <p>Note: Due to how it works, built-in antialiasing will not look correct for translucent lines and may not work on certain platforms. As a workaround, install the <a href="https://github.com/godot-extended-libraries/godot-antialiased-line2d">Antialiased Line2D</a> add-on then create an AntialiasedRegularPolygon2D node. That node relies on a texture with custom mipmaps to perform antialiasing. 2D batching is also still supported with those antialiased lines.</p>
  example: []
  syntax:
    content: public static void DrawArc(Vector2 center, float radius, float startAngle, float endAngle, int pointCount, float width)
    parameters:
    - id: center
      type: Godot.Vector2
      description: The central position of the arc.
    - id: radius
      type: System.Single
      description: The radius of the arc.
    - id: startAngle
      type: System.Single
      description: The angle at which the arc will be drawn.
    - id: endAngle
      type: System.Single
      description: The angle where the arc will finish being drawn.
    - id: pointCount
      type: System.Int32
      description: >-
        The number of stitches used in the arc.
            <p>This parameter will define the visual aspect of the bow, whether it will have a smoother or more serrated curve.</p>
    - id: width
      type: System.Single
      description: The thickness of the line.
    content.vb: Public Shared Sub DrawArc(center As Vector2, radius As Single, startAngle As Single, endAngle As Single, pointCount As Integer, width As Single)
  overload: Cobilas.GodotEngine.Utility.Gizmos.DrawArc*
  nameWithType.vb: Gizmos.DrawArc(Vector2, Single, Single, Single, Integer, Single)
  fullName.vb: Cobilas.GodotEngine.Utility.Gizmos.DrawArc(Godot.Vector2, Single, Single, Single, Integer, Single)
  name.vb: DrawArc(Vector2, Single, Single, Single, Integer, Single)
- uid: Cobilas.GodotEngine.Utility.Gizmos.DrawArc(Godot.Vector2,System.Single,System.Single,System.Single,System.Int32)
  commentId: M:Cobilas.GodotEngine.Utility.Gizmos.DrawArc(Godot.Vector2,System.Single,System.Single,System.Single,System.Int32)
  id: DrawArc(Godot.Vector2,System.Single,System.Single,System.Single,System.Int32)
  parent: Cobilas.GodotEngine.Utility.Gizmos
  langs:
  - csharp
  - vb
  name: DrawArc(Vector2, float, float, float, int)
  nameWithType: Gizmos.DrawArc(Vector2, float, float, float, int)
  fullName: Cobilas.GodotEngine.Utility.Gizmos.DrawArc(Godot.Vector2, float, float, float, int)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Gizmos.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: DrawArc
    path: ../../Godot Dev/Package/com.cobilas.godot.utility/GodotEngine.Utility/Gizmos.cs
    startLine: 118
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility
  summary: >-
    <p>Draws a unfilled arc between the given angles. The larger the value of <code>point_count</code>, the smoother the curve. See also <xref href="Godot.CanvasItem.DrawCircle(Godot.Vector2%2cSystem.Single%2cGodot.Color)" data-throw-if-not-resolved="false"></xref>.</p>

    <p>Note: Line drawing is not accelerated by batching if <code>antialiased</code> is <code>true</code>.</p>

    <p>Note: Due to how it works, built-in antialiasing will not look correct for translucent lines and may not work on certain platforms. As a workaround, install the <a href="https://github.com/godot-extended-libraries/godot-antialiased-line2d">Antialiased Line2D</a> add-on then create an AntialiasedRegularPolygon2D node. That node relies on a texture with custom mipmaps to perform antialiasing. 2D batching is also still supported with those antialiased lines.</p>
  example: []
  syntax:
    content: public static void DrawArc(Vector2 center, float radius, float startAngle, float endAngle, int pointCount)
    parameters:
    - id: center
      type: Godot.Vector2
      description: The central position of the arc.
    - id: radius
      type: System.Single
      description: The radius of the arc.
    - id: startAngle
      type: System.Single
      description: The angle at which the arc will be drawn.
    - id: endAngle
      type: System.Single
      description: The angle where the arc will finish being drawn.
    - id: pointCount
      type: System.Int32
      description: >-
        The number of stitches used in the arc.
            <p>This parameter will define the visual aspect of the bow, whether it will have a smoother or more serrated curve.</p>
    content.vb: Public Shared Sub DrawArc(center As Vector2, radius As Single, startAngle As Single, endAngle As Single, pointCount As Integer)
  overload: Cobilas.GodotEngine.Utility.Gizmos.DrawArc*
  nameWithType.vb: Gizmos.DrawArc(Vector2, Single, Single, Single, Integer)
  fullName.vb: Cobilas.GodotEngine.Utility.Gizmos.DrawArc(Godot.Vector2, Single, Single, Single, Integer)
  name.vb: DrawArc(Vector2, Single, Single, Single, Integer)
- uid: Cobilas.GodotEngine.Utility.Gizmos.DrawMesh(Godot.Mesh,Godot.Texture,Godot.Texture,System.Nullable{Godot.Transform2D})
  commentId: M:Cobilas.GodotEngine.Utility.Gizmos.DrawMesh(Godot.Mesh,Godot.Texture,Godot.Texture,System.Nullable{Godot.Transform2D})
  id: DrawMesh(Godot.Mesh,Godot.Texture,Godot.Texture,System.Nullable{Godot.Transform2D})
  parent: Cobilas.GodotEngine.Utility.Gizmos
  langs:
  - csharp
  - vb
  name: DrawMesh(Mesh, Texture, Texture?, Transform2D?)
  nameWithType: Gizmos.DrawMesh(Mesh, Texture, Texture?, Transform2D?)
  fullName: Cobilas.GodotEngine.Utility.Gizmos.DrawMesh(Godot.Mesh, Godot.Texture, Godot.Texture?, Godot.Transform2D?)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Gizmos.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: DrawMesh
    path: ../../Godot Dev/Package/com.cobilas.godot.utility/GodotEngine.Utility/Gizmos.cs
    startLine: 127
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility
  summary: <p>Draws a <xref href="Godot.Mesh" data-throw-if-not-resolved="false"></xref> in 2D, using the provided texture. See <xref href="Godot.MeshInstance2D" data-throw-if-not-resolved="false"></xref> for related documentation.</p>
  example: []
  syntax:
    content: public static void DrawMesh(Mesh mesh, Texture texture, Texture? normalMap = null, Transform2D? transform = null)
    parameters:
    - id: mesh
      type: Godot.Mesh
      description: The mesh that will be used to shape the design.
    - id: texture
      type: Godot.Texture
      description: The texture that will be used to draw on the mesh.
    - id: normalMap
      type: Godot.Texture
      description: The texture normal map.
    - id: transform
      type: System.Nullable{Godot.Transform2D}
      description: If the parameter is null, then the default value is Transform2D.Identity
    content.vb: Public Shared Sub DrawMesh(mesh As Mesh, texture As Texture, normalMap As Texture = Nothing, transform As Transform2D? = Nothing)
  overload: Cobilas.GodotEngine.Utility.Gizmos.DrawMesh*
  nameWithType.vb: Gizmos.DrawMesh(Mesh, Texture, Texture, Transform2D?)
  fullName.vb: Cobilas.GodotEngine.Utility.Gizmos.DrawMesh(Godot.Mesh, Godot.Texture, Godot.Texture, Godot.Transform2D?)
  name.vb: DrawMesh(Mesh, Texture, Texture, Transform2D?)
- uid: Cobilas.GodotEngine.Utility.Gizmos.DrawTexture(Godot.Texture,Godot.Vector2,Godot.Texture)
  commentId: M:Cobilas.GodotEngine.Utility.Gizmos.DrawTexture(Godot.Texture,Godot.Vector2,Godot.Texture)
  id: DrawTexture(Godot.Texture,Godot.Vector2,Godot.Texture)
  parent: Cobilas.GodotEngine.Utility.Gizmos
  langs:
  - csharp
  - vb
  name: DrawTexture(Texture, Vector2, Texture?)
  nameWithType: Gizmos.DrawTexture(Texture, Vector2, Texture?)
  fullName: Cobilas.GodotEngine.Utility.Gizmos.DrawTexture(Godot.Texture, Godot.Vector2, Godot.Texture?)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Gizmos.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: DrawTexture
    path: ../../Godot Dev/Package/com.cobilas.godot.utility/GodotEngine.Utility/Gizmos.cs
    startLine: 132
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility
  summary: <p>Draws a texture at a given position.</p>
  example: []
  syntax:
    content: public static void DrawTexture(Texture texture, Vector2 position, Texture? normalMap = null)
    parameters:
    - id: texture
      type: Godot.Texture
    - id: position
      type: Godot.Vector2
    - id: normalMap
      type: Godot.Texture
    content.vb: Public Shared Sub DrawTexture(texture As Texture, position As Vector2, normalMap As Texture = Nothing)
  overload: Cobilas.GodotEngine.Utility.Gizmos.DrawTexture*
  nameWithType.vb: Gizmos.DrawTexture(Texture, Vector2, Texture)
  fullName.vb: Cobilas.GodotEngine.Utility.Gizmos.DrawTexture(Godot.Texture, Godot.Vector2, Godot.Texture)
  name.vb: DrawTexture(Texture, Vector2, Texture)
- uid: Cobilas.GodotEngine.Utility.Gizmos.DrawTextureRect(Godot.Texture,Godot.Rect2,System.Boolean,System.Boolean,Godot.Texture)
  commentId: M:Cobilas.GodotEngine.Utility.Gizmos.DrawTextureRect(Godot.Texture,Godot.Rect2,System.Boolean,System.Boolean,Godot.Texture)
  id: DrawTextureRect(Godot.Texture,Godot.Rect2,System.Boolean,System.Boolean,Godot.Texture)
  parent: Cobilas.GodotEngine.Utility.Gizmos
  langs:
  - csharp
  - vb
  name: DrawTextureRect(Texture, Rect2, bool, bool, Texture?)
  nameWithType: Gizmos.DrawTextureRect(Texture, Rect2, bool, bool, Texture?)
  fullName: Cobilas.GodotEngine.Utility.Gizmos.DrawTextureRect(Godot.Texture, Godot.Rect2, bool, bool, Godot.Texture?)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Gizmos.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: DrawTextureRect
    path: ../../Godot Dev/Package/com.cobilas.godot.utility/GodotEngine.Utility/Gizmos.cs
    startLine: 138
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility
  summary: <p>Draws a textured rectangle at a given position, optionally modulated by a color. If <code>transpose</code> is <code>true</code>, the texture will have its X and Y coordinates swapped.</p>
  example: []
  syntax:
    content: public static void DrawTextureRect(Texture texture, Rect2 rect, bool tile, bool transpose = false, Texture? normalMap = null)
    parameters:
    - id: texture
      type: Godot.Texture
    - id: rect
      type: Godot.Rect2
    - id: tile
      type: System.Boolean
    - id: transpose
      type: System.Boolean
    - id: normalMap
      type: Godot.Texture
    content.vb: Public Shared Sub DrawTextureRect(texture As Texture, rect As Rect2, tile As Boolean, transpose As Boolean = False, normalMap As Texture = Nothing)
  overload: Cobilas.GodotEngine.Utility.Gizmos.DrawTextureRect*
  nameWithType.vb: Gizmos.DrawTextureRect(Texture, Rect2, Boolean, Boolean, Texture)
  fullName.vb: Cobilas.GodotEngine.Utility.Gizmos.DrawTextureRect(Godot.Texture, Godot.Rect2, Boolean, Boolean, Godot.Texture)
  name.vb: DrawTextureRect(Texture, Rect2, Boolean, Boolean, Texture)
references:
- uid: Cobilas.GodotEngine.Utility
  commentId: N:Cobilas.GodotEngine.Utility
  href: Cobilas.html
  name: Cobilas.GodotEngine.Utility
  nameWithType: Cobilas.GodotEngine.Utility
  fullName: Cobilas.GodotEngine.Utility
  spec.csharp:
  - uid: Cobilas
    name: Cobilas
    href: Cobilas.html
  - name: .
  - uid: Cobilas.GodotEngine
    name: GodotEngine
    href: Cobilas.GodotEngine.html
  - name: .
  - uid: Cobilas.GodotEngine.Utility
    name: Utility
    href: Cobilas.GodotEngine.Utility.html
  spec.vb:
  - uid: Cobilas
    name: Cobilas
    href: Cobilas.html
  - name: .
  - uid: Cobilas.GodotEngine
    name: GodotEngine
    href: Cobilas.GodotEngine.html
  - name: .
  - uid: Cobilas.GodotEngine.Utility
    name: Utility
    href: Cobilas.GodotEngine.Utility.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Cobilas.GodotEngine.Utility.Gizmos.Color*
  commentId: Overload:Cobilas.GodotEngine.Utility.Gizmos.Color
  href: Cobilas.GodotEngine.Utility.Gizmos.html#Cobilas_GodotEngine_Utility_Gizmos_Color
  name: Color
  nameWithType: Gizmos.Color
  fullName: Cobilas.GodotEngine.Utility.Gizmos.Color
- uid: Godot.Color
  commentId: T:Godot.Color
  parent: Godot
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Godot.Color
- uid: Godot
  commentId: N:Godot
  href: Godot.html
  name: Godot
  nameWithType: Godot
  fullName: Godot
- uid: Godot.CanvasItem.DrawMultiline(Godot.Vector2[],Godot.Color,System.Single,System.Boolean)
  commentId: M:Godot.CanvasItem.DrawMultiline(Godot.Vector2[],Godot.Color,System.Single,System.Boolean)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: DrawMultiline(Vector2[], Color, float, bool)
  nameWithType: CanvasItem.DrawMultiline(Vector2[], Color, float, bool)
  fullName: Godot.CanvasItem.DrawMultiline(Godot.Vector2[], Godot.Color, float, bool)
  nameWithType.vb: CanvasItem.DrawMultiline(Vector2(), Color, Single, Boolean)
  fullName.vb: Godot.CanvasItem.DrawMultiline(Godot.Vector2(), Godot.Color, Single, Boolean)
  name.vb: DrawMultiline(Vector2(), Color, Single, Boolean)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawMultiline(Godot.Vector2[],Godot.Color,System.Single,System.Boolean)
    name: DrawMultiline
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawMultiline(Godot.Vector2[],Godot.Color,System.Single,System.Boolean)
    name: DrawMultiline
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.CanvasItem.DrawPolyline(Godot.Vector2[],Godot.Color,System.Single,System.Boolean)
  commentId: M:Godot.CanvasItem.DrawPolyline(Godot.Vector2[],Godot.Color,System.Single,System.Boolean)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: DrawPolyline(Vector2[], Color, float, bool)
  nameWithType: CanvasItem.DrawPolyline(Vector2[], Color, float, bool)
  fullName: Godot.CanvasItem.DrawPolyline(Godot.Vector2[], Godot.Color, float, bool)
  nameWithType.vb: CanvasItem.DrawPolyline(Vector2(), Color, Single, Boolean)
  fullName.vb: Godot.CanvasItem.DrawPolyline(Godot.Vector2(), Godot.Color, Single, Boolean)
  name.vb: DrawPolyline(Vector2(), Color, Single, Boolean)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawPolyline(Godot.Vector2[],Godot.Color,System.Single,System.Boolean)
    name: DrawPolyline
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawPolyline(Godot.Vector2[],Godot.Color,System.Single,System.Boolean)
    name: DrawPolyline
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Cobilas.GodotEngine.Utility.Gizmos.DrawLine*
  commentId: Overload:Cobilas.GodotEngine.Utility.Gizmos.DrawLine
  href: Cobilas.GodotEngine.Utility.Gizmos.html#Cobilas_GodotEngine_Utility_Gizmos_DrawLine_Godot_Vector2_Godot_Vector2_System_Single_
  name: DrawLine
  nameWithType: Gizmos.DrawLine
  fullName: Cobilas.GodotEngine.Utility.Gizmos.DrawLine
- uid: Godot.Vector2
  commentId: T:Godot.Vector2
  parent: Godot
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Godot.Vector2
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Cobilas.GodotEngine.Utility.Gizmos.DrawRect*
  commentId: Overload:Cobilas.GodotEngine.Utility.Gizmos.DrawRect
  href: Cobilas.GodotEngine.Utility.Gizmos.html#Cobilas_GodotEngine_Utility_Gizmos_DrawRect_Godot_Rect2_
  name: DrawRect
  nameWithType: Gizmos.DrawRect
  fullName: Cobilas.GodotEngine.Utility.Gizmos.DrawRect
- uid: Godot.Rect2
  commentId: T:Godot.Rect2
  parent: Godot
  isExternal: true
  name: Rect2
  nameWithType: Rect2
  fullName: Godot.Rect2
- uid: Cobilas.GodotEngine.Utility.Gizmos.DrawWireRect*
  commentId: Overload:Cobilas.GodotEngine.Utility.Gizmos.DrawWireRect
  href: Cobilas.GodotEngine.Utility.Gizmos.html#Cobilas_GodotEngine_Utility_Gizmos_DrawWireRect_Godot_Rect2_System_Single_
  name: DrawWireRect
  nameWithType: Gizmos.DrawWireRect
  fullName: Cobilas.GodotEngine.Utility.Gizmos.DrawWireRect
- uid: Godot.CanvasItem.DrawArc(Godot.Vector2,System.Single,System.Single,System.Single,System.Int32,Godot.Color,System.Single,System.Boolean)
  commentId: M:Godot.CanvasItem.DrawArc(Godot.Vector2,System.Single,System.Single,System.Single,System.Int32,Godot.Color,System.Single,System.Boolean)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: DrawArc(Vector2, float, float, float, int, Color, float, bool)
  nameWithType: CanvasItem.DrawArc(Vector2, float, float, float, int, Color, float, bool)
  fullName: Godot.CanvasItem.DrawArc(Godot.Vector2, float, float, float, int, Godot.Color, float, bool)
  nameWithType.vb: CanvasItem.DrawArc(Vector2, Single, Single, Single, Integer, Color, Single, Boolean)
  fullName.vb: Godot.CanvasItem.DrawArc(Godot.Vector2, Single, Single, Single, Integer, Godot.Color, Single, Boolean)
  name.vb: DrawArc(Vector2, Single, Single, Single, Integer, Color, Single, Boolean)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawArc(Godot.Vector2,System.Single,System.Single,System.Single,System.Int32,Godot.Color,System.Single,System.Boolean)
    name: DrawArc
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawArc(Godot.Vector2,System.Single,System.Single,System.Single,System.Int32,Godot.Color,System.Single,System.Boolean)
    name: DrawArc
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.CanvasItem.DrawPolygon(Godot.Vector2[],Godot.Color[],Godot.Vector2[],Godot.Texture,Godot.Texture,System.Boolean)
  commentId: M:Godot.CanvasItem.DrawPolygon(Godot.Vector2[],Godot.Color[],Godot.Vector2[],Godot.Texture,Godot.Texture,System.Boolean)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: DrawPolygon(Vector2[], Color[], Vector2[], Texture, Texture, bool)
  nameWithType: CanvasItem.DrawPolygon(Vector2[], Color[], Vector2[], Texture, Texture, bool)
  fullName: Godot.CanvasItem.DrawPolygon(Godot.Vector2[], Godot.Color[], Godot.Vector2[], Godot.Texture, Godot.Texture, bool)
  nameWithType.vb: CanvasItem.DrawPolygon(Vector2(), Color(), Vector2(), Texture, Texture, Boolean)
  fullName.vb: Godot.CanvasItem.DrawPolygon(Godot.Vector2(), Godot.Color(), Godot.Vector2(), Godot.Texture, Godot.Texture, Boolean)
  name.vb: DrawPolygon(Vector2(), Color(), Vector2(), Texture, Texture, Boolean)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawPolygon(Godot.Vector2[],Godot.Color[],Godot.Vector2[],Godot.Texture,Godot.Texture,System.Boolean)
    name: DrawPolygon
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Godot.Texture
    name: Texture
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Texture
    name: Texture
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawPolygon(Godot.Vector2[],Godot.Color[],Godot.Vector2[],Godot.Texture,Godot.Texture,System.Boolean)
    name: DrawPolygon
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Godot.Texture
    name: Texture
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Texture
    name: Texture
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.CanvasItem.DrawCircle(Godot.Vector2,System.Single,Godot.Color)
  commentId: M:Godot.CanvasItem.DrawCircle(Godot.Vector2,System.Single,Godot.Color)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: DrawCircle(Vector2, float, Color)
  nameWithType: CanvasItem.DrawCircle(Vector2, float, Color)
  fullName: Godot.CanvasItem.DrawCircle(Godot.Vector2, float, Godot.Color)
  nameWithType.vb: CanvasItem.DrawCircle(Vector2, Single, Color)
  fullName.vb: Godot.CanvasItem.DrawCircle(Godot.Vector2, Single, Godot.Color)
  name.vb: DrawCircle(Vector2, Single, Color)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawCircle(Godot.Vector2,System.Single,Godot.Color)
    name: DrawCircle
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawCircle(Godot.Vector2,System.Single,Godot.Color)
    name: DrawCircle
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: )
- uid: Cobilas.GodotEngine.Utility.Gizmos.DrawCircle*
  commentId: Overload:Cobilas.GodotEngine.Utility.Gizmos.DrawCircle
  href: Cobilas.GodotEngine.Utility.Gizmos.html#Cobilas_GodotEngine_Utility_Gizmos_DrawCircle_Godot_Vector2_System_Single_
  name: DrawCircle
  nameWithType: Gizmos.DrawCircle
  fullName: Cobilas.GodotEngine.Utility.Gizmos.DrawCircle
- uid: Godot.CanvasItem.DrawLine(Godot.Vector2,Godot.Vector2,Godot.Color,System.Single,System.Boolean)
  commentId: M:Godot.CanvasItem.DrawLine(Godot.Vector2,Godot.Vector2,Godot.Color,System.Single,System.Boolean)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: DrawLine(Vector2, Vector2, Color, float, bool)
  nameWithType: CanvasItem.DrawLine(Vector2, Vector2, Color, float, bool)
  fullName: Godot.CanvasItem.DrawLine(Godot.Vector2, Godot.Vector2, Godot.Color, float, bool)
  nameWithType.vb: CanvasItem.DrawLine(Vector2, Vector2, Color, Single, Boolean)
  fullName.vb: Godot.CanvasItem.DrawLine(Godot.Vector2, Godot.Vector2, Godot.Color, Single, Boolean)
  name.vb: DrawLine(Vector2, Vector2, Color, Single, Boolean)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawLine(Godot.Vector2,Godot.Vector2,Godot.Color,System.Single,System.Boolean)
    name: DrawLine
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawLine(Godot.Vector2,Godot.Vector2,Godot.Color,System.Single,System.Boolean)
    name: DrawLine
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Cobilas.GodotEngine.Utility.Gizmos.DrawMultiline*
  commentId: Overload:Cobilas.GodotEngine.Utility.Gizmos.DrawMultiline
  href: Cobilas.GodotEngine.Utility.Gizmos.html#Cobilas_GodotEngine_Utility_Gizmos_DrawMultiline_Godot_Vector2___System_Single_
  name: DrawMultiline
  nameWithType: Gizmos.DrawMultiline
  fullName: Cobilas.GodotEngine.Utility.Gizmos.DrawMultiline
- uid: Godot.Vector2[]
  isExternal: true
  name: Vector2[]
  nameWithType: Vector2[]
  fullName: Godot.Vector2[]
  nameWithType.vb: Vector2()
  fullName.vb: Godot.Vector2()
  name.vb: Vector2()
  spec.csharp:
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
- uid: System.Collections.Generic.List{Godot.Vector2}
  commentId: T:System.Collections.Generic.List{Godot.Vector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Vector2>
  nameWithType: List<Vector2>
  fullName: System.Collections.Generic.List<Godot.Vector2>
  nameWithType.vb: List(Of Vector2)
  fullName.vb: System.Collections.Generic.List(Of Godot.Vector2)
  name.vb: List(Of Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Cobilas.GodotEngine.Utility.Gizmos.DrawArc*
  commentId: Overload:Cobilas.GodotEngine.Utility.Gizmos.DrawArc
  href: Cobilas.GodotEngine.Utility.Gizmos.html#Cobilas_GodotEngine_Utility_Gizmos_DrawArc_Godot_Vector2_System_Single_System_Single_System_Single_System_Int32_System_Single_
  name: DrawArc
  nameWithType: Gizmos.DrawArc
  fullName: Cobilas.GodotEngine.Utility.Gizmos.DrawArc
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Godot.Mesh
  commentId: T:Godot.Mesh
  parent: Godot
  isExternal: true
  name: Mesh
  nameWithType: Mesh
  fullName: Godot.Mesh
- uid: Godot.MeshInstance2D
  commentId: T:Godot.MeshInstance2D
  isExternal: true
  name: MeshInstance2D
  nameWithType: MeshInstance2D
  fullName: Godot.MeshInstance2D
- uid: Cobilas.GodotEngine.Utility.Gizmos.DrawMesh*
  commentId: Overload:Cobilas.GodotEngine.Utility.Gizmos.DrawMesh
  href: Cobilas.GodotEngine.Utility.Gizmos.html#Cobilas_GodotEngine_Utility_Gizmos_DrawMesh_Godot_Mesh_Godot_Texture_Godot_Texture_System_Nullable_Godot_Transform2D__
  name: DrawMesh
  nameWithType: Gizmos.DrawMesh
  fullName: Cobilas.GodotEngine.Utility.Gizmos.DrawMesh
- uid: Godot.Texture
  commentId: T:Godot.Texture
  parent: Godot
  isExternal: true
  name: Texture
  nameWithType: Texture
  fullName: Godot.Texture
- uid: System.Nullable{Godot.Transform2D}
  commentId: T:System.Nullable{Godot.Transform2D}
  parent: System
  definition: System.Nullable`1
  name: Transform2D?
  nameWithType: Transform2D?
  fullName: Godot.Transform2D?
  spec.csharp:
  - uid: Godot.Transform2D
    name: Transform2D
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: Godot.Transform2D
    name: Transform2D
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Cobilas.GodotEngine.Utility.Gizmos.DrawTexture*
  commentId: Overload:Cobilas.GodotEngine.Utility.Gizmos.DrawTexture
  href: Cobilas.GodotEngine.Utility.Gizmos.html#Cobilas_GodotEngine_Utility_Gizmos_DrawTexture_Godot_Texture_Godot_Vector2_Godot_Texture_
  name: DrawTexture
  nameWithType: Gizmos.DrawTexture
  fullName: Cobilas.GodotEngine.Utility.Gizmos.DrawTexture
- uid: Cobilas.GodotEngine.Utility.Gizmos.DrawTextureRect*
  commentId: Overload:Cobilas.GodotEngine.Utility.Gizmos.DrawTextureRect
  href: Cobilas.GodotEngine.Utility.Gizmos.html#Cobilas_GodotEngine_Utility_Gizmos_DrawTextureRect_Godot_Texture_Godot_Rect2_System_Boolean_System_Boolean_Godot_Texture_
  name: DrawTextureRect
  nameWithType: Gizmos.DrawTextureRect
  fullName: Cobilas.GodotEngine.Utility.Gizmos.DrawTextureRect
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
