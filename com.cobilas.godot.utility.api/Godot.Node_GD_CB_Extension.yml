### YamlMime:ManagedReference
items:
- uid: Godot.Node_GD_CB_Extension
  commentId: T:Godot.Node_GD_CB_Extension
  id: Node_GD_CB_Extension
  parent: Godot
  children:
  - Godot.Node_GD_CB_Extension.FindNodeByName(Godot.Node,System.String)
  - Godot.Node_GD_CB_Extension.FindNodeByName(Godot.Node,System.String,System.Boolean)
  - Godot.Node_GD_CB_Extension.FindNodeByName(Godot.Node,System.String,System.Type,System.Boolean)
  - Godot.Node_GD_CB_Extension.FindNodeByName``1(Godot.Node,System.String)
  - Godot.Node_GD_CB_Extension.FindNodeByName``1(Godot.Node,System.String,System.Boolean)
  - Godot.Node_GD_CB_Extension.FindNodes(Godot.Node,System.Type)
  - Godot.Node_GD_CB_Extension.FindNodes(Godot.Node,System.Type,System.Boolean)
  - Godot.Node_GD_CB_Extension.FindNodes``1(Godot.Node)
  - Godot.Node_GD_CB_Extension.FindNodes``1(Godot.Node,System.Boolean)
  - Godot.Node_GD_CB_Extension.GetNodePosition(Godot.Node)
  - Godot.Node_GD_CB_Extension.GetNodeRotation(Godot.Node)
  - Godot.Node_GD_CB_Extension.GetNodeScale(Godot.Node)
  - Godot.Node_GD_CB_Extension.Print(Godot.Node,System.Object[])
  - Godot.Node_GD_CB_Extension.SetNodePosition(Godot.Node,Cobilas.GodotEngine.Utility.Numerics.Vector3D)
  - Godot.Node_GD_CB_Extension.SetNodeRotation(Godot.Node,Cobilas.GodotEngine.Utility.Numerics.Vector3D)
  - Godot.Node_GD_CB_Extension.SetNodeScale(Godot.Node,Cobilas.GodotEngine.Utility.Numerics.Vector3D)
  langs:
  - csharp
  - vb
  name: Node_GD_CB_Extension
  nameWithType: Node_GD_CB_Extension
  fullName: Godot.Node_GD_CB_Extension
  type: Class
  source:
    remote:
      path: Godot/Node_GD_CB_Extension.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: Node_GD_CB_Extension
    path: ../../Godot Dev/com.cobilas.godot.utility/Godot/Node_GD_CB_Extension.cs
    startLine: 7
  assemblies:
  - com.cobilas.godot.utility
  namespace: Godot
  summary: Extension for <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public static class Node_GD_CB_Extension
    content.vb: Public Module Node_GD_CB_Extension
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Godot.Node_GD_CB_Extension.Print(Godot.Node,System.Object[])
  commentId: M:Godot.Node_GD_CB_Extension.Print(Godot.Node,System.Object[])
  id: Print(Godot.Node,System.Object[])
  isExtensionMethod: true
  parent: Godot.Node_GD_CB_Extension
  langs:
  - csharp
  - vb
  name: Print(Node, params object[])
  nameWithType: Node_GD_CB_Extension.Print(Node, params object[])
  fullName: Godot.Node_GD_CB_Extension.Print(Godot.Node, params object[])
  type: Method
  source:
    remote:
      path: Godot/Node_GD_CB_Extension.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: Print
    path: ../../Godot Dev/com.cobilas.godot.utility/Godot/Node_GD_CB_Extension.cs
    startLine: 11
  assemblies:
  - com.cobilas.godot.utility
  namespace: Godot
  summary: >-
    Converts one or more arguments of any type to string in the best way possible

    and prints them to the console.


    Note: Consider using <xref href="Godot.GD.PushError(System.String)" data-throw-if-not-resolved="false"></xref> and <xref href="Godot.GD.PushWarning(System.String)" data-throw-if-not-resolved="false"></xref>

    to print error and warning messages instead of <xref href="Godot.GD.Print(System.Object%5b%5d)" data-throw-if-not-resolved="false"></xref>.

    This distinguishes them from print messages used for debugging purposes,

    while also displaying a stack trace when an error or warning is printed.
  example:
  - >-
    <pre><code class="lang-csharp">var a = new int[] { 1, 2, 3 };

    GD.Print("a", "b", a); // Prints ab[1, 2, 3]</code></pre>
  syntax:
    content: public static void Print(this Node N, params object[] args)
    parameters:
    - id: N
      type: Godot.Node
      description: The <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> that will be used.
    - id: args
      type: System.Object[]
      description: The arguments passed will be printed to the console.
    content.vb: Public Shared Sub Print(N As Node, ParamArray args As Object())
  overload: Godot.Node_GD_CB_Extension.Print*
  nameWithType.vb: Node_GD_CB_Extension.Print(Node, ParamArray Object())
  fullName.vb: Godot.Node_GD_CB_Extension.Print(Godot.Node, ParamArray Object())
  name.vb: Print(Node, ParamArray Object())
- uid: Godot.Node_GD_CB_Extension.SetNodePosition(Godot.Node,Cobilas.GodotEngine.Utility.Numerics.Vector3D)
  commentId: M:Godot.Node_GD_CB_Extension.SetNodePosition(Godot.Node,Cobilas.GodotEngine.Utility.Numerics.Vector3D)
  id: SetNodePosition(Godot.Node,Cobilas.GodotEngine.Utility.Numerics.Vector3D)
  isExtensionMethod: true
  parent: Godot.Node_GD_CB_Extension
  langs:
  - csharp
  - vb
  name: SetNodePosition(Node, Vector3D)
  nameWithType: Node_GD_CB_Extension.SetNodePosition(Node, Vector3D)
  fullName: Godot.Node_GD_CB_Extension.SetNodePosition(Godot.Node, Cobilas.GodotEngine.Utility.Numerics.Vector3D)
  type: Method
  source:
    remote:
      path: Godot/Node_GD_CB_Extension.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: SetNodePosition
    path: ../../Godot Dev/com.cobilas.godot.utility/Godot/Node_GD_CB_Extension.cs
    startLine: 18
  assemblies:
  - com.cobilas.godot.utility
  namespace: Godot
  summary: >-
    Allows you to define the position of the <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> object.
        <p>This method will only take effect when the <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> object inherits the <xref href="Godot.Node2D" data-throw-if-not-resolved="false"></xref> class or the <xref href="Godot.Spatial" data-throw-if-not-resolved="false"></xref> class.</p>
  example: []
  syntax:
    content: public static void SetNodePosition(this Node N, Vector3D position)
    parameters:
    - id: N
      type: Godot.Node
      description: The <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> that will be used.
    - id: position
      type: Cobilas.GodotEngine.Utility.Numerics.Vector3D
      description: The new position of the <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> object.
    content.vb: Public Shared Sub SetNodePosition(N As Node, position As Vector3D)
  overload: Godot.Node_GD_CB_Extension.SetNodePosition*
- uid: Godot.Node_GD_CB_Extension.SetNodeRotation(Godot.Node,Cobilas.GodotEngine.Utility.Numerics.Vector3D)
  commentId: M:Godot.Node_GD_CB_Extension.SetNodeRotation(Godot.Node,Cobilas.GodotEngine.Utility.Numerics.Vector3D)
  id: SetNodeRotation(Godot.Node,Cobilas.GodotEngine.Utility.Numerics.Vector3D)
  isExtensionMethod: true
  parent: Godot.Node_GD_CB_Extension
  langs:
  - csharp
  - vb
  name: SetNodeRotation(Node, Vector3D)
  nameWithType: Node_GD_CB_Extension.SetNodeRotation(Node, Vector3D)
  fullName: Godot.Node_GD_CB_Extension.SetNodeRotation(Godot.Node, Cobilas.GodotEngine.Utility.Numerics.Vector3D)
  type: Method
  source:
    remote:
      path: Godot/Node_GD_CB_Extension.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: SetNodeRotation
    path: ../../Godot Dev/com.cobilas.godot.utility/Godot/Node_GD_CB_Extension.cs
    startLine: 27
  assemblies:
  - com.cobilas.godot.utility
  namespace: Godot
  summary: >-
    Allows you to define the rotation of the <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> object.
        <p>This method will only take effect when the <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> object inherits the <xref href="Godot.Node2D" data-throw-if-not-resolved="false"></xref> class or the <xref href="Godot.Spatial" data-throw-if-not-resolved="false"></xref> class.</p>
  example: []
  syntax:
    content: public static void SetNodeRotation(this Node N, Vector3D rotation)
    parameters:
    - id: N
      type: Godot.Node
      description: The <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> that will be used.
    - id: rotation
      type: Cobilas.GodotEngine.Utility.Numerics.Vector3D
      description: The new rotation of the <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> object.
    content.vb: Public Shared Sub SetNodeRotation(N As Node, rotation As Vector3D)
  overload: Godot.Node_GD_CB_Extension.SetNodeRotation*
- uid: Godot.Node_GD_CB_Extension.SetNodeScale(Godot.Node,Cobilas.GodotEngine.Utility.Numerics.Vector3D)
  commentId: M:Godot.Node_GD_CB_Extension.SetNodeScale(Godot.Node,Cobilas.GodotEngine.Utility.Numerics.Vector3D)
  id: SetNodeScale(Godot.Node,Cobilas.GodotEngine.Utility.Numerics.Vector3D)
  isExtensionMethod: true
  parent: Godot.Node_GD_CB_Extension
  langs:
  - csharp
  - vb
  name: SetNodeScale(Node, Vector3D)
  nameWithType: Node_GD_CB_Extension.SetNodeScale(Node, Vector3D)
  fullName: Godot.Node_GD_CB_Extension.SetNodeScale(Godot.Node, Cobilas.GodotEngine.Utility.Numerics.Vector3D)
  type: Method
  source:
    remote:
      path: Godot/Node_GD_CB_Extension.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: SetNodeScale
    path: ../../Godot Dev/com.cobilas.godot.utility/Godot/Node_GD_CB_Extension.cs
    startLine: 36
  assemblies:
  - com.cobilas.godot.utility
  namespace: Godot
  summary: >-
    Allows you to define the scale of the <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> object.
        <p>This method will only take effect when the <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> object inherits the <xref href="Godot.Node2D" data-throw-if-not-resolved="false"></xref> class or the <xref href="Godot.Spatial" data-throw-if-not-resolved="false"></xref> class.</p>
  example: []
  syntax:
    content: public static void SetNodeScale(this Node N, Vector3D scale)
    parameters:
    - id: N
      type: Godot.Node
      description: The <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> that will be used.
    - id: scale
      type: Cobilas.GodotEngine.Utility.Numerics.Vector3D
      description: The new size or scale of the <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> object.
    content.vb: Public Shared Sub SetNodeScale(N As Node, scale As Vector3D)
  overload: Godot.Node_GD_CB_Extension.SetNodeScale*
- uid: Godot.Node_GD_CB_Extension.GetNodePosition(Godot.Node)
  commentId: M:Godot.Node_GD_CB_Extension.GetNodePosition(Godot.Node)
  id: GetNodePosition(Godot.Node)
  isExtensionMethod: true
  parent: Godot.Node_GD_CB_Extension
  langs:
  - csharp
  - vb
  name: GetNodePosition(Node)
  nameWithType: Node_GD_CB_Extension.GetNodePosition(Node)
  fullName: Godot.Node_GD_CB_Extension.GetNodePosition(Godot.Node)
  type: Method
  source:
    remote:
      path: Godot/Node_GD_CB_Extension.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: GetNodePosition
    path: ../../Godot Dev/com.cobilas.godot.utility/Godot/Node_GD_CB_Extension.cs
    startLine: 45
  assemblies:
  - com.cobilas.godot.utility
  namespace: Godot
  summary: >-
    Obtem a posição atual do objeto <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref>.
        <p>This method will only take effect when the <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> object inherits the <xref href="Godot.Node2D" data-throw-if-not-resolved="false"></xref> class or the <xref href="Godot.Spatial" data-throw-if-not-resolved="false"></xref> class.</p>
  example: []
  syntax:
    content: public static Vector3D GetNodePosition(this Node N)
    parameters:
    - id: N
      type: Godot.Node
      description: The <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> that will be used.
    return:
      type: Cobilas.GodotEngine.Utility.Numerics.Vector3D
      description: Returns a <xref href="Cobilas.GodotEngine.Utility.Numerics.Vector3D" data-throw-if-not-resolved="false"></xref> containing the current position of the <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> object.
    content.vb: Public Shared Function GetNodePosition(N As Node) As Vector3D
  overload: Godot.Node_GD_CB_Extension.GetNodePosition*
- uid: Godot.Node_GD_CB_Extension.GetNodeRotation(Godot.Node)
  commentId: M:Godot.Node_GD_CB_Extension.GetNodeRotation(Godot.Node)
  id: GetNodeRotation(Godot.Node)
  isExtensionMethod: true
  parent: Godot.Node_GD_CB_Extension
  langs:
  - csharp
  - vb
  name: GetNodeRotation(Node)
  nameWithType: Node_GD_CB_Extension.GetNodeRotation(Node)
  fullName: Godot.Node_GD_CB_Extension.GetNodeRotation(Godot.Node)
  type: Method
  source:
    remote:
      path: Godot/Node_GD_CB_Extension.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: GetNodeRotation
    path: ../../Godot Dev/com.cobilas.godot.utility/Godot/Node_GD_CB_Extension.cs
    startLine: 55
  assemblies:
  - com.cobilas.godot.utility
  namespace: Godot
  summary: >-
    Gets the current rotation of the <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> object.
        <p>This method will only take effect when the <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> object inherits the <xref href="Godot.Node2D" data-throw-if-not-resolved="false"></xref> class or the <xref href="Godot.Spatial" data-throw-if-not-resolved="false"></xref> class.</p>
  example: []
  syntax:
    content: public static Vector3D GetNodeRotation(this Node N)
    parameters:
    - id: N
      type: Godot.Node
      description: The <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> that will be used.
    return:
      type: Cobilas.GodotEngine.Utility.Numerics.Vector3D
      description: Returns a <xref href="Cobilas.GodotEngine.Utility.Numerics.Vector3D" data-throw-if-not-resolved="false"></xref> containing the current rotation of the <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> object.
    content.vb: Public Shared Function GetNodeRotation(N As Node) As Vector3D
  overload: Godot.Node_GD_CB_Extension.GetNodeRotation*
- uid: Godot.Node_GD_CB_Extension.GetNodeScale(Godot.Node)
  commentId: M:Godot.Node_GD_CB_Extension.GetNodeScale(Godot.Node)
  id: GetNodeScale(Godot.Node)
  isExtensionMethod: true
  parent: Godot.Node_GD_CB_Extension
  langs:
  - csharp
  - vb
  name: GetNodeScale(Node)
  nameWithType: Node_GD_CB_Extension.GetNodeScale(Node)
  fullName: Godot.Node_GD_CB_Extension.GetNodeScale(Godot.Node)
  type: Method
  source:
    remote:
      path: Godot/Node_GD_CB_Extension.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: GetNodeScale
    path: ../../Godot Dev/com.cobilas.godot.utility/Godot/Node_GD_CB_Extension.cs
    startLine: 65
  assemblies:
  - com.cobilas.godot.utility
  namespace: Godot
  summary: >-
    Gets the current scale of the <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> object.
        <p>This method will only take effect when the <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> object inherits the <xref href="Godot.Node2D" data-throw-if-not-resolved="false"></xref> class or the <xref href="Godot.Spatial" data-throw-if-not-resolved="false"></xref> class.</p>
  example: []
  syntax:
    content: public static Vector3D GetNodeScale(this Node N)
    parameters:
    - id: N
      type: Godot.Node
      description: The <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> that will be used.
    return:
      type: Cobilas.GodotEngine.Utility.Numerics.Vector3D
      description: Returns a Vector3D containing the current scale of the Node object.
    content.vb: Public Shared Function GetNodeScale(N As Node) As Vector3D
  overload: Godot.Node_GD_CB_Extension.GetNodeScale*
- uid: Godot.Node_GD_CB_Extension.FindNodes(Godot.Node,System.Type,System.Boolean)
  commentId: M:Godot.Node_GD_CB_Extension.FindNodes(Godot.Node,System.Type,System.Boolean)
  id: FindNodes(Godot.Node,System.Type,System.Boolean)
  isExtensionMethod: true
  parent: Godot.Node_GD_CB_Extension
  langs:
  - csharp
  - vb
  name: FindNodes(Node, Type, bool)
  nameWithType: Node_GD_CB_Extension.FindNodes(Node, Type, bool)
  fullName: Godot.Node_GD_CB_Extension.FindNodes(Godot.Node, System.Type, bool)
  type: Method
  source:
    remote:
      path: Godot/Node_GD_CB_Extension.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: FindNodes
    path: ../../Godot Dev/com.cobilas.godot.utility/Godot/Node_GD_CB_Extension.cs
    startLine: 75
  assemblies:
  - com.cobilas.godot.utility
  namespace: Godot
  summary: Get the nodes from a type.
  example: []
  syntax:
    content: public static Node[] FindNodes(this Node N, Type typeNode, bool recusive)
    parameters:
    - id: N
      type: Godot.Node
      description: The <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> that will be used.
    - id: typeNode
      type: System.Type
      description: The type to look for.
    - id: recusive
      type: System.Boolean
      description: Also look for your children.
    return:
      type: Godot.Node[]
      description: Returns a list of nodes.
    content.vb: Public Shared Function FindNodes(N As Node, typeNode As Type, recusive As Boolean) As Node()
  overload: Godot.Node_GD_CB_Extension.FindNodes*
  nameWithType.vb: Node_GD_CB_Extension.FindNodes(Node, Type, Boolean)
  fullName.vb: Godot.Node_GD_CB_Extension.FindNodes(Godot.Node, System.Type, Boolean)
  name.vb: FindNodes(Node, Type, Boolean)
- uid: Godot.Node_GD_CB_Extension.FindNodes(Godot.Node,System.Type)
  commentId: M:Godot.Node_GD_CB_Extension.FindNodes(Godot.Node,System.Type)
  id: FindNodes(Godot.Node,System.Type)
  isExtensionMethod: true
  parent: Godot.Node_GD_CB_Extension
  langs:
  - csharp
  - vb
  name: FindNodes(Node, Type)
  nameWithType: Node_GD_CB_Extension.FindNodes(Node, Type)
  fullName: Godot.Node_GD_CB_Extension.FindNodes(Godot.Node, System.Type)
  type: Method
  source:
    remote:
      path: Godot/Node_GD_CB_Extension.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: FindNodes
    path: ../../Godot Dev/com.cobilas.godot.utility/Godot/Node_GD_CB_Extension.cs
    startLine: 94
  assemblies:
  - com.cobilas.godot.utility
  namespace: Godot
  summary: >-
    Get the nodes from a type.

    <p>By default, the method searches recursively.(<xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> recusive = true)</p>
  example: []
  syntax:
    content: public static Node[] FindNodes(this Node N, Type typeNode)
    parameters:
    - id: N
      type: Godot.Node
      description: The <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> that will be used.
    - id: typeNode
      type: System.Type
      description: The type to look for.
    return:
      type: Godot.Node[]
      description: Returns a list of nodes.
    content.vb: Public Shared Function FindNodes(N As Node, typeNode As Type) As Node()
  overload: Godot.Node_GD_CB_Extension.FindNodes*
- uid: Godot.Node_GD_CB_Extension.FindNodes``1(Godot.Node,System.Boolean)
  commentId: M:Godot.Node_GD_CB_Extension.FindNodes``1(Godot.Node,System.Boolean)
  id: FindNodes``1(Godot.Node,System.Boolean)
  isExtensionMethod: true
  parent: Godot.Node_GD_CB_Extension
  langs:
  - csharp
  - vb
  name: FindNodes<T>(Node, bool)
  nameWithType: Node_GD_CB_Extension.FindNodes<T>(Node, bool)
  fullName: Godot.Node_GD_CB_Extension.FindNodes<T>(Godot.Node, bool)
  type: Method
  source:
    remote:
      path: Godot/Node_GD_CB_Extension.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: FindNodes
    path: ../../Godot Dev/com.cobilas.godot.utility/Godot/Node_GD_CB_Extension.cs
    startLine: 104
  assemblies:
  - com.cobilas.godot.utility
  namespace: Godot
  summary: Get the nodes from a type.
  example: []
  syntax:
    content: 'public static T[] FindNodes<T>(this Node N, bool recusive) where T : Node'
    parameters:
    - id: N
      type: Godot.Node
      description: The <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> that will be used.
    - id: recusive
      type: System.Boolean
      description: Also look for your children.
    typeParameters:
    - id: T
      description: The type to look for.
    return:
      type: '{T}[]'
      description: Returns a list of nodes.
    content.vb: Public Shared Function FindNodes(Of T As Node)(N As Node, recusive As Boolean) As T()
  overload: Godot.Node_GD_CB_Extension.FindNodes*
  nameWithType.vb: Node_GD_CB_Extension.FindNodes(Of T)(Node, Boolean)
  fullName.vb: Godot.Node_GD_CB_Extension.FindNodes(Of T)(Godot.Node, Boolean)
  name.vb: FindNodes(Of T)(Node, Boolean)
- uid: Godot.Node_GD_CB_Extension.FindNodes``1(Godot.Node)
  commentId: M:Godot.Node_GD_CB_Extension.FindNodes``1(Godot.Node)
  id: FindNodes``1(Godot.Node)
  isExtensionMethod: true
  parent: Godot.Node_GD_CB_Extension
  langs:
  - csharp
  - vb
  name: FindNodes<T>(Node)
  nameWithType: Node_GD_CB_Extension.FindNodes<T>(Node)
  fullName: Godot.Node_GD_CB_Extension.FindNodes<T>(Godot.Node)
  type: Method
  source:
    remote:
      path: Godot/Node_GD_CB_Extension.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: FindNodes
    path: ../../Godot Dev/com.cobilas.godot.utility/Godot/Node_GD_CB_Extension.cs
    startLine: 113
  assemblies:
  - com.cobilas.godot.utility
  namespace: Godot
  summary: >-
    Get the nodes from a type.

    <p>By default, the method searches recursively.(<xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> recusive = true)</p>
  example: []
  syntax:
    content: 'public static T[] FindNodes<T>(this Node N) where T : Node'
    parameters:
    - id: N
      type: Godot.Node
    typeParameters:
    - id: T
      description: The type to look for.
    return:
      type: '{T}[]'
      description: Returns a list of nodes.
    content.vb: Public Shared Function FindNodes(Of T As Node)(N As Node) As T()
  overload: Godot.Node_GD_CB_Extension.FindNodes*
  nameWithType.vb: Node_GD_CB_Extension.FindNodes(Of T)(Node)
  fullName.vb: Godot.Node_GD_CB_Extension.FindNodes(Of T)(Godot.Node)
  name.vb: FindNodes(Of T)(Node)
- uid: Godot.Node_GD_CB_Extension.FindNodeByName(Godot.Node,System.String,System.Type,System.Boolean)
  commentId: M:Godot.Node_GD_CB_Extension.FindNodeByName(Godot.Node,System.String,System.Type,System.Boolean)
  id: FindNodeByName(Godot.Node,System.String,System.Type,System.Boolean)
  isExtensionMethod: true
  parent: Godot.Node_GD_CB_Extension
  langs:
  - csharp
  - vb
  name: FindNodeByName(Node, string, Type, bool)
  nameWithType: Node_GD_CB_Extension.FindNodeByName(Node, string, Type, bool)
  fullName: Godot.Node_GD_CB_Extension.FindNodeByName(Godot.Node, string, System.Type, bool)
  type: Method
  source:
    remote:
      path: Godot/Node_GD_CB_Extension.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: FindNodeByName
    path: ../../Godot Dev/com.cobilas.godot.utility/Godot/Node_GD_CB_Extension.cs
    startLine: 124
  assemblies:
  - com.cobilas.godot.utility
  namespace: Godot
  summary: Get a node from name.
  example: []
  syntax:
    content: public static Node FindNodeByName(this Node N, string name, Type typeNode, bool recusive)
    parameters:
    - id: N
      type: Godot.Node
      description: The <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> that will be used.
    - id: name
      type: System.String
      description: The node name
    - id: typeNode
      type: System.Type
      description: The type to look for.
    - id: recusive
      type: System.Boolean
      description: Also look for your children.
    return:
      type: Godot.Node
      description: The method returns the object based on its name, if not found the method returns <xref href="Cobilas.GodotEngine.Utility.NullNode" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function FindNodeByName(N As Node, name As String, typeNode As Type, recusive As Boolean) As Node
  overload: Godot.Node_GD_CB_Extension.FindNodeByName*
  nameWithType.vb: Node_GD_CB_Extension.FindNodeByName(Node, String, Type, Boolean)
  fullName.vb: Godot.Node_GD_CB_Extension.FindNodeByName(Godot.Node, String, System.Type, Boolean)
  name.vb: FindNodeByName(Node, String, Type, Boolean)
- uid: Godot.Node_GD_CB_Extension.FindNodeByName(Godot.Node,System.String,System.Boolean)
  commentId: M:Godot.Node_GD_CB_Extension.FindNodeByName(Godot.Node,System.String,System.Boolean)
  id: FindNodeByName(Godot.Node,System.String,System.Boolean)
  isExtensionMethod: true
  parent: Godot.Node_GD_CB_Extension
  langs:
  - csharp
  - vb
  name: FindNodeByName(Node, string, bool)
  nameWithType: Node_GD_CB_Extension.FindNodeByName(Node, string, bool)
  fullName: Godot.Node_GD_CB_Extension.FindNodeByName(Godot.Node, string, bool)
  type: Method
  source:
    remote:
      path: Godot/Node_GD_CB_Extension.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: FindNodeByName
    path: ../../Godot Dev/com.cobilas.godot.utility/Godot/Node_GD_CB_Extension.cs
    startLine: 138
  assemblies:
  - com.cobilas.godot.utility
  namespace: Godot
  summary: >-
    Get a node from name.

    <p>By default, the method looks for a node of type node.(<xref href="System.Type" data-throw-if-not-resolved="false"></xref> typeNode = typeof(<xref href="Godot.Node" data-throw-if-not-resolved="false"></xref>))</p>
  example: []
  syntax:
    content: public static Node FindNodeByName(this Node N, string name, bool recusive)
    parameters:
    - id: N
      type: Godot.Node
      description: The <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> that will be used.
    - id: name
      type: System.String
      description: The node name
    - id: recusive
      type: System.Boolean
      description: Also look for your children.
    return:
      type: Godot.Node
    content.vb: Public Shared Function FindNodeByName(N As Node, name As String, recusive As Boolean) As Node
  overload: Godot.Node_GD_CB_Extension.FindNodeByName*
  nameWithType.vb: Node_GD_CB_Extension.FindNodeByName(Node, String, Boolean)
  fullName.vb: Godot.Node_GD_CB_Extension.FindNodeByName(Godot.Node, String, Boolean)
  name.vb: FindNodeByName(Node, String, Boolean)
- uid: Godot.Node_GD_CB_Extension.FindNodeByName(Godot.Node,System.String)
  commentId: M:Godot.Node_GD_CB_Extension.FindNodeByName(Godot.Node,System.String)
  id: FindNodeByName(Godot.Node,System.String)
  isExtensionMethod: true
  parent: Godot.Node_GD_CB_Extension
  langs:
  - csharp
  - vb
  name: FindNodeByName(Node, string)
  nameWithType: Node_GD_CB_Extension.FindNodeByName(Node, string)
  fullName: Godot.Node_GD_CB_Extension.FindNodeByName(Godot.Node, string)
  type: Method
  source:
    remote:
      path: Godot/Node_GD_CB_Extension.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: FindNodeByName
    path: ../../Godot Dev/com.cobilas.godot.utility/Godot/Node_GD_CB_Extension.cs
    startLine: 148
  assemblies:
  - com.cobilas.godot.utility
  namespace: Godot
  summary: >-
    Get a node from name.

    <p>By default, the method looks for a node of type node.(<xref href="System.Type" data-throw-if-not-resolved="false"></xref> typeNode = typeof(<xref href="Godot.Node" data-throw-if-not-resolved="false"></xref>))</p><p>By default, the method searches recursively.(<xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> recusive = true)</p>
  example: []
  syntax:
    content: public static Node FindNodeByName(this Node N, string name)
    parameters:
    - id: N
      type: Godot.Node
      description: The <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> that will be used.
    - id: name
      type: System.String
      description: The node name
    return:
      type: Godot.Node
    content.vb: Public Shared Function FindNodeByName(N As Node, name As String) As Node
  overload: Godot.Node_GD_CB_Extension.FindNodeByName*
  nameWithType.vb: Node_GD_CB_Extension.FindNodeByName(Node, String)
  fullName.vb: Godot.Node_GD_CB_Extension.FindNodeByName(Godot.Node, String)
  name.vb: FindNodeByName(Node, String)
- uid: Godot.Node_GD_CB_Extension.FindNodeByName``1(Godot.Node,System.String,System.Boolean)
  commentId: M:Godot.Node_GD_CB_Extension.FindNodeByName``1(Godot.Node,System.String,System.Boolean)
  id: FindNodeByName``1(Godot.Node,System.String,System.Boolean)
  isExtensionMethod: true
  parent: Godot.Node_GD_CB_Extension
  langs:
  - csharp
  - vb
  name: FindNodeByName<T>(Node, string, bool)
  nameWithType: Node_GD_CB_Extension.FindNodeByName<T>(Node, string, bool)
  fullName: Godot.Node_GD_CB_Extension.FindNodeByName<T>(Godot.Node, string, bool)
  type: Method
  source:
    remote:
      path: Godot/Node_GD_CB_Extension.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: FindNodeByName
    path: ../../Godot Dev/com.cobilas.godot.utility/Godot/Node_GD_CB_Extension.cs
    startLine: 158
  assemblies:
  - com.cobilas.godot.utility
  namespace: Godot
  summary: Get a node from name.
  example: []
  syntax:
    content: 'public static T FindNodeByName<T>(this Node N, string name, bool recusive) where T : Node'
    parameters:
    - id: N
      type: Godot.Node
      description: The <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> that will be used.
    - id: name
      type: System.String
      description: The node name
    - id: recusive
      type: System.Boolean
      description: Also look for your children.
    typeParameters:
    - id: T
      description: The type to look for.
    return:
      type: '{T}'
    content.vb: Public Shared Function FindNodeByName(Of T As Node)(N As Node, name As String, recusive As Boolean) As T
  overload: Godot.Node_GD_CB_Extension.FindNodeByName*
  nameWithType.vb: Node_GD_CB_Extension.FindNodeByName(Of T)(Node, String, Boolean)
  fullName.vb: Godot.Node_GD_CB_Extension.FindNodeByName(Of T)(Godot.Node, String, Boolean)
  name.vb: FindNodeByName(Of T)(Node, String, Boolean)
- uid: Godot.Node_GD_CB_Extension.FindNodeByName``1(Godot.Node,System.String)
  commentId: M:Godot.Node_GD_CB_Extension.FindNodeByName``1(Godot.Node,System.String)
  id: FindNodeByName``1(Godot.Node,System.String)
  isExtensionMethod: true
  parent: Godot.Node_GD_CB_Extension
  langs:
  - csharp
  - vb
  name: FindNodeByName<T>(Node, string)
  nameWithType: Node_GD_CB_Extension.FindNodeByName<T>(Node, string)
  fullName: Godot.Node_GD_CB_Extension.FindNodeByName<T>(Godot.Node, string)
  type: Method
  source:
    remote:
      path: Godot/Node_GD_CB_Extension.cs
      branch: main.dev
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: FindNodeByName
    path: ../../Godot Dev/com.cobilas.godot.utility/Godot/Node_GD_CB_Extension.cs
    startLine: 167
  assemblies:
  - com.cobilas.godot.utility
  namespace: Godot
  summary: >-
    Get a node from name.

    <p>By default, the method searches recursively.(<xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> recusive = true)</p>
  example: []
  syntax:
    content: 'public static T FindNodeByName<T>(this Node N, string name) where T : Node'
    parameters:
    - id: N
      type: Godot.Node
      description: The <xref href="Godot.Node" data-throw-if-not-resolved="false"></xref> that will be used.
    - id: name
      type: System.String
      description: The node name
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function FindNodeByName(Of T As Node)(N As Node, name As String) As T
  overload: Godot.Node_GD_CB_Extension.FindNodeByName*
  nameWithType.vb: Node_GD_CB_Extension.FindNodeByName(Of T)(Node, String)
  fullName.vb: Godot.Node_GD_CB_Extension.FindNodeByName(Of T)(Godot.Node, String)
  name.vb: FindNodeByName(Of T)(Node, String)
references:
- uid: Godot.Node
  commentId: T:Godot.Node
  parent: Godot
  isExternal: true
  name: Node
  nameWithType: Node
  fullName: Godot.Node
- uid: Godot
  commentId: N:Godot
  href: Godot.html
  name: Godot
  nameWithType: Godot
  fullName: Godot
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Godot.GD.PushError(System.String)
  commentId: M:Godot.GD.PushError(System.String)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: PushError(string)
  nameWithType: GD.PushError(string)
  fullName: Godot.GD.PushError(string)
  nameWithType.vb: GD.PushError(String)
  fullName.vb: Godot.GD.PushError(String)
  name.vb: PushError(String)
  spec.csharp:
  - uid: Godot.GD.PushError(System.String)
    name: PushError
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Godot.GD.PushError(System.String)
    name: PushError
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Godot.GD.PushWarning(System.String)
  commentId: M:Godot.GD.PushWarning(System.String)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: PushWarning(string)
  nameWithType: GD.PushWarning(string)
  fullName: Godot.GD.PushWarning(string)
  nameWithType.vb: GD.PushWarning(String)
  fullName.vb: Godot.GD.PushWarning(String)
  name.vb: PushWarning(String)
  spec.csharp:
  - uid: Godot.GD.PushWarning(System.String)
    name: PushWarning
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Godot.GD.PushWarning(System.String)
    name: PushWarning
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Godot.GD.Print(System.Object[])
  commentId: M:Godot.GD.Print(System.Object[])
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: Print(params object[])
  nameWithType: GD.Print(params object[])
  fullName: Godot.GD.Print(params object[])
  nameWithType.vb: GD.Print(ParamArray Object())
  fullName.vb: Godot.GD.Print(ParamArray Object())
  name.vb: Print(ParamArray Object())
  spec.csharp:
  - uid: Godot.GD.Print(System.Object[])
    name: Print
    isExternal: true
  - name: (
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Godot.GD.Print(System.Object[])
    name: Print
    isExternal: true
  - name: (
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Godot.Node_GD_CB_Extension.Print*
  commentId: Overload:Godot.Node_GD_CB_Extension.Print
  href: Godot.Node_GD_CB_Extension.html#Godot_Node_GD_CB_Extension_Print_Godot_Node_System_Object___
  name: Print
  nameWithType: Node_GD_CB_Extension.Print
  fullName: Godot.Node_GD_CB_Extension.Print
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: Godot.Node2D
  commentId: T:Godot.Node2D
  parent: Godot
  isExternal: true
  name: Node2D
  nameWithType: Node2D
  fullName: Godot.Node2D
- uid: Godot.Spatial
  commentId: T:Godot.Spatial
  isExternal: true
  name: Spatial
  nameWithType: Spatial
  fullName: Godot.Spatial
- uid: Godot.Node_GD_CB_Extension.SetNodePosition*
  commentId: Overload:Godot.Node_GD_CB_Extension.SetNodePosition
  href: Godot.Node_GD_CB_Extension.html#Godot_Node_GD_CB_Extension_SetNodePosition_Godot_Node_Cobilas_GodotEngine_Utility_Numerics_Vector3D_
  name: SetNodePosition
  nameWithType: Node_GD_CB_Extension.SetNodePosition
  fullName: Godot.Node_GD_CB_Extension.SetNodePosition
- uid: Cobilas.GodotEngine.Utility.Numerics.Vector3D
  commentId: T:Cobilas.GodotEngine.Utility.Numerics.Vector3D
  parent: Cobilas.GodotEngine.Utility.Numerics
  href: Cobilas.GodotEngine.Utility.Numerics.Vector3D.html
  name: Vector3D
  nameWithType: Vector3D
  fullName: Cobilas.GodotEngine.Utility.Numerics.Vector3D
- uid: Cobilas.GodotEngine.Utility.Numerics
  commentId: N:Cobilas.GodotEngine.Utility.Numerics
  href: Cobilas.html
  name: Cobilas.GodotEngine.Utility.Numerics
  nameWithType: Cobilas.GodotEngine.Utility.Numerics
  fullName: Cobilas.GodotEngine.Utility.Numerics
  spec.csharp:
  - uid: Cobilas
    name: Cobilas
    href: Cobilas.html
  - name: .
  - uid: Cobilas.GodotEngine
    name: GodotEngine
    href: Cobilas.GodotEngine.html
  - name: .
  - uid: Cobilas.GodotEngine.Utility
    name: Utility
    href: Cobilas.GodotEngine.Utility.html
  - name: .
  - uid: Cobilas.GodotEngine.Utility.Numerics
    name: Numerics
    href: Cobilas.GodotEngine.Utility.Numerics.html
  spec.vb:
  - uid: Cobilas
    name: Cobilas
    href: Cobilas.html
  - name: .
  - uid: Cobilas.GodotEngine
    name: GodotEngine
    href: Cobilas.GodotEngine.html
  - name: .
  - uid: Cobilas.GodotEngine.Utility
    name: Utility
    href: Cobilas.GodotEngine.Utility.html
  - name: .
  - uid: Cobilas.GodotEngine.Utility.Numerics
    name: Numerics
    href: Cobilas.GodotEngine.Utility.Numerics.html
- uid: Godot.Node_GD_CB_Extension.SetNodeRotation*
  commentId: Overload:Godot.Node_GD_CB_Extension.SetNodeRotation
  href: Godot.Node_GD_CB_Extension.html#Godot_Node_GD_CB_Extension_SetNodeRotation_Godot_Node_Cobilas_GodotEngine_Utility_Numerics_Vector3D_
  name: SetNodeRotation
  nameWithType: Node_GD_CB_Extension.SetNodeRotation
  fullName: Godot.Node_GD_CB_Extension.SetNodeRotation
- uid: Godot.Node_GD_CB_Extension.SetNodeScale*
  commentId: Overload:Godot.Node_GD_CB_Extension.SetNodeScale
  href: Godot.Node_GD_CB_Extension.html#Godot_Node_GD_CB_Extension_SetNodeScale_Godot_Node_Cobilas_GodotEngine_Utility_Numerics_Vector3D_
  name: SetNodeScale
  nameWithType: Node_GD_CB_Extension.SetNodeScale
  fullName: Godot.Node_GD_CB_Extension.SetNodeScale
- uid: Godot.Node_GD_CB_Extension.GetNodePosition*
  commentId: Overload:Godot.Node_GD_CB_Extension.GetNodePosition
  href: Godot.Node_GD_CB_Extension.html#Godot_Node_GD_CB_Extension_GetNodePosition_Godot_Node_
  name: GetNodePosition
  nameWithType: Node_GD_CB_Extension.GetNodePosition
  fullName: Godot.Node_GD_CB_Extension.GetNodePosition
- uid: Godot.Node_GD_CB_Extension.GetNodeRotation*
  commentId: Overload:Godot.Node_GD_CB_Extension.GetNodeRotation
  href: Godot.Node_GD_CB_Extension.html#Godot_Node_GD_CB_Extension_GetNodeRotation_Godot_Node_
  name: GetNodeRotation
  nameWithType: Node_GD_CB_Extension.GetNodeRotation
  fullName: Godot.Node_GD_CB_Extension.GetNodeRotation
- uid: Godot.Node_GD_CB_Extension.GetNodeScale*
  commentId: Overload:Godot.Node_GD_CB_Extension.GetNodeScale
  href: Godot.Node_GD_CB_Extension.html#Godot_Node_GD_CB_Extension_GetNodeScale_Godot_Node_
  name: GetNodeScale
  nameWithType: Node_GD_CB_Extension.GetNodeScale
  fullName: Godot.Node_GD_CB_Extension.GetNodeScale
- uid: Godot.Node_GD_CB_Extension.FindNodes*
  commentId: Overload:Godot.Node_GD_CB_Extension.FindNodes
  href: Godot.Node_GD_CB_Extension.html#Godot_Node_GD_CB_Extension_FindNodes_Godot_Node_System_Type_System_Boolean_
  name: FindNodes
  nameWithType: Node_GD_CB_Extension.FindNodes
  fullName: Godot.Node_GD_CB_Extension.FindNodes
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Godot.Node[]
  isExternal: true
  name: Node[]
  nameWithType: Node[]
  fullName: Godot.Node[]
  nameWithType.vb: Node()
  fullName.vb: Godot.Node()
  name.vb: Node()
  spec.csharp:
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: (
  - name: )
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: Cobilas.GodotEngine.Utility.NullNode
  commentId: T:Cobilas.GodotEngine.Utility.NullNode
  parent: Cobilas.GodotEngine.Utility
  href: Cobilas.GodotEngine.Utility.NullNode.html
  name: NullNode
  nameWithType: NullNode
  fullName: Cobilas.GodotEngine.Utility.NullNode
- uid: Godot.Node_GD_CB_Extension.FindNodeByName*
  commentId: Overload:Godot.Node_GD_CB_Extension.FindNodeByName
  href: Godot.Node_GD_CB_Extension.html#Godot_Node_GD_CB_Extension_FindNodeByName_Godot_Node_System_String_System_Type_System_Boolean_
  name: FindNodeByName
  nameWithType: Node_GD_CB_Extension.FindNodeByName
  fullName: Godot.Node_GD_CB_Extension.FindNodeByName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Cobilas.GodotEngine.Utility
  commentId: N:Cobilas.GodotEngine.Utility
  href: Cobilas.html
  name: Cobilas.GodotEngine.Utility
  nameWithType: Cobilas.GodotEngine.Utility
  fullName: Cobilas.GodotEngine.Utility
  spec.csharp:
  - uid: Cobilas
    name: Cobilas
    href: Cobilas.html
  - name: .
  - uid: Cobilas.GodotEngine
    name: GodotEngine
    href: Cobilas.GodotEngine.html
  - name: .
  - uid: Cobilas.GodotEngine.Utility
    name: Utility
    href: Cobilas.GodotEngine.Utility.html
  spec.vb:
  - uid: Cobilas
    name: Cobilas
    href: Cobilas.html
  - name: .
  - uid: Cobilas.GodotEngine
    name: GodotEngine
    href: Cobilas.GodotEngine.html
  - name: .
  - uid: Cobilas.GodotEngine.Utility
    name: Utility
    href: Cobilas.GodotEngine.Utility.html
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
