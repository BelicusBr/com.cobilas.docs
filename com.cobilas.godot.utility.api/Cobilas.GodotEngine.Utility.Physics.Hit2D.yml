### YamlMime:ManagedReference
items:
- uid: Cobilas.GodotEngine.Utility.Physics.Hit2D
  commentId: T:Cobilas.GodotEngine.Utility.Physics.Hit2D
  id: Hit2D
  parent: Cobilas.GodotEngine.Utility.Physics
  children:
  - Cobilas.GodotEngine.Utility.Physics.Hit2D.Collision
  - Cobilas.GodotEngine.Utility.Physics.Hit2D.Collision_Key
  - Cobilas.GodotEngine.Utility.Physics.Hit2D.ID
  - Cobilas.GodotEngine.Utility.Physics.Hit2D.ID_Key
  - Cobilas.GodotEngine.Utility.Physics.Hit2D.IsValid(Godot.Collections.Dictionary)
  - Cobilas.GodotEngine.Utility.Physics.Hit2D.MetaData
  - Cobilas.GodotEngine.Utility.Physics.Hit2D.MetaData_Key
  - Cobilas.GodotEngine.Utility.Physics.Hit2D.Name
  - Cobilas.GodotEngine.Utility.Physics.Hit2D.RID
  - Cobilas.GodotEngine.Utility.Physics.Hit2D.RID_Key
  - Cobilas.GodotEngine.Utility.Physics.Hit2D.op_Explicit(Godot.Collections.Dictionary)~Cobilas.GodotEngine.Utility.Physics.Hit2D
  langs:
  - csharp
  - vb
  name: Hit2D
  nameWithType: Hit2D
  fullName: Cobilas.GodotEngine.Utility.Physics.Hit2D
  type: Struct
  source:
    remote:
      path: GodotEngine.Utility/Physics/Hit2D.cs
      branch: main
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: Hit2D
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Hit2D.cs
    startLine: 6
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Responsible for storing information about a 2D collision.
  example: []
  syntax:
    content: public struct Hit2D
    content.vb: Public Structure Hit2D
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: Cobilas.GodotEngine.Utility.Physics.Hit2D.ID_Key
  commentId: F:Cobilas.GodotEngine.Utility.Physics.Hit2D.ID_Key
  id: ID_Key
  parent: Cobilas.GodotEngine.Utility.Physics.Hit2D
  langs:
  - csharp
  - vb
  name: ID_Key
  nameWithType: Hit2D.ID_Key
  fullName: Cobilas.GodotEngine.Utility.Physics.Hit2D.ID_Key
  type: Field
  source:
    remote:
      path: GodotEngine.Utility/Physics/Hit2D.cs
      branch: main
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: ID_Key
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Hit2D.cs
    startLine: 8
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Represents the collider_id key.
  example: []
  syntax:
    content: public const string ID_Key = "collider_id"
    return:
      type: System.String
    content.vb: Public Const ID_Key As String = "collider_id"
- uid: Cobilas.GodotEngine.Utility.Physics.Hit2D.RID_Key
  commentId: F:Cobilas.GodotEngine.Utility.Physics.Hit2D.RID_Key
  id: RID_Key
  parent: Cobilas.GodotEngine.Utility.Physics.Hit2D
  langs:
  - csharp
  - vb
  name: RID_Key
  nameWithType: Hit2D.RID_Key
  fullName: Cobilas.GodotEngine.Utility.Physics.Hit2D.RID_Key
  type: Field
  source:
    remote:
      path: GodotEngine.Utility/Physics/Hit2D.cs
      branch: main
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RID_Key
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Hit2D.cs
    startLine: 10
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Represents the rid key.
  example: []
  syntax:
    content: public const string RID_Key = "rid"
    return:
      type: System.String
    content.vb: Public Const RID_Key As String = "rid"
- uid: Cobilas.GodotEngine.Utility.Physics.Hit2D.Collision_Key
  commentId: F:Cobilas.GodotEngine.Utility.Physics.Hit2D.Collision_Key
  id: Collision_Key
  parent: Cobilas.GodotEngine.Utility.Physics.Hit2D
  langs:
  - csharp
  - vb
  name: Collision_Key
  nameWithType: Hit2D.Collision_Key
  fullName: Cobilas.GodotEngine.Utility.Physics.Hit2D.Collision_Key
  type: Field
  source:
    remote:
      path: GodotEngine.Utility/Physics/Hit2D.cs
      branch: main
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: Collision_Key
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Hit2D.cs
    startLine: 12
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Represents the collider key.
  example: []
  syntax:
    content: public const string Collision_Key = "collider"
    return:
      type: System.String
    content.vb: Public Const Collision_Key As String = "collider"
- uid: Cobilas.GodotEngine.Utility.Physics.Hit2D.MetaData_Key
  commentId: F:Cobilas.GodotEngine.Utility.Physics.Hit2D.MetaData_Key
  id: MetaData_Key
  parent: Cobilas.GodotEngine.Utility.Physics.Hit2D
  langs:
  - csharp
  - vb
  name: MetaData_Key
  nameWithType: Hit2D.MetaData_Key
  fullName: Cobilas.GodotEngine.Utility.Physics.Hit2D.MetaData_Key
  type: Field
  source:
    remote:
      path: GodotEngine.Utility/Physics/Hit2D.cs
      branch: main
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: MetaData_Key
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Hit2D.cs
    startLine: 14
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Represents the metadata key.
  example: []
  syntax:
    content: public const string MetaData_Key = "metadata"
    return:
      type: System.String
    content.vb: Public Const MetaData_Key As String = "metadata"
- uid: Cobilas.GodotEngine.Utility.Physics.Hit2D.ID
  commentId: P:Cobilas.GodotEngine.Utility.Physics.Hit2D.ID
  id: ID
  parent: Cobilas.GodotEngine.Utility.Physics.Hit2D
  langs:
  - csharp
  - vb
  name: ID
  nameWithType: Hit2D.ID
  fullName: Cobilas.GodotEngine.Utility.Physics.Hit2D.ID
  type: Property
  source:
    remote:
      path: GodotEngine.Utility/Physics/Hit2D.cs
      branch: main
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: ID
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Hit2D.cs
    startLine: 18
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: The colliding object's ID.
  example: []
  syntax:
    content: public readonly int ID { get; }
    parameters: []
    return:
      type: System.Int32
      description: Returns the object ID.
    content.vb: Public Property ID As Integer
  overload: Cobilas.GodotEngine.Utility.Physics.Hit2D.ID*
- uid: Cobilas.GodotEngine.Utility.Physics.Hit2D.RID
  commentId: P:Cobilas.GodotEngine.Utility.Physics.Hit2D.RID
  id: RID
  parent: Cobilas.GodotEngine.Utility.Physics.Hit2D
  langs:
  - csharp
  - vb
  name: RID
  nameWithType: Hit2D.RID
  fullName: Cobilas.GodotEngine.Utility.Physics.Hit2D.RID
  type: Property
  source:
    remote:
      path: GodotEngine.Utility/Physics/Hit2D.cs
      branch: main
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: RID
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Hit2D.cs
    startLine: 21
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: The intersecting object's <xref href="Godot.RID" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public readonly RID RID { get; }
    parameters: []
    return:
      type: Godot.RID
      description: Returns the RID of the object.
    content.vb: Public Property RID As RID
  overload: Cobilas.GodotEngine.Utility.Physics.Hit2D.RID*
- uid: Cobilas.GodotEngine.Utility.Physics.Hit2D.Collision
  commentId: P:Cobilas.GodotEngine.Utility.Physics.Hit2D.Collision
  id: Collision
  parent: Cobilas.GodotEngine.Utility.Physics.Hit2D
  langs:
  - csharp
  - vb
  name: Collision
  nameWithType: Hit2D.Collision
  fullName: Cobilas.GodotEngine.Utility.Physics.Hit2D.Collision
  type: Property
  source:
    remote:
      path: GodotEngine.Utility/Physics/Hit2D.cs
      branch: main
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: Collision
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Hit2D.cs
    startLine: 24
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: The colliding object.
  example: []
  syntax:
    content: public readonly Node Collision { get; }
    parameters: []
    return:
      type: Godot.Node
      description: Returns the collider of the object.
    content.vb: Public Property Collision As Node
  overload: Cobilas.GodotEngine.Utility.Physics.Hit2D.Collision*
- uid: Cobilas.GodotEngine.Utility.Physics.Hit2D.MetaData
  commentId: P:Cobilas.GodotEngine.Utility.Physics.Hit2D.MetaData
  id: MetaData
  parent: Cobilas.GodotEngine.Utility.Physics.Hit2D
  langs:
  - csharp
  - vb
  name: MetaData
  nameWithType: Hit2D.MetaData
  fullName: Cobilas.GodotEngine.Utility.Physics.Hit2D.MetaData
  type: Property
  source:
    remote:
      path: GodotEngine.Utility/Physics/Hit2D.cs
      branch: main
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: MetaData
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Hit2D.cs
    startLine: 28
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: >-
    The intersecting shape's metadata. This metadata is different from
        <xref href="Godot.Object.GetMeta(System.String%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> , and is set with <xref href="Godot.Physics2DServer.ShapeSetData(Godot.RID%2cSystem.Object)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public readonly object MetaData { get; }
    parameters: []
    return:
      type: System.Object
      description: Returns the object's metadata.
    content.vb: Public Property MetaData As Object
  overload: Cobilas.GodotEngine.Utility.Physics.Hit2D.MetaData*
- uid: Cobilas.GodotEngine.Utility.Physics.Hit2D.Name
  commentId: P:Cobilas.GodotEngine.Utility.Physics.Hit2D.Name
  id: Name
  parent: Cobilas.GodotEngine.Utility.Physics.Hit2D
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Hit2D.Name
  fullName: Cobilas.GodotEngine.Utility.Physics.Hit2D.Name
  type: Property
  source:
    remote:
      path: GodotEngine.Utility/Physics/Hit2D.cs
      branch: main
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: Name
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Hit2D.cs
    startLine: 31
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: The name of the object.
  example: []
  syntax:
    content: public readonly string Name { get; }
    parameters: []
    return:
      type: System.String
      description: Returns the name of the object.
    content.vb: Public ReadOnly Property Name As String
  overload: Cobilas.GodotEngine.Utility.Physics.Hit2D.Name*
- uid: Cobilas.GodotEngine.Utility.Physics.Hit2D.IsValid(Godot.Collections.Dictionary)
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Hit2D.IsValid(Godot.Collections.Dictionary)
  id: IsValid(Godot.Collections.Dictionary)
  parent: Cobilas.GodotEngine.Utility.Physics.Hit2D
  langs:
  - csharp
  - vb
  name: IsValid(Dictionary?)
  nameWithType: Hit2D.IsValid(Dictionary?)
  fullName: Cobilas.GodotEngine.Utility.Physics.Hit2D.IsValid(Godot.Collections.Dictionary?)
  type: Method
  source:
    remote:
      path: GodotEngine.Utility/Physics/Hit2D.cs
      branch: main
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: IsValid
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Hit2D.cs
    startLine: 42
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Checks if the <xref href="Godot.Collections.Dictionary" data-throw-if-not-resolved="false"></xref> type value is valid for conversion.
  example: []
  syntax:
    content: public static bool IsValid(Dictionary? dictionary)
    parameters:
    - id: dictionary
      type: Godot.Collections.Dictionary
      description: The object to be checked.
    return:
      type: System.Boolean
      description: Returns <code>true</code> when the <xref href="Godot.Collections.Dictionary" data-throw-if-not-resolved="false"></xref> type value is valid.
    content.vb: Public Shared Function IsValid(dictionary As Dictionary) As Boolean
  overload: Cobilas.GodotEngine.Utility.Physics.Hit2D.IsValid*
  nameWithType.vb: Hit2D.IsValid(Dictionary)
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Hit2D.IsValid(Godot.Collections.Dictionary)
  name.vb: IsValid(Dictionary)
- uid: Cobilas.GodotEngine.Utility.Physics.Hit2D.op_Explicit(Godot.Collections.Dictionary)~Cobilas.GodotEngine.Utility.Physics.Hit2D
  commentId: M:Cobilas.GodotEngine.Utility.Physics.Hit2D.op_Explicit(Godot.Collections.Dictionary)~Cobilas.GodotEngine.Utility.Physics.Hit2D
  id: op_Explicit(Godot.Collections.Dictionary)~Cobilas.GodotEngine.Utility.Physics.Hit2D
  parent: Cobilas.GodotEngine.Utility.Physics.Hit2D
  langs:
  - csharp
  - vb
  name: explicit operator Hit2D(Dictionary?)
  nameWithType: Hit2D.explicit operator Hit2D(Dictionary?)
  fullName: Cobilas.GodotEngine.Utility.Physics.Hit2D.explicit operator Cobilas.GodotEngine.Utility.Physics.Hit2D(Godot.Collections.Dictionary?)
  type: Operator
  source:
    remote:
      path: GodotEngine.Utility/Physics/Hit2D.cs
      branch: main
      repo: https://github.com/BelicusBr/com.cobilas.godot.utility.git
    id: op_Explicit
    path: ../../Godot Dev/com.cobilas.godot.utility/GodotEngine.Utility/Physics/Hit2D.cs
    startLine: 54
  assemblies:
  - com.cobilas.godot.utility
  namespace: Cobilas.GodotEngine.Utility.Physics
  summary: Explicit conversion operator.(<xref href="Godot.Collections.Dictionary" data-throw-if-not-resolved="false"></xref> to <xref href="Cobilas.GodotEngine.Utility.Physics.Hit2D" data-throw-if-not-resolved="false"></xref>)
  remarks: The conversion from <xref href="Godot.Collections.Dictionary" data-throw-if-not-resolved="false"></xref> to <xref href="Cobilas.GodotEngine.Utility.Physics.Hit2D" data-throw-if-not-resolved="false"></xref> will be valid when <xref href="Godot.Collections.Dictionary" data-throw-if-not-resolved="false"></xref> contains the keys ​​"collider_id", "rid", "metadata" and "collider".
  example: []
  syntax:
    content: public static explicit operator Hit2D(Dictionary? D)
    parameters:
    - id: D
      type: Godot.Collections.Dictionary
      description: Object to be converted.
    return:
      type: Cobilas.GodotEngine.Utility.Physics.Hit2D
    content.vb: Public Shared Narrowing Operator CType(D As Dictionary) As Hit2D
  overload: Cobilas.GodotEngine.Utility.Physics.Hit2D.op_Explicit*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The exception is thrown when <xref href="Godot.Collections.Dictionary" data-throw-if-not-resolved="false"></xref> object is null.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The exception is called when the Dictionary object is not valid for conversion because it does not contain the keys "collider_id", "rid", "metadata" and "collider".
  nameWithType.vb: Hit2D.CType(Dictionary)
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Hit2D.CType(Godot.Collections.Dictionary)
  name.vb: CType(Dictionary)
references:
- uid: Cobilas.GodotEngine.Utility.Physics
  commentId: N:Cobilas.GodotEngine.Utility.Physics
  href: Cobilas.html
  name: Cobilas.GodotEngine.Utility.Physics
  nameWithType: Cobilas.GodotEngine.Utility.Physics
  fullName: Cobilas.GodotEngine.Utility.Physics
  spec.csharp:
  - uid: Cobilas
    name: Cobilas
    href: Cobilas.html
  - name: .
  - uid: Cobilas.GodotEngine
    name: GodotEngine
    href: Cobilas.GodotEngine.html
  - name: .
  - uid: Cobilas.GodotEngine.Utility
    name: Utility
    href: Cobilas.GodotEngine.Utility.html
  - name: .
  - uid: Cobilas.GodotEngine.Utility.Physics
    name: Physics
    href: Cobilas.GodotEngine.Utility.Physics.html
  spec.vb:
  - uid: Cobilas
    name: Cobilas
    href: Cobilas.html
  - name: .
  - uid: Cobilas.GodotEngine
    name: GodotEngine
    href: Cobilas.GodotEngine.html
  - name: .
  - uid: Cobilas.GodotEngine.Utility
    name: Utility
    href: Cobilas.GodotEngine.Utility.html
  - name: .
  - uid: Cobilas.GodotEngine.Utility.Physics
    name: Physics
    href: Cobilas.GodotEngine.Utility.Physics.html
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Cobilas.GodotEngine.Utility.Physics.Hit2D.ID*
  commentId: Overload:Cobilas.GodotEngine.Utility.Physics.Hit2D.ID
  href: Cobilas.GodotEngine.Utility.Physics.Hit2D.html#Cobilas_GodotEngine_Utility_Physics_Hit2D_ID
  name: ID
  nameWithType: Hit2D.ID
  fullName: Cobilas.GodotEngine.Utility.Physics.Hit2D.ID
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Godot.RID
  commentId: T:Godot.RID
  parent: Godot
  isExternal: true
  name: RID
  nameWithType: RID
  fullName: Godot.RID
- uid: Cobilas.GodotEngine.Utility.Physics.Hit2D.RID*
  commentId: Overload:Cobilas.GodotEngine.Utility.Physics.Hit2D.RID
  href: Cobilas.GodotEngine.Utility.Physics.Hit2D.html#Cobilas_GodotEngine_Utility_Physics_Hit2D_RID
  name: RID
  nameWithType: Hit2D.RID
  fullName: Cobilas.GodotEngine.Utility.Physics.Hit2D.RID
- uid: Godot
  commentId: N:Godot
  href: Godot.html
  name: Godot
  nameWithType: Godot
  fullName: Godot
- uid: Cobilas.GodotEngine.Utility.Physics.Hit2D.Collision*
  commentId: Overload:Cobilas.GodotEngine.Utility.Physics.Hit2D.Collision
  href: Cobilas.GodotEngine.Utility.Physics.Hit2D.html#Cobilas_GodotEngine_Utility_Physics_Hit2D_Collision
  name: Collision
  nameWithType: Hit2D.Collision
  fullName: Cobilas.GodotEngine.Utility.Physics.Hit2D.Collision
- uid: Godot.Node
  commentId: T:Godot.Node
  parent: Godot
  isExternal: true
  name: Node
  nameWithType: Node
  fullName: Godot.Node
- uid: Godot.Object.GetMeta(System.String,System.Object)
  commentId: M:Godot.Object.GetMeta(System.String,System.Object)
  parent: Godot.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetMeta(string, object)
  nameWithType: Object.GetMeta(string, object)
  fullName: Godot.Object.GetMeta(string, object)
  nameWithType.vb: Object.GetMeta(String, Object)
  fullName.vb: Godot.Object.GetMeta(String, Object)
  name.vb: GetMeta(String, Object)
  spec.csharp:
  - uid: Godot.Object.GetMeta(System.String,System.Object)
    name: GetMeta
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Godot.Object.GetMeta(System.String,System.Object)
    name: GetMeta
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Godot.Physics2DServer.ShapeSetData(Godot.RID,System.Object)
  commentId: M:Godot.Physics2DServer.ShapeSetData(Godot.RID,System.Object)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: ShapeSetData(RID, object)
  nameWithType: Physics2DServer.ShapeSetData(RID, object)
  fullName: Godot.Physics2DServer.ShapeSetData(Godot.RID, object)
  nameWithType.vb: Physics2DServer.ShapeSetData(RID, Object)
  fullName.vb: Godot.Physics2DServer.ShapeSetData(Godot.RID, Object)
  name.vb: ShapeSetData(RID, Object)
  spec.csharp:
  - uid: Godot.Physics2DServer.ShapeSetData(Godot.RID,System.Object)
    name: ShapeSetData
    isExternal: true
  - name: (
  - uid: Godot.RID
    name: RID
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Godot.Physics2DServer.ShapeSetData(Godot.RID,System.Object)
    name: ShapeSetData
    isExternal: true
  - name: (
  - uid: Godot.RID
    name: RID
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Cobilas.GodotEngine.Utility.Physics.Hit2D.MetaData*
  commentId: Overload:Cobilas.GodotEngine.Utility.Physics.Hit2D.MetaData
  href: Cobilas.GodotEngine.Utility.Physics.Hit2D.html#Cobilas_GodotEngine_Utility_Physics_Hit2D_MetaData
  name: MetaData
  nameWithType: Hit2D.MetaData
  fullName: Cobilas.GodotEngine.Utility.Physics.Hit2D.MetaData
- uid: Godot.Object
  commentId: T:Godot.Object
  parent: Godot
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: Godot.Object
- uid: Cobilas.GodotEngine.Utility.Physics.Hit2D.Name*
  commentId: Overload:Cobilas.GodotEngine.Utility.Physics.Hit2D.Name
  href: Cobilas.GodotEngine.Utility.Physics.Hit2D.html#Cobilas_GodotEngine_Utility_Physics_Hit2D_Name
  name: Name
  nameWithType: Hit2D.Name
  fullName: Cobilas.GodotEngine.Utility.Physics.Hit2D.Name
- uid: Godot.Collections.Dictionary
  commentId: T:Godot.Collections.Dictionary
  parent: Godot.Collections
  isExternal: true
  name: Dictionary
  nameWithType: Dictionary
  fullName: Godot.Collections.Dictionary
- uid: Cobilas.GodotEngine.Utility.Physics.Hit2D.IsValid*
  commentId: Overload:Cobilas.GodotEngine.Utility.Physics.Hit2D.IsValid
  href: Cobilas.GodotEngine.Utility.Physics.Hit2D.html#Cobilas_GodotEngine_Utility_Physics_Hit2D_IsValid_Godot_Collections_Dictionary_
  name: IsValid
  nameWithType: Hit2D.IsValid
  fullName: Cobilas.GodotEngine.Utility.Physics.Hit2D.IsValid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Godot.Collections
  commentId: N:Godot.Collections
  isExternal: true
  name: Godot.Collections
  nameWithType: Godot.Collections
  fullName: Godot.Collections
  spec.csharp:
  - uid: Godot
    name: Godot
    isExternal: true
  - name: .
  - uid: Godot.Collections
    name: Collections
    isExternal: true
  spec.vb:
  - uid: Godot
    name: Godot
    isExternal: true
  - name: .
  - uid: Godot.Collections
    name: Collections
    isExternal: true
- uid: Cobilas.GodotEngine.Utility.Physics.Hit2D
  commentId: T:Cobilas.GodotEngine.Utility.Physics.Hit2D
  parent: Cobilas.GodotEngine.Utility.Physics
  href: Cobilas.GodotEngine.Utility.Physics.Hit2D.html
  name: Hit2D
  nameWithType: Hit2D
  fullName: Cobilas.GodotEngine.Utility.Physics.Hit2D
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.InvalidCastException
  commentId: T:System.InvalidCastException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidcastexception
  name: InvalidCastException
  nameWithType: InvalidCastException
  fullName: System.InvalidCastException
- uid: Cobilas.GodotEngine.Utility.Physics.Hit2D.op_Explicit*
  commentId: Overload:Cobilas.GodotEngine.Utility.Physics.Hit2D.op_Explicit
  name: explicit operator
  nameWithType: Hit2D.explicit operator
  fullName: Cobilas.GodotEngine.Utility.Physics.Hit2D.explicit operator
  nameWithType.vb: Hit2D.CType
  fullName.vb: Cobilas.GodotEngine.Utility.Physics.Hit2D.CType
  name.vb: CType
  spec.csharp:
  - name: explicit
  - name: " "
  - name: operator
